/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 01 04:40:06 GMT 2025
 */

package com.jwetherell.algorithms.data_structures;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.jwetherell.algorithms.data_structures.SuffixTrie;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SuffixTrie_ESTest extends SuffixTrie_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SuffixTrie<String> suffixTrie0 = new SuffixTrie<String>("l47");
      boolean boolean0 = suffixTrie0.add("c+");
      boolean boolean1 = suffixTrie0.doesSubStringExist("c+");
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SuffixTrie<String> suffixTrie0 = new SuffixTrie<String>("\u2502   ");
      suffixTrie0.add("\u2514\u2500\u2500 \u0000\n    \u251C\u2500\u2500 \u2502\n    \u2502   \u2514\u2500\u2500  \n    \u2502       \u2514\u2500\u2500  \n    \u2502           \u2514\u2500\u2500 ( ) \u2502   \n    \u2514\u2500\u2500 ( )  \n        \u2514\u2500\u2500 ( )   \n            \u2514\u2500\u2500 ( )    \n");
      suffixTrie0.toString();
      // Undeclared exception!
      suffixTrie0.toString();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SuffixTrie<String> suffixTrie0 = new SuffixTrie<String>("l47");
      suffixTrie0.add("com.jwetherell.algorithms.data_structures.SuffixTrie");
      suffixTrie0.getSuffixes();
      suffixTrie0.getSuffixes();
      suffixTrie0.getSuffixes();
      // Undeclared exception!
      suffixTrie0.getSuffixes();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SuffixTrie<String> suffixTrie0 = new SuffixTrie<String>("~q'r%fJW");
      // Undeclared exception!
      suffixTrie0.add("\u2514\u2500\u2500 \u0000\n    \u251C\u2500\u2500 ~\n    \u2502   \u2514\u2500\u2500 q\n    \u2502       \u2514\u2500\u2500 '\n    \u2502           \u2514\u2500\u2500 r\n    \u2502               \u2514\u2500\u2500 %\n    \u2502                   \u2514\u2500\u2500 f\n    \u2502                       \u2514\u2500\u2500 J\n    \u2502                           \u2514\u2500\u2500 (W) ~q'r%fJW\n    \u251C\u2500\u2500 q\n    \u2502   \u2514\u2500\u2500 '\n    \u2502       \u2514\u2500\u2500 r\n    \u2502           \u2514\u2500\u2500 %\n    \u2502               \u2514\u2500\u2500 f\n    \u2502                   \u2514\u2500\u2500 J\n    \u2502                       \u2514\u2500\u2500 (W) q'r%fJW\n    \u251C\u2500\u2500 '\n    \u2502   \u2514\u2500\u2500 r\n    \u2502       \u2514\u2500\u2500 %\n    \u2502           \u2514\u2500\u2500 f\n    \u2502               \u2514\u2500\u2500 J\n    \u2502                   \u2514\u2500\u2500 (W) 'r%fJW\n    \u251C\u2500\u2500 r\n    \u2502   \u2514\u2500\u2500 %\n    \u2502       \u2514\u2500\u2500 f\n    \u2502           \u2514\u2500\u2500 J\n    \u2502               \u2514\u2500\u2500 (W) r%fJW\n    \u251C\u2500\u2500 %\n    \u2502   \u2514\u2500\u2500 f\n    \u2502       \u2514\u2500\u2500 J\n    \u2502           \u2514\u2500\u2500 (W) %fJW\n    \u251C\u2500\u2500 f\n    \u2502   \u2514\u2500\u2500 J\n    \u2502       \u2514\u2500\u2500 (W) fJW\n    \u251C\u2500\u2500 J\n    \u2502   \u2514\u2500\u2500 (W) JW\n    \u2514\u2500\u2500 (W) W\n");
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SuffixTrie<String> suffixTrie0 = new SuffixTrie<String>("A1");
      // Undeclared exception!
      try { 
        suffixTrie0.add((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jwetherell.algorithms.data_structures.SuffixTrie", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SuffixTrie<String> suffixTrie0 = new SuffixTrie<String>("\u2514\u2500\u2500 \u0000\n    \u251C\u2500\u2500 y\n    \u2502   \u2514\u2500\u2500 D\n    \u2502       \u2514\u2500\u2500 5\n    \u2502           \u2514\u2500\u2500 W\n    \u2502               \u2514\u2500\u2500 D\n    \u2502                   \u2514\u2500\u2500 j\n    \u2502                       \u2514\u2500\u2500 =\n    \u2502                           \u2514\u2500\u2500 W\n    \u2502                               \u2514\u2500\u2500 (r) yD5WDj=Wr\n    \u251C\u2500\u2500 D\n    \u2502   \u251C\u2500\u2500 5\n    \u2502   \u2502   \u2514\u2500\u2500 W\n    \u2502   \u2502       \u2514\u2500\u2500 D\n    \u2502   \u2502           \u2514\u2500\u2500 j\n    \u2502   \u2502               \u2514\u2500\u2500 =\n    \u2502   \u2502                   \u2514\u2500\u2500 W\n    \u2502   \u2502                       \u2514\u2500\u2500 (r) D5WDj=Wr\n    \u2502   \u2514\u2500\u2500 j\n    \u2502       \u2514\u2500\u2500 =\n    \u2502           \u2514\u2500\u2500 W\n    \u2502               \u2514\u2500\u2500 (r) Dj=Wr\n    \u251C\u2500\u2500 5\n    \u2502   \u2514\u2500\u2500 W\n    \u2502       \u2514\u2500\u2500 D\n    \u2502           \u2514\u2500\u2500 j\n    \u2502               \u2514\u2500\u2500 =\n    \u2502                   \u2514\u2500\u2500 W\n    \u2502                       \u2514\u2500\u2500 (r) 5WDj=Wr\n    \u251C\u2500\u2500 W\n    \u2502   \u251C\u2500\u2500 D\n    \u2502   \u2502   \u2514\u2500\u2500 j\n    \u2502   \u2502       \u2514\u2500\u2500 =\n    \u2502   \u2502           \u2514\u2500\u2500 W\n    \u2502   \u2502               \u2514\u2500\u2500 (r) WDj=Wr\n    \u2502   \u2514\u2500\u2500 (r) Wr\n    \u251C\u2500\u2500 j\n    \u2502   \u2514\u2500\u2500 =\n    \u2502       \u2514\u2500\u2500 W\n    \u2502           \u2514\u2500\u2500 (r) j=Wr\n    \u251C\u2500\u2500 =\n    \u2502   \u2514\u2500\u2500 W\n    \u2502       \u2514\u2500\u2500 (r) =Wr\n    \u2514\u2500\u2500 (r) r\n");
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SuffixTrie<String> suffixTrie0 = null;
      try {
        suffixTrie0 = new SuffixTrie<String>((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jwetherell.algorithms.data_structures.SuffixTrie", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SuffixTrie<String> suffixTrie0 = new SuffixTrie<String>("<o");
      boolean boolean0 = suffixTrie0.add("\u2514\u2500\u2500 \u0000\n    \u251C\u2500\u2500 <\n    \u2502   \u2514\u2500\u2500 (o) <o\n    \u2514\u2500\u2500 (o) o\n");
      assertTrue(boolean0);
      
      Set<String> set0 = suffixTrie0.getSuffixes();
      assertTrue(set0.contains("<o"));
      assertEquals(50, set0.size());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SuffixTrie<String> suffixTrie0 = new SuffixTrie<String>("com.jwetherell.algorithms.data_structures.Trie$TriePrinter");
      boolean boolean0 = suffixTrie0.doesSubStringExist("/`J");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SuffixTrie<String> suffixTrie0 = new SuffixTrie<String>("");
      // Undeclared exception!
      try { 
        suffixTrie0.doesSubStringExist("K)_O WT?s{lF");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jwetherell.algorithms.data_structures.SuffixTrie", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SuffixTrie<String> suffixTrie0 = new SuffixTrie<String>("");
      // Undeclared exception!
      try { 
        suffixTrie0.getSuffixes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jwetherell.algorithms.data_structures.SuffixTrie", e);
      }
  }
}

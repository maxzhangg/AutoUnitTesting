/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 01 04:45:28 GMT 2025
 */

package com.jwetherell.algorithms.data_structures;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.jwetherell.algorithms.data_structures.Trie;
import com.jwetherell.algorithms.data_structures.TrieMap;
import java.nio.CharBuffer;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TrieMap_ESTest extends TrieMap_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Character character0 = Character.valueOf('\u0011');
      TrieMap.TrieMapNode<CharBuffer> trieMap_TrieMapNode0 = new TrieMap.TrieMapNode<CharBuffer>((Trie.Node) null, character0, false);
      Trie.Node trie_Node0 = new Trie.Node(trieMap_TrieMapNode0, character0, false);
      trie_Node0.childrenSize = (-3);
      String string0 = TrieMap.TrieMapPrinter.getString((Trie.Node) trie_Node0, "", "", false);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Character character0 = Character.valueOf('[');
      TrieMap.TrieMapNode<CharBuffer> trieMap_TrieMapNode0 = new TrieMap.TrieMapNode<CharBuffer>((Trie.Node) null, character0, false);
      trieMap_TrieMapNode0.childrenSize = (-1);
      TrieMap.TrieMapNode<TrieMap.TrieMapNode<CharBuffer>> trieMap_TrieMapNode1 = new TrieMap.TrieMapNode<TrieMap.TrieMapNode<CharBuffer>>((Trie.Node) null, character0, false, trieMap_TrieMapNode0);
      String string0 = trieMap_TrieMapNode1.toString();
      assertEquals("key=[ value=\n", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TrieMap<String, String> trieMap0 = new TrieMap<String, String>();
      trieMap0.put(")%{2r|/<9_[vMwN{5kR", ")%{2r|/<9_[vMwN{5kR");
      int int0 = trieMap0.size();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TrieMap<CharBuffer, CharBuffer> trieMap0 = new TrieMap<CharBuffer, CharBuffer>();
      Character character0 = new Character('*');
      TrieMap.TrieMapNode<CharBuffer> trieMap_TrieMapNode0 = new TrieMap.TrieMapNode<CharBuffer>((Trie.Node) null, character0, true);
      Trie.Node trie_Node0 = trieMap0.createNewNode(trieMap_TrieMapNode0, character0, true);
      assertNotNull(trie_Node0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TrieMap<CharBuffer, CharBuffer> trieMap0 = new TrieMap<CharBuffer, CharBuffer>();
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      trieMap0.put(charBuffer0, charBuffer0);
      boolean boolean0 = trieMap0.contains(charBuffer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TrieMap<CharBuffer, CharBuffer> trieMap0 = new TrieMap<CharBuffer, CharBuffer>();
      CharBuffer charBuffer0 = CharBuffer.allocate(2059);
      trieMap0.put(charBuffer0, charBuffer0);
      // Undeclared exception!
      try { 
        trieMap0.toString();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TrieMap<String, String> trieMap0 = new TrieMap<String, String>();
      trieMap0.put("\u0000}", "\u0000}");
      // Undeclared exception!
      try { 
        trieMap0.remove((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jwetherell.algorithms.data_structures.Trie", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TrieMap<String, String> trieMap0 = new TrieMap<String, String>();
      // Undeclared exception!
      try { 
        trieMap0.put("", "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TrieMap<String, String> trieMap0 = new TrieMap<String, String>();
      // Undeclared exception!
      try { 
        trieMap0.put((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jwetherell.algorithms.data_structures.Trie", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charBuffer0.put(charArray0);
      TrieMap<CharBuffer, CharBuffer> trieMap0 = new TrieMap<CharBuffer, CharBuffer>();
      // Undeclared exception!
      try { 
        trieMap0.put(charBuffer0, charBuffer0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TrieMap<String, String> trieMap0 = new TrieMap<String, String>();
      trieMap0.put("k#BA/w", "k#BA/w");
      // Undeclared exception!
      try { 
        trieMap0.get((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jwetherell.algorithms.data_structures.Trie", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TrieMap<String, String> trieMap0 = new TrieMap<String, String>();
      trieMap0.put("$2\u0007iI~p94", "$2\u0007iI~p94");
      // Undeclared exception!
      try { 
        trieMap0.contains((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jwetherell.algorithms.data_structures.Trie", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Character character0 = new Character('\u0011');
      TrieMap.TrieMapNode<CharBuffer> trieMap_TrieMapNode0 = new TrieMap.TrieMapNode<CharBuffer>((Trie.Node) null, character0, false);
      Trie.Node trie_Node0 = new Trie.Node(trieMap_TrieMapNode0, character0, true);
      trie_Node0.childrenSize = 1;
      // Undeclared exception!
      try { 
        TrieMap.TrieMapPrinter.getString((Trie.Node) trie_Node0, "", "", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jwetherell.algorithms.data_structures.TrieMap$TrieMapPrinter", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Character character0 = Character.valueOf('A');
      TrieMap.TrieMapNode<CharBuffer> trieMap_TrieMapNode0 = new TrieMap.TrieMapNode<CharBuffer>((Trie.Node) null, character0, true, (CharBuffer) null);
      trieMap_TrieMapNode0.childrenSize = 805;
      // Undeclared exception!
      try { 
        TrieMap.TrieMapPrinter.getString((Trie.Node) trieMap_TrieMapNode0, "", "", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jwetherell.algorithms.data_structures.TrieMap$TrieMapPrinter", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Character character0 = Character.valueOf('\u0011');
      TrieMap.TrieMapNode<CharBuffer> trieMap_TrieMapNode0 = new TrieMap.TrieMapNode<CharBuffer>((Trie.Node) null, character0, true);
      Trie.Node trie_Node0 = new Trie.Node(trieMap_TrieMapNode0, character0, true);
      trie_Node0.childrenSize = 1;
      // Undeclared exception!
      try { 
        TrieMap.TrieMapPrinter.getString((Trie.Node) trie_Node0, "", "", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jwetherell.algorithms.data_structures.TrieMap$TrieMapPrinter", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Character character0 = new Character(';');
      TrieMap.TrieMapNode<CharBuffer> trieMap_TrieMapNode0 = new TrieMap.TrieMapNode<CharBuffer>((Trie.Node) null, character0, true);
      TrieMap.TrieMapNode<CharBuffer> trieMap_TrieMapNode1 = new TrieMap.TrieMapNode<CharBuffer>(trieMap_TrieMapNode0, character0, false, (CharBuffer) null);
      String string0 = TrieMap.TrieMapPrinter.getString((Trie.Node) trieMap_TrieMapNode1, "", "", true);
      assertEquals("\u2514\u2500\u2500 ;\n", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TrieMap<String, String> trieMap0 = new TrieMap<String, String>();
      // Undeclared exception!
      try { 
        trieMap0.createNewNode((Trie.Node) null, (Character) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jwetherell.algorithms.data_structures.Trie$Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TrieMap<String, String> trieMap0 = new TrieMap<String, String>();
      int int0 = trieMap0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TrieMap<CharBuffer, TrieMap.TrieMapNode<CharBuffer>> trieMap0 = new TrieMap<CharBuffer, TrieMap.TrieMapNode<CharBuffer>>();
      // Undeclared exception!
      try { 
        TrieMap.TrieMapPrinter.getString(trieMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jwetherell.algorithms.data_structures.TrieMap$TrieMapPrinter", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Character character0 = Character.valueOf('2');
      TrieMap.TrieMapNode<CharBuffer> trieMap_TrieMapNode0 = new TrieMap.TrieMapNode<CharBuffer>((Trie.Node) null, character0, true, (CharBuffer) null);
      trieMap_TrieMapNode0.childrenSize = (int) '2';
      // Undeclared exception!
      try { 
        TrieMap.TrieMapPrinter.getString((Trie.Node) trieMap_TrieMapNode0, "aP", "aP", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jwetherell.algorithms.data_structures.TrieMap$TrieMapPrinter", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TrieMap<String, String> trieMap0 = new TrieMap<String, String>();
      trieMap0.put("O:52?y-R;e:=Y[Vc", "xC");
      trieMap0.put("xC", "xC");
      String string0 = trieMap0.toString();
      assertEquals("\u2514\u2500\u2500 null\n    \u251C\u2500\u2500 O\n    \u2502   \u2514\u2500\u2500 O:\n    \u2502       \u2514\u2500\u2500 O:5\n    \u2502           \u2514\u2500\u2500 O:52\n    \u2502               \u2514\u2500\u2500 O:52?\n    \u2502                   \u2514\u2500\u2500 O:52?y\n    \u2502                       \u2514\u2500\u2500 O:52?y-\n    \u2502                           \u2514\u2500\u2500 O:52?y-R\n    \u2502                               \u2514\u2500\u2500 O:52?y-R;\n    \u2502                                   \u2514\u2500\u2500 O:52?y-R;e\n    \u2502                                       \u2514\u2500\u2500 O:52?y-R;e:\n    \u2502                                           \u2514\u2500\u2500 O:52?y-R;e:=\n    \u2502                                               \u2514\u2500\u2500 O:52?y-R;e:=Y\n    \u2502                                                   \u2514\u2500\u2500 O:52?y-R;e:=Y[\n    \u2502                                                       \u2514\u2500\u2500 O:52?y-R;e:=Y[V\n    \u2502                                                           \u2514\u2500\u2500 (c) O:52?y-R;e:=Y[Vc = {xC}\n    \u2514\u2500\u2500 x\n        \u2514\u2500\u2500 (C) xC = {xC}\n", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Character character0 = new Character(';');
      TrieMap.TrieMapNode<CharBuffer> trieMap_TrieMapNode0 = new TrieMap.TrieMapNode<CharBuffer>((Trie.Node) null, character0, true);
      String string0 = TrieMap.TrieMapPrinter.getString((Trie.Node) trieMap_TrieMapNode0, (String) null, (String) null, false);
      assertEquals("null\u251C\u2500\u2500 (;) ; = {null}\n", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Character character0 = Character.valueOf(';');
      TrieMap.TrieMapNode<CharBuffer> trieMap_TrieMapNode0 = new TrieMap.TrieMapNode<CharBuffer>((Trie.Node) null, character0, true);
      trieMap_TrieMapNode0.addChild((Trie.Node) null);
      // Undeclared exception!
      try { 
        trieMap_TrieMapNode0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jwetherell.algorithms.data_structures.TrieMap$TrieMapNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Character character0 = new Character('5');
      TrieMap.TrieMapNode<CharBuffer> trieMap_TrieMapNode0 = new TrieMap.TrieMapNode<CharBuffer>((Trie.Node) null, character0, true);
      CharBuffer charBuffer0 = CharBuffer.allocate(1);
      TrieMap.TrieMapNode<CharBuffer> trieMap_TrieMapNode1 = new TrieMap.TrieMapNode<CharBuffer>(trieMap_TrieMapNode0, character0, true, charBuffer0);
      String string0 = trieMap_TrieMapNode1.toString();
      assertEquals("key=5 value=\u0000\n", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TrieMap<String, String> trieMap0 = new TrieMap<String, String>();
      trieMap0.put("xFQH j:q#4=N+e(Y", "xFQH j:q#4=N+e(Y");
      trieMap0.remove("");
      boolean boolean0 = trieMap0.validate();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TrieMap<String, String> trieMap0 = new TrieMap<String, String>();
      trieMap0.put("xw{:5>YR", (String) null);
      boolean boolean0 = trieMap0.validate();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TrieMap<String, String> trieMap0 = new TrieMap<String, String>();
      trieMap0.put("com.jwetherell.algorithms.data_structures.TrieMap$JavaCompatibleTrieMap", "com.jwetherell.algorithms.data_structures.TrieMap$JavaCompatibleTrieMap");
      boolean boolean0 = trieMap0.validate();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TrieMap<String, String> trieMap0 = new TrieMap<String, String>();
      trieMap0.put("$2\u0007pI~p94", "$2\u0007pI~p94");
      String string0 = trieMap0.remove("$2\u0007pI~p94");
      assertEquals("$2\u0007pI~p94", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TrieMap<CharBuffer, TrieMap.TrieMapNode<CharBuffer>> trieMap0 = new TrieMap<CharBuffer, TrieMap.TrieMapNode<CharBuffer>>();
      CharBuffer charBuffer0 = CharBuffer.allocate(4103);
      TrieMap.TrieMapNode<CharBuffer> trieMap_TrieMapNode0 = trieMap0.remove(charBuffer0);
      assertNull(trieMap_TrieMapNode0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      TrieMap<String, String> trieMap0 = new TrieMap<String, String>();
      trieMap0.put("xC", "xC");
      String string0 = trieMap0.get("xC");
      assertEquals("xC", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      TrieMap<CharBuffer, CharBuffer> trieMap0 = new TrieMap<CharBuffer, CharBuffer>();
      char[] charArray0 = new char[8];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBuffer charBuffer1 = trieMap0.get(charBuffer0);
      assertNull(charBuffer1);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      TrieMap<String, String> trieMap0 = new TrieMap<String, String>();
      trieMap0.put("x", "x");
      trieMap0.put("x", (String) null);
      assertEquals(1, trieMap0.size());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      TrieMap.TrieMapPrinter trieMap_TrieMapPrinter0 = new TrieMap.TrieMapPrinter();
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      TrieMap<CharBuffer, CharBuffer> trieMap0 = new TrieMap<CharBuffer, CharBuffer>();
      // Undeclared exception!
      try { 
        trieMap0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jwetherell.algorithms.data_structures.TrieMap$TrieMapPrinter", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      TrieMap<CharBuffer, CharBuffer> trieMap0 = new TrieMap<CharBuffer, CharBuffer>();
      boolean boolean0 = trieMap0.validate();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      TrieMap<CharBuffer, CharBuffer> trieMap0 = new TrieMap<CharBuffer, CharBuffer>();
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 0, 1);
      boolean boolean0 = trieMap0.contains(charBuffer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      TrieMap<CharBuffer, CharBuffer> trieMap0 = new TrieMap<CharBuffer, CharBuffer>();
      trieMap0.clear();
      assertEquals(0, trieMap0.size());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      TrieMap<CharBuffer, CharBuffer> trieMap0 = new TrieMap<CharBuffer, CharBuffer>();
      Map<CharBuffer, CharBuffer> map0 = trieMap0.toMap();
      assertEquals(0, map0.size());
  }
}

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass3 = serializable2.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass5 = serializable4.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean6 = strTrieMap0.contains("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable9 = strTrieMap0.put("", (java.io.Serializable) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        boolean boolean5 = strTrieMap0.contains("");
        boolean boolean7 = strTrieMap0.contains("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable10 = strTrieMap0.put("", (java.io.Serializable) 10.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass6 = serializable5.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean4 = strTrieMap0.validate();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap6 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable8 = strTrieMap6.get("hi!");
        java.lang.Class<?> wildcardClass9 = strTrieMap6.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable10 = strTrieMap0.put("", (java.io.Serializable) wildcardClass9);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        strTrieMap0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable7 = strTrieMap0.put("", (java.io.Serializable) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        boolean boolean8 = strTrieMap0.contains("");
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable11 = strTrieMap0.put("", (java.io.Serializable) (-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.CharSequence, java.lang.Object> charSequenceTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.CharSequence, java.lang.Object>();
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable6 = strTrieMap0.put("", (java.io.Serializable) true);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.lang.CharSequence> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.lang.CharSequence>();
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable5 = strTrieMap0.put("", (java.io.Serializable) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        java.io.Serializable serializable4 = strTrieMap0.get("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass5 = serializable4.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean5 = strTrieMap0.contains("hi!");
        java.lang.Class<?> wildcardClass6 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        boolean boolean8 = strTrieMap0.validate();
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable11 = strTrieMap0.put("", (java.io.Serializable) 1.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.get("");
        java.io.Serializable serializable9 = strTrieMap0.get("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass10 = serializable9.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNull(serializable9);
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable5 = strTrieMap0.put("", (java.io.Serializable) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.CharSequence, java.lang.reflect.GenericDeclaration> charSequenceTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.CharSequence, java.lang.reflect.GenericDeclaration>();
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        java.io.Serializable serializable4 = strTrieMap0.get("");
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable7 = strTrieMap0.put("", (java.io.Serializable) 100.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.lang.reflect.Type> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.lang.reflect.Type>();
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        boolean boolean5 = strTrieMap0.contains("");
        boolean boolean7 = strTrieMap0.contains("hi!");
        int int8 = strTrieMap0.size();
        boolean boolean10 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable12 = strTrieMap0.remove("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass13 = serializable12.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(serializable12);
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        java.util.Map<java.lang.String, java.io.Serializable> strMap5 = strTrieMap0.toMap();
        java.io.Serializable serializable7 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass8 = serializable7.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(serializable7);
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        boolean boolean8 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable10 = strTrieMap0.remove("hi!");
        java.io.Serializable serializable13 = strTrieMap0.put("hi!", (java.io.Serializable) "");
        int int14 = strTrieMap0.size();
        strTrieMap0.clear();
        java.io.Serializable serializable17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable18 = strTrieMap0.put("", serializable17);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable3 = strTrieMap0.put("", (java.io.Serializable) "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        strTrieMap0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable11 = strTrieMap0.put("", (java.io.Serializable) (-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.lang.Object> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.lang.Object>();
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean5 = strTrieMap0.contains("hi!");
        boolean boolean7 = strTrieMap0.contains("");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        java.io.Serializable serializable11 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass12 = serializable11.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(serializable11);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.CharSequence, java.lang.CharSequence> charSequenceTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.CharSequence, java.lang.CharSequence>();
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap9 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable11 = strTrieMap9.get("hi!");
        strTrieMap9.clear();
        java.io.Serializable serializable14 = strTrieMap9.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap15 = strTrieMap9.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap16 = strTrieMap9.toMap();
        java.lang.Class<?> wildcardClass17 = strTrieMap9.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable18 = strTrieMap0.put("", (java.io.Serializable) wildcardClass17);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        strTrieMap0.clear();
        int int9 = strTrieMap0.size();
        int int10 = strTrieMap0.size();
        java.io.Serializable serializable12 = strTrieMap0.get("");
        strTrieMap0.clear();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(serializable12);
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        strTrieMap0.clear();
        int int9 = strTrieMap0.size();
        int int10 = strTrieMap0.size();
        java.io.Serializable serializable12 = strTrieMap0.get("hi!");
        java.lang.Class<?> wildcardClass13 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable3 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) 10);
        org.junit.Assert.assertNull(serializable3);
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.lang.String> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.lang.String>();
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        boolean boolean9 = strTrieMap0.contains("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap10 = strTrieMap0.toMap();
        java.lang.String str11 = strTrieMap0.toString();
        java.util.Map<java.lang.String, java.io.Serializable> strMap12 = strTrieMap0.toMap();
        java.lang.Class<?> wildcardClass13 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n" + "'", str11, "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.CharSequence, java.lang.String> charSequenceTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.CharSequence, java.lang.String>();
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        java.io.Serializable serializable4 = strTrieMap0.get("");
        java.util.Map<java.lang.String, java.io.Serializable> strMap5 = strTrieMap0.toMap();
        java.lang.Class<?> wildcardClass6 = strMap5.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable10 = strTrieMap0.put("", (java.io.Serializable) "\u2514\u2500\u2500 null\n");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        int int6 = strTrieMap0.size();
        java.io.Serializable serializable8 = strTrieMap0.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        boolean boolean10 = strTrieMap0.validate();
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable13 = strTrieMap0.put("", (java.io.Serializable) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.CharSequence, java.lang.reflect.Type> charSequenceTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.CharSequence, java.lang.reflect.Type>();
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean5 = strTrieMap0.contains("hi!");
        boolean boolean7 = strTrieMap0.contains("");
        strTrieMap0.clear();
        java.lang.Class<?> wildcardClass9 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean4 = strTrieMap0.validate();
        boolean boolean6 = strTrieMap0.contains("");
        java.io.Serializable serializable8 = strTrieMap0.get("");
        int int9 = strTrieMap0.size();
        boolean boolean11 = strTrieMap0.contains("");
        strTrieMap0.clear();
        strTrieMap0.clear();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        java.util.Map<java.lang.String, java.io.Serializable> strMap5 = strTrieMap0.toMap();
        java.io.Serializable serializable7 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(serializable7);
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, com.jwetherell.algorithms.data_structures.interfaces.IMap<java.lang.String, java.io.Serializable>> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, com.jwetherell.algorithms.data_structures.interfaces.IMap<java.lang.String, java.io.Serializable>>();
        java.lang.Class<?> wildcardClass1 = strTrieMap0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean4 = strTrieMap0.validate();
        boolean boolean6 = strTrieMap0.contains("");
        java.io.Serializable serializable8 = strTrieMap0.get("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass9 = serializable8.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(serializable8);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        strTrieMap0.clear();
        java.io.Serializable serializable6 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) 0);
        java.io.Serializable serializable8 = strTrieMap0.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        java.lang.Class<?> wildcardClass10 = strMap9.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean6 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable8 = strTrieMap0.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        boolean boolean10 = strTrieMap0.validate();
        java.lang.Class<?> wildcardClass11 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.CharSequence, java.lang.Comparable<java.lang.String>> charSequenceTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.CharSequence, java.lang.Comparable<java.lang.String>>();
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        boolean boolean3 = strTrieMap0.validate();
        java.util.Map<java.lang.String, java.io.Serializable> strMap4 = strTrieMap0.toMap();
        boolean boolean6 = strTrieMap0.contains("");
        int int7 = strTrieMap0.size();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        int int6 = strTrieMap0.size();
        java.io.Serializable serializable8 = strTrieMap0.get("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass9 = serializable8.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(serializable8);
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        int int6 = strTrieMap0.size();
        java.io.Serializable serializable8 = strTrieMap0.get("hi!");
        boolean boolean10 = strTrieMap0.contains("hi!");
        boolean boolean12 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        java.util.Map<java.lang.String, java.io.Serializable> strMap13 = strTrieMap0.toMap();
        java.io.Serializable serializable15 = strTrieMap0.get("hi!");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(serializable15);
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        int int6 = strTrieMap0.size();
        java.io.Serializable serializable8 = strTrieMap0.get("hi!");
        int int9 = strTrieMap0.size();
        int int10 = strTrieMap0.size();
        strTrieMap0.clear();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) 1.0f);
        java.io.Serializable serializable13 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        boolean boolean14 = strTrieMap0.validate();
        java.io.Serializable serializable17 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n", (java.io.Serializable) (-1.0f));
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass18 = serializable17.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(serializable17);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        boolean boolean7 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable9 = strTrieMap0.get("");
        strTrieMap0.clear();
        java.io.Serializable serializable12 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        java.io.Serializable serializable14 = strTrieMap0.get("hi!");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertNull(serializable14);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        boolean boolean5 = strTrieMap0.contains("");
        boolean boolean7 = strTrieMap0.contains("hi!");
        boolean boolean8 = strTrieMap0.validate();
        boolean boolean9 = strTrieMap0.validate();
        strTrieMap0.clear();
        int int11 = strTrieMap0.size();
        java.io.Serializable serializable13 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(serializable13);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        java.util.Map<java.lang.String, java.io.Serializable> strMap5 = strTrieMap0.toMap();
        java.io.Serializable serializable8 = strTrieMap0.put("hi!", (java.io.Serializable) 0.0f);
        boolean boolean9 = strTrieMap0.validate();
        java.lang.Class<?> wildcardClass10 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap9 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.lang.Class<?> wildcardClass10 = strTrieMap9.getClass();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) wildcardClass10);
        boolean boolean13 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable15 = null;
        java.io.Serializable serializable16 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", serializable15);
        strTrieMap0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = strTrieMap0.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(serializable16);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        java.lang.String str8 = strTrieMap0.toString();
        java.io.Serializable serializable10 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable13 = strTrieMap0.put("", (java.io.Serializable) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n" + "'", str8, "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        org.junit.Assert.assertNull(serializable10);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        boolean boolean9 = strTrieMap0.contains("");
        java.util.Map<java.lang.String, java.io.Serializable> strMap10 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap11 = strTrieMap0.toMap();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap9 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.lang.Class<?> wildcardClass10 = strTrieMap9.getClass();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) wildcardClass10);
        boolean boolean13 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable15 = null;
        java.io.Serializable serializable16 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", serializable15);
        java.io.Serializable serializable18 = strTrieMap0.remove("\u2514\u2500\u2500 null\n");
        java.io.Serializable serializable20 = strTrieMap0.remove("");
        java.io.Serializable serializable23 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n", (java.io.Serializable) "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass24 = serializable23.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertNull(serializable18);
        org.junit.Assert.assertNull(serializable20);
        org.junit.Assert.assertNull(serializable23);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        strTrieMap0.clear();
        java.io.Serializable serializable6 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) 0);
        java.io.Serializable serializable8 = strTrieMap0.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        java.io.Serializable serializable11 = strTrieMap0.get("hi!");
        java.io.Serializable serializable13 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(serializable13);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap8 = strTrieMap0.toMap();
        java.io.Serializable serializable10 = strTrieMap0.get("\u2514\u2500\u2500 null\n");
        java.io.Serializable serializable12 = strTrieMap0.get("\u2514\u2500\u2500 null\n");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass13 = serializable12.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertNull(serializable12);
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean5 = strTrieMap0.contains("hi!");
        boolean boolean7 = strTrieMap0.contains("");
        strTrieMap0.clear();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap10 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable12 = strTrieMap10.get("");
        boolean boolean14 = strTrieMap10.contains("hi!");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap16 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable18 = strTrieMap16.get("hi!");
        java.io.Serializable serializable20 = strTrieMap16.get("");
        java.lang.Class<?> wildcardClass21 = strTrieMap16.getClass();
        java.io.Serializable serializable22 = strTrieMap10.put("hi!", (java.io.Serializable) wildcardClass21);
        java.util.Map<java.lang.String, java.io.Serializable> strMap23 = strTrieMap10.toMap();
        java.lang.Class<?> wildcardClass24 = strMap23.getClass();
        java.io.Serializable serializable25 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n", (java.io.Serializable) wildcardClass24);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass26 = serializable25.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(serializable18);
        org.junit.Assert.assertNull(serializable20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNull(serializable22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNull(serializable25);
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        int int6 = strTrieMap0.size();
        java.io.Serializable serializable8 = strTrieMap0.get("hi!");
        boolean boolean10 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable12 = strTrieMap0.get("");
        java.io.Serializable serializable14 = strTrieMap0.get("");
        int int15 = strTrieMap0.size();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        boolean boolean6 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        java.io.Serializable serializable9 = strTrieMap0.put("\u2514\u2500\u2500 null\n", (java.io.Serializable) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass10 = serializable9.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(serializable9);
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean6 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable8 = strTrieMap0.get("");
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        boolean boolean10 = strTrieMap0.validate();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        boolean boolean5 = strTrieMap0.contains("");
        boolean boolean7 = strTrieMap0.contains("hi!");
        int int8 = strTrieMap0.size();
        boolean boolean10 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable12 = strTrieMap0.remove("");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap14 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable16 = strTrieMap14.get("");
        strTrieMap14.clear();
        java.io.Serializable serializable20 = strTrieMap14.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) 0);
        java.lang.Class<?> wildcardClass21 = strTrieMap14.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable22 = strTrieMap0.put("", (java.io.Serializable) wildcardClass21);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertNull(serializable20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean4 = strTrieMap0.validate();
        java.io.Serializable serializable6 = strTrieMap0.get("hi!");
        boolean boolean8 = strTrieMap0.contains("");
        boolean boolean9 = strTrieMap0.validate();
        java.io.Serializable serializable11 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        java.lang.Class<?> wildcardClass12 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        boolean boolean5 = strTrieMap0.contains("");
        boolean boolean7 = strTrieMap0.contains("hi!");
        boolean boolean8 = strTrieMap0.validate();
        boolean boolean9 = strTrieMap0.validate();
        strTrieMap0.clear();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.lang.reflect.AnnotatedElement> strTrieMap12 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.lang.reflect.AnnotatedElement>();
        java.lang.Class<?> wildcardClass13 = strTrieMap12.getClass();
        java.io.Serializable serializable14 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n", (java.io.Serializable) wildcardClass13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass15 = serializable14.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNull(serializable14);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        int int6 = strTrieMap0.size();
        java.io.Serializable serializable8 = strTrieMap0.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        boolean boolean10 = strTrieMap0.validate();
        boolean boolean11 = strTrieMap0.validate();
        java.lang.Class<?> wildcardClass12 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        boolean boolean9 = strTrieMap0.contains("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap10 = strTrieMap0.toMap();
        java.lang.String str11 = strTrieMap0.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable14 = strTrieMap0.put("", (java.io.Serializable) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n" + "'", str11, "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        boolean boolean9 = strTrieMap0.contains("hi!");
        strTrieMap0.clear();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap12 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable14 = strTrieMap12.get("");
        java.io.Serializable serializable16 = strTrieMap12.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap17 = strTrieMap12.toMap();
        boolean boolean19 = strTrieMap12.contains("\u2514\u2500\u2500 null\n");
        java.lang.Class<?> wildcardClass20 = strTrieMap12.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable21 = strTrieMap0.put("", (java.io.Serializable) wildcardClass20);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.lang.Class<?>> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.lang.Class<?>>();
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        boolean boolean5 = strTrieMap0.contains("");
        boolean boolean7 = strTrieMap0.contains("hi!");
        int int8 = strTrieMap0.size();
        boolean boolean10 = strTrieMap0.contains("\u2514\u2500\u2500 null\n");
        strTrieMap0.clear();
        boolean boolean13 = strTrieMap0.contains("");
        java.io.Serializable serializable15 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(serializable15);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap9 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.lang.Class<?> wildcardClass10 = strTrieMap9.getClass();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) wildcardClass10);
        boolean boolean13 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable15 = strTrieMap0.get("hi!");
        java.io.Serializable serializable17 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.io.Serializable serializable20 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n", (java.io.Serializable) (-1.0d));
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 100 + "'", serializable15, 100);
        org.junit.Assert.assertNull(serializable17);
        org.junit.Assert.assertNull(serializable20);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.remove("");
        boolean boolean3 = strTrieMap0.validate();
        java.io.Serializable serializable5 = strTrieMap0.remove("");
        boolean boolean6 = strTrieMap0.validate();
        strTrieMap0.clear();
        boolean boolean9 = strTrieMap0.contains("\u2514\u2500\u2500 null\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) 1.0f);
        java.io.Serializable serializable13 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        boolean boolean15 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        java.io.Serializable serializable7 = strTrieMap0.get("");
        boolean boolean9 = strTrieMap0.contains("\u2514\u2500\u2500 null\n");
        int int10 = strTrieMap0.size();
        java.lang.Class<?> wildcardClass11 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean5 = strTrieMap0.contains("hi!");
        boolean boolean7 = strTrieMap0.contains("");
        strTrieMap0.clear();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap10 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable12 = strTrieMap10.get("");
        boolean boolean14 = strTrieMap10.contains("hi!");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap16 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable18 = strTrieMap16.get("hi!");
        java.io.Serializable serializable20 = strTrieMap16.get("");
        java.lang.Class<?> wildcardClass21 = strTrieMap16.getClass();
        java.io.Serializable serializable22 = strTrieMap10.put("hi!", (java.io.Serializable) wildcardClass21);
        java.util.Map<java.lang.String, java.io.Serializable> strMap23 = strTrieMap10.toMap();
        java.lang.Class<?> wildcardClass24 = strMap23.getClass();
        java.io.Serializable serializable25 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n", (java.io.Serializable) wildcardClass24);
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap27 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable29 = strTrieMap27.get("");
        java.io.Serializable serializable31 = strTrieMap27.remove("");
        boolean boolean33 = strTrieMap27.contains("hi!");
        java.io.Serializable serializable35 = strTrieMap27.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap36 = strTrieMap27.toMap();
        int int37 = strTrieMap27.size();
        java.io.Serializable serializable39 = strTrieMap27.remove("hi!");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap41 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable43 = strTrieMap41.get("hi!");
        strTrieMap41.clear();
        java.io.Serializable serializable46 = strTrieMap41.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap47 = strTrieMap41.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap48 = strTrieMap41.toMap();
        java.lang.Class<?> wildcardClass49 = strTrieMap41.getClass();
        java.io.Serializable serializable50 = strTrieMap27.put("hi!", (java.io.Serializable) wildcardClass49);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable51 = strTrieMap0.put("", (java.io.Serializable) wildcardClass49);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(serializable18);
        org.junit.Assert.assertNull(serializable20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNull(serializable22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNull(serializable25);
        org.junit.Assert.assertNull(serializable29);
        org.junit.Assert.assertNull(serializable31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(serializable35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(serializable39);
        org.junit.Assert.assertNull(serializable43);
        org.junit.Assert.assertNull(serializable46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNull(serializable50);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean5 = strTrieMap0.contains("hi!");
        strTrieMap0.clear();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) 1.0f);
        java.util.Map<java.lang.String, java.io.Serializable> strMap12 = strTrieMap0.toMap();
        java.lang.Class<?> wildcardClass13 = strMap12.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        strTrieMap0.clear();
        strTrieMap0.clear();
        java.lang.Class<?> wildcardClass10 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        boolean boolean3 = strTrieMap0.validate();
        java.util.Map<java.lang.String, java.io.Serializable> strMap4 = strTrieMap0.toMap();
        int int5 = strTrieMap0.size();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        java.io.Serializable serializable7 = strTrieMap0.get("");
        boolean boolean9 = strTrieMap0.contains("\u2514\u2500\u2500 null\n");
        strTrieMap0.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable13 = strTrieMap0.put("", (java.io.Serializable) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.CharSequence, java.lang.Class<?>> charSequenceTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.CharSequence, java.lang.Class<?>>();
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        java.io.Serializable serializable7 = strTrieMap0.remove("");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap9 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable11 = strTrieMap9.get("");
        java.io.Serializable serializable13 = strTrieMap9.get("hi!");
        java.io.Serializable serializable16 = strTrieMap9.put("hi!", (java.io.Serializable) true);
        strTrieMap9.clear();
        int int18 = strTrieMap9.size();
        int int19 = strTrieMap9.size();
        boolean boolean21 = strTrieMap9.contains("hi!");
        strTrieMap9.clear();
        java.io.Serializable serializable24 = strTrieMap9.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        java.lang.Class<?> wildcardClass25 = strTrieMap9.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable26 = strTrieMap0.put("", (java.io.Serializable) wildcardClass25);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(serializable24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        strTrieMap0.clear();
        boolean boolean4 = strTrieMap0.validate();
        java.util.Map<java.lang.String, java.io.Serializable> strMap5 = strTrieMap0.toMap();
        boolean boolean6 = strTrieMap0.validate();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean6 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable8 = strTrieMap0.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        boolean boolean11 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        boolean boolean8 = strTrieMap0.validate();
        java.lang.String str9 = strTrieMap0.toString();
        java.io.Serializable serializable12 = strTrieMap0.put("hi!", (java.io.Serializable) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass13 = serializable12.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n" + "'", str9, "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        org.junit.Assert.assertNull(serializable12);
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean4 = strTrieMap0.validate();
        boolean boolean6 = strTrieMap0.contains("");
        java.io.Serializable serializable8 = strTrieMap0.get("");
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap11 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable13 = strTrieMap11.get("hi!");
        java.io.Serializable serializable15 = strTrieMap11.get("");
        strTrieMap11.clear();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap18 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable20 = strTrieMap18.get("hi!");
        java.io.Serializable serializable22 = strTrieMap18.get("");
        java.lang.Class<?> wildcardClass23 = strTrieMap18.getClass();
        java.io.Serializable serializable24 = strTrieMap11.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) wildcardClass23);
        java.io.Serializable serializable25 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.util.Map<java.lang.String, java.io.Serializable> strMap26 = strTrieMap0.toMap();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap28 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable30 = strTrieMap28.get("");
        java.io.Serializable serializable32 = strTrieMap28.get("hi!");
        strTrieMap28.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap34 = strTrieMap28.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap35 = strTrieMap28.toMap();
        strTrieMap28.clear();
        java.io.Serializable serializable39 = strTrieMap28.put("hi!", (java.io.Serializable) 1.0f);
        java.io.Serializable serializable41 = strTrieMap28.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        strTrieMap28.clear();
        java.lang.Class<?> wildcardClass43 = strTrieMap28.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable44 = strTrieMap0.put("", (java.io.Serializable) wildcardClass43);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertNull(serializable20);
        org.junit.Assert.assertNull(serializable22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNull(serializable24);
        org.junit.Assert.assertNull(serializable25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(serializable30);
        org.junit.Assert.assertNull(serializable32);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(serializable39);
        org.junit.Assert.assertNull(serializable41);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean6 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable8 = strTrieMap0.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        int int10 = strTrieMap0.size();
        boolean boolean11 = strTrieMap0.validate();
        int int12 = strTrieMap0.size();
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable15 = strTrieMap0.put("", (java.io.Serializable) 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        boolean boolean5 = strTrieMap0.contains("");
        boolean boolean7 = strTrieMap0.contains("hi!");
        int int8 = strTrieMap0.size();
        boolean boolean10 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable12 = strTrieMap0.remove("");
        java.util.Map<java.lang.String, java.io.Serializable> strMap13 = strTrieMap0.toMap();
        java.io.Serializable serializable15 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.lang.Class<?> wildcardClass16 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap9 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.lang.Class<?> wildcardClass10 = strTrieMap9.getClass();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) wildcardClass10);
        boolean boolean13 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable15 = null;
        java.io.Serializable serializable16 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", serializable15);
        java.io.Serializable serializable18 = strTrieMap0.remove("\u2514\u2500\u2500 null\n");
        java.io.Serializable serializable20 = strTrieMap0.remove("");
        java.io.Serializable serializable23 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n", (java.io.Serializable) "");
        boolean boolean25 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap27 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable29 = strTrieMap27.get("");
        boolean boolean30 = strTrieMap27.validate();
        boolean boolean31 = strTrieMap27.validate();
        java.io.Serializable serializable33 = strTrieMap27.get("");
        boolean boolean35 = strTrieMap27.contains("hi!");
        int int36 = strTrieMap27.size();
        java.lang.Class<?> wildcardClass37 = strTrieMap27.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable38 = strTrieMap0.put("", (java.io.Serializable) wildcardClass37);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertNull(serializable18);
        org.junit.Assert.assertNull(serializable20);
        org.junit.Assert.assertNull(serializable23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(serializable29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(serializable33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        strTrieMap0.clear();
        boolean boolean4 = strTrieMap0.validate();
        java.io.Serializable serializable6 = strTrieMap0.get("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass7 = serializable6.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(serializable6);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean6 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable8 = strTrieMap0.get("");
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap11 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable13 = strTrieMap11.get("hi!");
        strTrieMap11.clear();
        boolean boolean16 = strTrieMap11.contains("");
        boolean boolean18 = strTrieMap11.contains("hi!");
        int int19 = strTrieMap11.size();
        boolean boolean21 = strTrieMap11.contains("\u2514\u2500\u2500 null\n");
        strTrieMap11.clear();
        boolean boolean23 = strTrieMap11.validate();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap25 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable27 = strTrieMap25.get("");
        java.io.Serializable serializable29 = strTrieMap25.get("hi!");
        strTrieMap25.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap31 = strTrieMap25.toMap();
        strTrieMap25.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap33 = strTrieMap25.toMap();
        boolean boolean34 = strTrieMap25.validate();
        boolean boolean36 = strTrieMap25.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.io.Serializable serializable39 = strTrieMap25.put("hi!", (java.io.Serializable) 10L);
        java.util.Map<java.lang.String, java.io.Serializable> strMap40 = strTrieMap25.toMap();
        java.io.Serializable serializable42 = strTrieMap25.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap44 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable46 = strTrieMap44.get("hi!");
        strTrieMap44.clear();
        java.io.Serializable serializable49 = strTrieMap44.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap50 = strTrieMap44.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap51 = strTrieMap44.toMap();
        java.lang.Class<?> wildcardClass52 = strTrieMap44.getClass();
        java.io.Serializable serializable53 = strTrieMap25.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n", (java.io.Serializable) wildcardClass52);
        java.io.Serializable serializable54 = strTrieMap11.put("hi!", (java.io.Serializable) wildcardClass52);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable55 = strTrieMap0.put("", serializable54);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(serializable27);
        org.junit.Assert.assertNull(serializable29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(serializable39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(serializable42);
        org.junit.Assert.assertNull(serializable46);
        org.junit.Assert.assertNull(serializable49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNull(serializable53);
        org.junit.Assert.assertNull(serializable54);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        strTrieMap0.clear();
        int int9 = strTrieMap0.size();
        int int10 = strTrieMap0.size();
        java.io.Serializable serializable12 = strTrieMap0.get("hi!");
        int int13 = strTrieMap0.size();
        java.io.Serializable serializable16 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n", (java.io.Serializable) 10.0f);
        boolean boolean18 = strTrieMap0.contains("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable21 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        java.io.Serializable serializable23 = strTrieMap0.get("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass24 = serializable23.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(serializable21);
        org.junit.Assert.assertNull(serializable23);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        java.io.Serializable serializable4 = strTrieMap0.get("");
        strTrieMap0.clear();
        java.io.Serializable serializable7 = strTrieMap0.get("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass8 = serializable7.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        boolean boolean7 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.io.Serializable serializable9 = strTrieMap0.get("hi!");
        int int10 = strTrieMap0.size();
        java.io.Serializable serializable12 = null;
        java.io.Serializable serializable13 = strTrieMap0.put("\u2514\u2500\u2500 null\n", serializable12);
        java.lang.String str14 = strTrieMap0.toString();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {null}\n" + "'", str14, "\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {null}\n");
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        int int6 = strTrieMap0.size();
        java.io.Serializable serializable8 = strTrieMap0.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        boolean boolean10 = strTrieMap0.validate();
        java.io.Serializable serializable13 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n", (java.io.Serializable) 1.0f);
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap15 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable17 = strTrieMap15.get("");
        boolean boolean19 = strTrieMap15.contains("hi!");
        java.io.Serializable serializable22 = strTrieMap15.put("hi!", (java.io.Serializable) 100);
        java.io.Serializable serializable24 = strTrieMap15.remove("hi!");
        java.lang.Class<?> wildcardClass25 = serializable24.getClass();
        java.io.Serializable serializable26 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", serializable24);
        java.util.Map<java.lang.String, java.io.Serializable> strMap27 = strTrieMap0.toMap();
        java.io.Serializable serializable29 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertNull(serializable17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(serializable22);
        org.junit.Assert.assertEquals("'" + serializable24 + "' != '" + 100 + "'", serializable24, 100);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNull(serializable26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertEquals("'" + serializable29 + "' != '" + 100 + "'", serializable29, 100);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        boolean boolean7 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable9 = strTrieMap0.get("");
        java.io.Serializable serializable11 = strTrieMap0.get("");
        java.io.Serializable serializable13 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        boolean boolean15 = strTrieMap0.contains("");
        boolean boolean17 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {}\n");
        java.lang.Class<?> wildcardClass18 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        java.io.Serializable serializable7 = strTrieMap0.remove("");
        int int8 = strTrieMap0.size();
        boolean boolean10 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.util.Map<java.lang.String, java.io.Serializable> strMap11 = strTrieMap0.toMap();
        strTrieMap0.clear();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strMap11);
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        strTrieMap0.clear();
        int int9 = strTrieMap0.size();
        int int10 = strTrieMap0.size();
        java.io.Serializable serializable12 = strTrieMap0.get("hi!");
        int int13 = strTrieMap0.size();
        java.io.Serializable serializable16 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n", (java.io.Serializable) 10.0f);
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap18 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable20 = strTrieMap18.get("");
        boolean boolean21 = strTrieMap18.validate();
        boolean boolean22 = strTrieMap18.validate();
        java.io.Serializable serializable24 = strTrieMap18.get("hi!");
        boolean boolean26 = strTrieMap18.contains("");
        java.lang.Class<?> wildcardClass27 = strTrieMap18.getClass();
        java.io.Serializable serializable28 = strTrieMap0.put("hi!", (java.io.Serializable) wildcardClass27);
        boolean boolean30 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertNull(serializable20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(serializable24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNull(serializable28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.CharSequence, com.jwetherell.algorithms.data_structures.interfaces.IMap<java.lang.String, java.io.Serializable>> charSequenceTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.CharSequence, com.jwetherell.algorithms.data_structures.interfaces.IMap<java.lang.String, java.io.Serializable>>();
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean6 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable8 = strTrieMap0.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        int int10 = strTrieMap0.size();
        java.io.Serializable serializable12 = strTrieMap0.remove("hi!");
        int int13 = strTrieMap0.size();
        java.io.Serializable serializable15 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n");
        java.io.Serializable serializable17 = null;
        java.io.Serializable serializable18 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n", serializable17);
        java.io.Serializable serializable20 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertNull(serializable18);
        org.junit.Assert.assertNull(serializable20);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        boolean boolean5 = strTrieMap0.contains("");
        boolean boolean7 = strTrieMap0.contains("hi!");
        boolean boolean8 = strTrieMap0.validate();
        int int9 = strTrieMap0.size();
        strTrieMap0.clear();
        java.io.Serializable serializable12 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(serializable12);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap4 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable6 = strTrieMap4.get("hi!");
        strTrieMap4.clear();
        boolean boolean9 = strTrieMap4.contains("");
        boolean boolean11 = strTrieMap4.contains("hi!");
        java.lang.Class<?> wildcardClass12 = strTrieMap4.getClass();
        java.io.Serializable serializable13 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n", (java.io.Serializable) wildcardClass12);
        java.io.Serializable serializable15 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass16 = serializable15.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertNull(serializable15);
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        int int6 = strTrieMap0.size();
        strTrieMap0.clear();
        java.io.Serializable serializable9 = strTrieMap0.get("");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap11 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable13 = strTrieMap11.get("hi!");
        strTrieMap11.clear();
        boolean boolean16 = strTrieMap11.contains("");
        boolean boolean18 = strTrieMap11.contains("hi!");
        java.lang.Class<?> wildcardClass19 = strTrieMap11.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable20 = strTrieMap0.put("", (java.io.Serializable) wildcardClass19);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean4 = strTrieMap0.validate();
        java.io.Serializable serializable6 = strTrieMap0.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        java.io.Serializable serializable9 = strTrieMap0.remove("\u2514\u2500\u2500 null\n");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass10 = serializable9.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(serializable9);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) 1.0f);
        java.io.Serializable serializable13 = strTrieMap0.get("");
        int int14 = strTrieMap0.size();
        java.io.Serializable serializable16 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        boolean boolean18 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable20 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        java.lang.String str21 = strTrieMap0.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable24 = strTrieMap0.put("", (java.io.Serializable) 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(serializable20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n" + "'", str21, "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n");
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        strTrieMap0.clear();
        int int9 = strTrieMap0.size();
        java.io.Serializable serializable11 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        strTrieMap0.clear();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(serializable11);
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.remove("");
        boolean boolean3 = strTrieMap0.validate();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        boolean boolean7 = strTrieMap0.contains("");
        strTrieMap0.clear();
        boolean boolean10 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        java.util.Map<java.lang.String, java.io.Serializable> strMap5 = strTrieMap0.toMap();
        java.io.Serializable serializable8 = strTrieMap0.put("hi!", (java.io.Serializable) 0.0f);
        boolean boolean9 = strTrieMap0.validate();
        strTrieMap0.clear();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap12 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable14 = strTrieMap12.get("");
        java.io.Serializable serializable16 = strTrieMap12.get("hi!");
        java.io.Serializable serializable19 = strTrieMap12.put("hi!", (java.io.Serializable) true);
        strTrieMap12.clear();
        int int21 = strTrieMap12.size();
        int int22 = strTrieMap12.size();
        java.io.Serializable serializable24 = strTrieMap12.get("hi!");
        int int25 = strTrieMap12.size();
        int int26 = strTrieMap12.size();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap28 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable30 = strTrieMap28.get("");
        java.io.Serializable serializable32 = strTrieMap28.remove("");
        boolean boolean34 = strTrieMap28.contains("hi!");
        boolean boolean36 = strTrieMap28.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.lang.Class<?> wildcardClass37 = strTrieMap28.getClass();
        java.io.Serializable serializable38 = strTrieMap12.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n", (java.io.Serializable) wildcardClass37);
        java.io.Serializable serializable39 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n", (java.io.Serializable) wildcardClass37);
        java.util.Map<java.lang.String, java.io.Serializable> strMap40 = strTrieMap0.toMap();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertNull(serializable19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(serializable24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(serializable30);
        org.junit.Assert.assertNull(serializable32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNull(serializable38);
        org.junit.Assert.assertNull(serializable39);
        org.junit.Assert.assertNotNull(strMap40);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        boolean boolean9 = strTrieMap0.contains("");
        boolean boolean11 = strTrieMap0.contains("hi!");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        strTrieMap0.clear();
        java.io.Serializable serializable6 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) 0);
        java.io.Serializable serializable9 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n", (java.io.Serializable) 10.0f);
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap11 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable13 = strTrieMap11.get("");
        boolean boolean14 = strTrieMap11.validate();
        boolean boolean15 = strTrieMap11.validate();
        boolean boolean17 = strTrieMap11.contains("");
        java.io.Serializable serializable19 = strTrieMap11.get("");
        int int20 = strTrieMap11.size();
        int int21 = strTrieMap11.size();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap23 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable25 = strTrieMap23.get("hi!");
        java.io.Serializable serializable27 = strTrieMap23.get("");
        strTrieMap23.clear();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap30 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable32 = strTrieMap30.get("hi!");
        java.io.Serializable serializable34 = strTrieMap30.get("");
        java.lang.Class<?> wildcardClass35 = strTrieMap30.getClass();
        java.io.Serializable serializable36 = strTrieMap23.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) wildcardClass35);
        java.io.Serializable serializable37 = strTrieMap11.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n", (java.io.Serializable) wildcardClass35);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable38 = strTrieMap0.put("", (java.io.Serializable) "\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(serializable19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(serializable25);
        org.junit.Assert.assertNull(serializable27);
        org.junit.Assert.assertNull(serializable32);
        org.junit.Assert.assertNull(serializable34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNull(serializable36);
        org.junit.Assert.assertNull(serializable37);
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.get("");
        java.io.Serializable serializable9 = strTrieMap0.get("hi!");
        java.io.Serializable serializable11 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertNull(serializable11);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean4 = strTrieMap0.validate();
        java.io.Serializable serializable6 = strTrieMap0.get("hi!");
        java.io.Serializable serializable9 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) '#');
        java.io.Serializable serializable11 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {}\n");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap13 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable15 = strTrieMap13.get("");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap17 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable19 = strTrieMap17.get("hi!");
        strTrieMap17.clear();
        boolean boolean22 = strTrieMap17.contains("");
        boolean boolean24 = strTrieMap17.contains("hi!");
        java.lang.Class<?> wildcardClass25 = strTrieMap17.getClass();
        java.io.Serializable serializable26 = strTrieMap13.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n", (java.io.Serializable) wildcardClass25);
        java.io.Serializable serializable27 = strTrieMap0.put("hi!", serializable26);
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertNull(serializable19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNull(serializable26);
        org.junit.Assert.assertNull(serializable27);
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        boolean boolean7 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        boolean boolean8 = strTrieMap0.validate();
        java.io.Serializable serializable10 = strTrieMap0.remove("");
        strTrieMap0.clear();
        boolean boolean13 = strTrieMap0.contains("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap14 = strTrieMap0.toMap();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap16 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable18 = strTrieMap16.get("");
        boolean boolean20 = strTrieMap16.contains("hi!");
        java.io.Serializable serializable23 = strTrieMap16.put("hi!", (java.io.Serializable) 100);
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap25 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.lang.Class<?> wildcardClass26 = strTrieMap25.getClass();
        java.io.Serializable serializable27 = strTrieMap16.put("hi!", (java.io.Serializable) wildcardClass26);
        boolean boolean29 = strTrieMap16.contains("hi!");
        java.io.Serializable serializable31 = null;
        java.io.Serializable serializable32 = strTrieMap16.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", serializable31);
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap34 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable36 = strTrieMap34.get("hi!");
        java.io.Serializable serializable38 = strTrieMap34.get("");
        java.util.Map<java.lang.String, java.io.Serializable> strMap39 = strTrieMap34.toMap();
        java.lang.Class<?> wildcardClass40 = strTrieMap34.getClass();
        java.io.Serializable serializable41 = strTrieMap16.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n", (java.io.Serializable) wildcardClass40);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable42 = strTrieMap0.put("", serializable41);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(serializable18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(serializable23);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNull(serializable27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(serializable32);
        org.junit.Assert.assertNull(serializable36);
        org.junit.Assert.assertNull(serializable38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNull(serializable41);
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        boolean boolean9 = strTrieMap0.contains("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap10 = strTrieMap0.toMap();
        java.lang.String str11 = strTrieMap0.toString();
        boolean boolean12 = strTrieMap0.validate();
        int int13 = strTrieMap0.size();
        java.lang.Class<?> wildcardClass14 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n" + "'", str11, "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean4 = strTrieMap0.validate();
        java.io.Serializable serializable6 = strTrieMap0.get("hi!");
        java.io.Serializable serializable9 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) '#');
        strTrieMap0.clear();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertNull(serializable9);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        boolean boolean7 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable9 = strTrieMap0.get("");
        strTrieMap0.clear();
        boolean boolean11 = strTrieMap0.validate();
        int int12 = strTrieMap0.size();
        boolean boolean13 = strTrieMap0.validate();
        java.io.Serializable serializable15 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(serializable15);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean4 = strTrieMap0.validate();
        java.io.Serializable serializable6 = strTrieMap0.get("");
        boolean boolean8 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable10 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(serializable10);
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        int int6 = strTrieMap0.size();
        java.io.Serializable serializable8 = strTrieMap0.get("hi!");
        boolean boolean10 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable12 = strTrieMap0.get("");
        java.io.Serializable serializable14 = strTrieMap0.get("\u2514\u2500\u2500 null\n");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass15 = serializable14.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertNull(serializable14);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        boolean boolean9 = strTrieMap0.contains("");
        boolean boolean10 = strTrieMap0.validate();
        strTrieMap0.clear();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.io.Serializable serializable8 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.io.Serializable serializable10 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        int int12 = strTrieMap0.size();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap6 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable8 = strTrieMap6.get("hi!");
        java.io.Serializable serializable10 = strTrieMap6.get("");
        java.lang.Class<?> wildcardClass11 = strTrieMap6.getClass();
        java.io.Serializable serializable12 = strTrieMap0.put("hi!", (java.io.Serializable) wildcardClass11);
        java.io.Serializable serializable14 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n");
        boolean boolean16 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        int int17 = strTrieMap0.size();
        boolean boolean18 = strTrieMap0.validate();
        int int19 = strTrieMap0.size();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        java.util.Map<java.lang.String, java.io.Serializable> strMap8 = strTrieMap0.toMap();
        java.io.Serializable serializable10 = strTrieMap0.get("hi!");
        java.lang.Class<?> wildcardClass11 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + true + "'", serializable10, true);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        boolean boolean7 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        boolean boolean8 = strTrieMap0.validate();
        java.io.Serializable serializable10 = strTrieMap0.get("");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(serializable10);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap8 = strTrieMap0.toMap();
        java.io.Serializable serializable10 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap12 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable14 = strTrieMap12.get("");
        boolean boolean16 = strTrieMap12.contains("hi!");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap18 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable20 = strTrieMap18.get("hi!");
        java.io.Serializable serializable22 = strTrieMap18.get("");
        java.lang.Class<?> wildcardClass23 = strTrieMap18.getClass();
        java.io.Serializable serializable24 = strTrieMap12.put("hi!", (java.io.Serializable) wildcardClass23);
        java.io.Serializable serializable25 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n", (java.io.Serializable) "hi!");
        java.io.Serializable serializable27 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {null}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(serializable20);
        org.junit.Assert.assertNull(serializable22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNull(serializable24);
        org.junit.Assert.assertNull(serializable25);
        org.junit.Assert.assertNull(serializable27);
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) 1.0f);
        java.io.Serializable serializable13 = strTrieMap0.get("");
        int int14 = strTrieMap0.size();
        java.io.Serializable serializable16 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        java.io.Serializable serializable18 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass19 = serializable18.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertNull(serializable18);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.remove("");
        boolean boolean3 = strTrieMap0.validate();
        java.io.Serializable serializable5 = strTrieMap0.remove("\u2514\u2500\u2500 null\n");
        java.io.Serializable serializable7 = strTrieMap0.remove("hi!");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertNull(serializable7);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.remove("");
        boolean boolean3 = strTrieMap0.validate();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        boolean boolean7 = strTrieMap0.contains("");
        int int8 = strTrieMap0.size();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) 1.0d);
        boolean boolean12 = strTrieMap0.validate();
        strTrieMap0.clear();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        boolean boolean9 = strTrieMap0.contains("hi!");
        java.lang.String str10 = strTrieMap0.toString();
        java.io.Serializable serializable12 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        boolean boolean13 = strTrieMap0.validate();
        java.io.Serializable serializable15 = strTrieMap0.get("hi!");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n" + "'", str10, "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + true + "'", serializable15, true);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        int int6 = strTrieMap0.size();
        java.io.Serializable serializable8 = strTrieMap0.get("hi!");
        boolean boolean10 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable12 = strTrieMap0.get("");
        java.io.Serializable serializable14 = strTrieMap0.get("\u2514\u2500\u2500 null\n");
        java.io.Serializable serializable17 = strTrieMap0.put("\u2514\u2500\u2500 null\n", (java.io.Serializable) (short) 1);
        java.util.Map<java.lang.String, java.io.Serializable> strMap18 = strTrieMap0.toMap();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNull(serializable17);
        org.junit.Assert.assertNotNull(strMap18);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        java.io.Serializable serializable4 = strTrieMap0.get("");
        boolean boolean6 = strTrieMap0.contains("\u2514\u2500\u2500 null\n");
        java.io.Serializable serializable8 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        int int9 = strTrieMap0.size();
        boolean boolean10 = strTrieMap0.validate();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        java.lang.String str8 = strTrieMap0.toString();
        java.lang.String str9 = strTrieMap0.toString();
        strTrieMap0.clear();
        java.io.Serializable serializable12 = strTrieMap0.get("");
        boolean boolean13 = strTrieMap0.validate();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n" + "'", str8, "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n" + "'", str9, "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) 1.0f);
        java.util.Map<java.lang.String, java.io.Serializable> strMap12 = strTrieMap0.toMap();
        boolean boolean14 = strTrieMap0.contains("");
        java.io.Serializable serializable16 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {}\n");
        strTrieMap0.clear();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(serializable16);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        boolean boolean7 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable9 = strTrieMap0.get("");
        java.util.Map<java.lang.String, java.io.Serializable> strMap10 = strTrieMap0.toMap();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap12 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable14 = strTrieMap12.get("hi!");
        boolean boolean15 = strTrieMap12.validate();
        boolean boolean17 = strTrieMap12.contains("hi!");
        int int18 = strTrieMap12.size();
        java.lang.Class<?> wildcardClass19 = strTrieMap12.getClass();
        java.io.Serializable serializable20 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n", (java.io.Serializable) wildcardClass19);
        java.io.Serializable serializable22 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNull(serializable20);
        org.junit.Assert.assertNull(serializable22);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap6 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable8 = strTrieMap6.get("hi!");
        java.io.Serializable serializable10 = strTrieMap6.get("");
        java.lang.Class<?> wildcardClass11 = strTrieMap6.getClass();
        java.io.Serializable serializable12 = strTrieMap0.put("hi!", (java.io.Serializable) wildcardClass11);
        java.io.Serializable serializable14 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n");
        strTrieMap0.clear();
        boolean boolean17 = strTrieMap0.contains("");
        java.lang.Class<?> wildcardClass18 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        strTrieMap0.clear();
        int int9 = strTrieMap0.size();
        int int10 = strTrieMap0.size();
        java.io.Serializable serializable12 = strTrieMap0.get("hi!");
        int int13 = strTrieMap0.size();
        int int14 = strTrieMap0.size();
        int int15 = strTrieMap0.size();
        int int16 = strTrieMap0.size();
        java.lang.Class<?> wildcardClass17 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        boolean boolean7 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        boolean boolean9 = strTrieMap0.contains("");
        boolean boolean11 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.io.Serializable serializable13 = strTrieMap0.remove("\u2514\u2500\u2500 null\n");
        java.util.Map<java.lang.String, java.io.Serializable> strMap14 = strTrieMap0.toMap();
        java.io.Serializable serializable16 = strTrieMap0.get("\u2514\u2500\u2500 null\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(serializable16);
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        strTrieMap0.clear();
        java.io.Serializable serializable6 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) 0);
        java.io.Serializable serializable8 = strTrieMap0.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        java.io.Serializable serializable11 = strTrieMap0.get("hi!");
        int int12 = strTrieMap0.size();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean5 = strTrieMap0.contains("hi!");
        boolean boolean7 = strTrieMap0.contains("");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        java.io.Serializable serializable11 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        java.io.Serializable serializable13 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.io.Serializable serializable15 = strTrieMap0.get("");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap17 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable19 = strTrieMap17.get("");
        java.io.Serializable serializable21 = strTrieMap17.get("hi!");
        strTrieMap17.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap23 = strTrieMap17.toMap();
        strTrieMap17.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap25 = strTrieMap17.toMap();
        boolean boolean26 = strTrieMap17.validate();
        int int27 = strTrieMap17.size();
        boolean boolean28 = strTrieMap17.validate();
        java.lang.Class<?> wildcardClass29 = strTrieMap17.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable30 = strTrieMap0.put("", (java.io.Serializable) wildcardClass29);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertNull(serializable19);
        org.junit.Assert.assertNull(serializable21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.remove("");
        boolean boolean3 = strTrieMap0.validate();
        java.io.Serializable serializable5 = strTrieMap0.remove("");
        boolean boolean6 = strTrieMap0.validate();
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap8 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.io.Serializable serializable11 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap13 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable15 = strTrieMap13.get("hi!");
        strTrieMap13.clear();
        strTrieMap13.clear();
        java.lang.Class<?> wildcardClass18 = strTrieMap13.getClass();
        java.io.Serializable serializable19 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n", (java.io.Serializable) wildcardClass18);
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap21 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable23 = strTrieMap21.get("hi!");
        strTrieMap21.clear();
        java.io.Serializable serializable26 = strTrieMap21.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap27 = strTrieMap21.toMap();
        java.io.Serializable serializable29 = strTrieMap21.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.util.Map<java.lang.String, java.io.Serializable> strMap30 = strTrieMap21.toMap();
        java.lang.Class<?> wildcardClass31 = strMap30.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable32 = strTrieMap0.put("", (java.io.Serializable) wildcardClass31);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNull(serializable19);
        org.junit.Assert.assertNull(serializable23);
        org.junit.Assert.assertNull(serializable26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(serializable29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        java.io.Serializable serializable9 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.io.Serializable serializable11 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertNull(serializable11);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        boolean boolean5 = strTrieMap0.contains("");
        boolean boolean7 = strTrieMap0.contains("hi!");
        int int8 = strTrieMap0.size();
        boolean boolean10 = strTrieMap0.contains("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable13 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass14 = serializable13.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(serializable13);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        boolean boolean7 = strTrieMap0.contains("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap8 = strTrieMap0.toMap();
        boolean boolean10 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.lang.Class<?> wildcardClass11 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.remove("");
        boolean boolean3 = strTrieMap0.validate();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        boolean boolean7 = strTrieMap0.contains("");
        boolean boolean8 = strTrieMap0.validate();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap8 = strTrieMap0.toMap();
        boolean boolean9 = strTrieMap0.validate();
        boolean boolean11 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.io.Serializable serializable14 = strTrieMap0.put("hi!", (java.io.Serializable) 10L);
        java.util.Map<java.lang.String, java.io.Serializable> strMap15 = strTrieMap0.toMap();
        java.lang.String str16 = strTrieMap0.toString();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap18 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable20 = strTrieMap18.get("");
        java.io.Serializable serializable22 = strTrieMap18.get("hi!");
        strTrieMap18.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap24 = strTrieMap18.toMap();
        strTrieMap18.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap26 = strTrieMap18.toMap();
        boolean boolean27 = strTrieMap18.validate();
        boolean boolean29 = strTrieMap18.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.io.Serializable serializable32 = strTrieMap18.put("hi!", (java.io.Serializable) 10L);
        java.util.Map<java.lang.String, java.io.Serializable> strMap33 = strTrieMap18.toMap();
        java.io.Serializable serializable35 = strTrieMap18.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        boolean boolean37 = strTrieMap18.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
        boolean boolean38 = strTrieMap18.validate();
        java.lang.Class<?> wildcardClass39 = strTrieMap18.getClass();
        java.io.Serializable serializable40 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n", (java.io.Serializable) wildcardClass39);
        boolean boolean41 = strTrieMap0.validate();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n" + "'", str16, "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
        org.junit.Assert.assertNull(serializable20);
        org.junit.Assert.assertNull(serializable22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(serializable32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(serializable35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNull(serializable40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        boolean boolean3 = strTrieMap0.validate();
        java.io.Serializable serializable5 = strTrieMap0.remove("hi!");
        int int6 = strTrieMap0.size();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        boolean boolean5 = strTrieMap0.contains("");
        boolean boolean7 = strTrieMap0.contains("hi!");
        boolean boolean8 = strTrieMap0.validate();
        int int9 = strTrieMap0.size();
        java.io.Serializable serializable11 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {1}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(serializable11);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.io.Serializable serializable8 = strTrieMap0.remove("hi!");
        java.lang.Class<?> wildcardClass9 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean4 = strTrieMap0.validate();
        boolean boolean6 = strTrieMap0.contains("");
        java.io.Serializable serializable8 = strTrieMap0.get("");
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap10 = strTrieMap0.toMap();
        boolean boolean11 = strTrieMap0.validate();
        java.util.Map<java.lang.String, java.io.Serializable> strMap12 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap13 = strTrieMap0.toMap();
        boolean boolean14 = strTrieMap0.validate();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.io.Serializable serializable10 = strTrieMap0.remove("hi!");
        boolean boolean12 = strTrieMap0.contains("");
        java.io.Serializable serializable14 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        java.io.Serializable serializable16 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNull(serializable16);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap9 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.lang.Class<?> wildcardClass10 = strTrieMap9.getClass();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) wildcardClass10);
        boolean boolean13 = strTrieMap0.contains("hi!");
        boolean boolean14 = strTrieMap0.validate();
        java.io.Serializable serializable16 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(serializable16);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean4 = strTrieMap0.validate();
        boolean boolean6 = strTrieMap0.contains("");
        java.io.Serializable serializable8 = strTrieMap0.get("");
        int int9 = strTrieMap0.size();
        strTrieMap0.clear();
        boolean boolean12 = strTrieMap0.contains("\u2514\u2500\u2500 null\n");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap14 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable16 = strTrieMap14.get("hi!");
        java.io.Serializable serializable18 = strTrieMap14.get("");
        java.io.Serializable serializable20 = strTrieMap14.get("\u2514\u2500\u2500 null\n");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap22 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable24 = strTrieMap22.get("");
        boolean boolean25 = strTrieMap22.validate();
        boolean boolean26 = strTrieMap22.validate();
        java.io.Serializable serializable28 = strTrieMap22.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap29 = strTrieMap22.toMap();
        int int30 = strTrieMap22.size();
        java.lang.Class<?> wildcardClass31 = strTrieMap22.getClass();
        java.io.Serializable serializable32 = strTrieMap14.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n", (java.io.Serializable) wildcardClass31);
        java.io.Serializable serializable33 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {}\n", (java.io.Serializable) wildcardClass31);
        java.io.Serializable serializable35 = strTrieMap0.get("");
        java.io.Serializable serializable37 = strTrieMap0.remove("");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertNull(serializable18);
        org.junit.Assert.assertNull(serializable20);
        org.junit.Assert.assertNull(serializable24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(serializable28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNull(serializable32);
        org.junit.Assert.assertNull(serializable33);
        org.junit.Assert.assertNull(serializable35);
        org.junit.Assert.assertNull(serializable37);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        boolean boolean7 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        boolean boolean8 = strTrieMap0.validate();
        java.io.Serializable serializable10 = strTrieMap0.remove("");
        strTrieMap0.clear();
        java.lang.Class<?> wildcardClass12 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean4 = strTrieMap0.validate();
        java.io.Serializable serializable6 = strTrieMap0.get("hi!");
        boolean boolean8 = strTrieMap0.contains("");
        int int9 = strTrieMap0.size();
        boolean boolean11 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        java.io.Serializable serializable13 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        boolean boolean14 = strTrieMap0.validate();
        java.io.Serializable serializable16 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(serializable16);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean6 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable8 = strTrieMap0.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        int int10 = strTrieMap0.size();
        java.io.Serializable serializable12 = strTrieMap0.remove("hi!");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap14 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable16 = strTrieMap14.get("hi!");
        strTrieMap14.clear();
        java.io.Serializable serializable19 = strTrieMap14.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap20 = strTrieMap14.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap21 = strTrieMap14.toMap();
        java.lang.Class<?> wildcardClass22 = strTrieMap14.getClass();
        java.io.Serializable serializable23 = strTrieMap0.put("hi!", (java.io.Serializable) wildcardClass22);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass24 = serializable23.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertNull(serializable19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNull(serializable23);
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        strTrieMap0.clear();
        int int9 = strTrieMap0.size();
        int int10 = strTrieMap0.size();
        boolean boolean12 = strTrieMap0.contains("hi!");
        strTrieMap0.clear();
        int int14 = strTrieMap0.size();
        int int15 = strTrieMap0.size();
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap17 = strTrieMap0.toMap();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(strMap17);
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap8 = strTrieMap0.toMap();
        boolean boolean9 = strTrieMap0.validate();
        boolean boolean11 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.io.Serializable serializable14 = strTrieMap0.put("hi!", (java.io.Serializable) 10L);
        java.util.Map<java.lang.String, java.io.Serializable> strMap15 = strTrieMap0.toMap();
        strTrieMap0.clear();
        boolean boolean18 = strTrieMap0.contains("hi!");
        int int19 = strTrieMap0.size();
        int int20 = strTrieMap0.size();
        java.io.Serializable serializable22 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(serializable22);
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap9 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.lang.Class<?> wildcardClass10 = strTrieMap9.getClass();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) wildcardClass10);
        int int12 = strTrieMap0.size();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable7 = strTrieMap0.put("", (java.io.Serializable) 1.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean5 = strTrieMap0.contains("hi!");
        boolean boolean7 = strTrieMap0.contains("");
        strTrieMap0.clear();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap10 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable12 = strTrieMap10.get("");
        boolean boolean14 = strTrieMap10.contains("hi!");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap16 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable18 = strTrieMap16.get("hi!");
        java.io.Serializable serializable20 = strTrieMap16.get("");
        java.lang.Class<?> wildcardClass21 = strTrieMap16.getClass();
        java.io.Serializable serializable22 = strTrieMap10.put("hi!", (java.io.Serializable) wildcardClass21);
        java.util.Map<java.lang.String, java.io.Serializable> strMap23 = strTrieMap10.toMap();
        java.lang.Class<?> wildcardClass24 = strMap23.getClass();
        java.io.Serializable serializable25 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n", (java.io.Serializable) wildcardClass24);
        java.io.Serializable serializable27 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(serializable18);
        org.junit.Assert.assertNull(serializable20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNull(serializable22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNull(serializable25);
        org.junit.Assert.assertNull(serializable27);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap8 = strTrieMap0.toMap();
        java.io.Serializable serializable10 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.util.Map<java.lang.String, java.io.Serializable> strMap11 = strTrieMap0.toMap();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertNotNull(strMap11);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        boolean boolean5 = strTrieMap0.contains("");
        boolean boolean7 = strTrieMap0.contains("hi!");
        boolean boolean8 = strTrieMap0.validate();
        boolean boolean9 = strTrieMap0.validate();
        strTrieMap0.clear();
        boolean boolean11 = strTrieMap0.validate();
        java.io.Serializable serializable13 = strTrieMap0.get("");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(serializable13);
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.lang.reflect.GenericDeclaration> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.lang.reflect.GenericDeclaration>();
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean4 = strTrieMap0.validate();
        java.io.Serializable serializable6 = strTrieMap0.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        java.io.Serializable serializable9 = strTrieMap0.remove("\u2514\u2500\u2500 null\n");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap11 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable13 = strTrieMap11.get("hi!");
        strTrieMap11.clear();
        boolean boolean16 = strTrieMap11.contains("");
        boolean boolean18 = strTrieMap11.contains("hi!");
        int int19 = strTrieMap11.size();
        boolean boolean21 = strTrieMap11.contains("\u2514\u2500\u2500 null\n");
        strTrieMap11.clear();
        boolean boolean23 = strTrieMap11.validate();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap25 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable27 = strTrieMap25.get("");
        java.io.Serializable serializable29 = strTrieMap25.get("hi!");
        strTrieMap25.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap31 = strTrieMap25.toMap();
        strTrieMap25.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap33 = strTrieMap25.toMap();
        boolean boolean34 = strTrieMap25.validate();
        boolean boolean36 = strTrieMap25.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.io.Serializable serializable39 = strTrieMap25.put("hi!", (java.io.Serializable) 10L);
        java.util.Map<java.lang.String, java.io.Serializable> strMap40 = strTrieMap25.toMap();
        java.io.Serializable serializable42 = strTrieMap25.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap44 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable46 = strTrieMap44.get("hi!");
        strTrieMap44.clear();
        java.io.Serializable serializable49 = strTrieMap44.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap50 = strTrieMap44.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap51 = strTrieMap44.toMap();
        java.lang.Class<?> wildcardClass52 = strTrieMap44.getClass();
        java.io.Serializable serializable53 = strTrieMap25.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n", (java.io.Serializable) wildcardClass52);
        java.io.Serializable serializable54 = strTrieMap11.put("hi!", (java.io.Serializable) wildcardClass52);
        java.io.Serializable serializable55 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n", (java.io.Serializable) wildcardClass52);
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(serializable27);
        org.junit.Assert.assertNull(serializable29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(serializable39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(serializable42);
        org.junit.Assert.assertNull(serializable46);
        org.junit.Assert.assertNull(serializable49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNull(serializable53);
        org.junit.Assert.assertNull(serializable54);
        org.junit.Assert.assertNull(serializable55);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap8 = strTrieMap0.toMap();
        java.io.Serializable serializable10 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.io.Serializable serializable12 = strTrieMap0.remove("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass13 = serializable12.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertNull(serializable12);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        boolean boolean5 = strTrieMap0.contains("");
        java.io.Serializable serializable7 = strTrieMap0.get("");
        boolean boolean9 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n");
        java.lang.Class<?> wildcardClass10 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean5 = strTrieMap0.contains("hi!");
        boolean boolean6 = strTrieMap0.validate();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap8 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable10 = strTrieMap8.get("");
        boolean boolean12 = strTrieMap8.contains("hi!");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap14 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable16 = strTrieMap14.get("hi!");
        java.io.Serializable serializable18 = strTrieMap14.get("");
        java.lang.Class<?> wildcardClass19 = strTrieMap14.getClass();
        java.io.Serializable serializable20 = strTrieMap8.put("hi!", (java.io.Serializable) wildcardClass19);
        java.lang.Class<?> wildcardClass21 = strTrieMap8.getClass();
        java.io.Serializable serializable22 = strTrieMap0.put("hi!", (java.io.Serializable) wildcardClass21);
        strTrieMap0.clear();
        strTrieMap0.clear();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertNull(serializable18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNull(serializable20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNull(serializable22);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap8 = strTrieMap0.toMap();
        java.lang.Class<?> wildcardClass9 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.remove("");
        boolean boolean3 = strTrieMap0.validate();
        java.io.Serializable serializable5 = strTrieMap0.remove("");
        boolean boolean6 = strTrieMap0.validate();
        boolean boolean7 = strTrieMap0.validate();
        strTrieMap0.clear();
        boolean boolean10 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap12 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable14 = strTrieMap12.get("");
        java.io.Serializable serializable16 = strTrieMap12.get("hi!");
        java.io.Serializable serializable19 = strTrieMap12.put("hi!", (java.io.Serializable) true);
        strTrieMap12.clear();
        int int21 = strTrieMap12.size();
        int int22 = strTrieMap12.size();
        java.io.Serializable serializable24 = strTrieMap12.get("hi!");
        int int25 = strTrieMap12.size();
        java.io.Serializable serializable28 = strTrieMap12.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n", (java.io.Serializable) 10.0f);
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap30 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable32 = strTrieMap30.get("");
        boolean boolean33 = strTrieMap30.validate();
        boolean boolean34 = strTrieMap30.validate();
        java.io.Serializable serializable36 = strTrieMap30.get("hi!");
        boolean boolean38 = strTrieMap30.contains("");
        java.lang.Class<?> wildcardClass39 = strTrieMap30.getClass();
        java.io.Serializable serializable40 = strTrieMap12.put("hi!", (java.io.Serializable) wildcardClass39);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable41 = strTrieMap0.put("", (java.io.Serializable) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertNull(serializable19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(serializable24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(serializable28);
        org.junit.Assert.assertNull(serializable32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(serializable36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNull(serializable40);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        boolean boolean5 = strTrieMap0.contains("");
        boolean boolean7 = strTrieMap0.contains("hi!");
        int int8 = strTrieMap0.size();
        java.io.Serializable serializable10 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
        int int11 = strTrieMap0.size();
        java.io.Serializable serializable13 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {}\n");
        java.lang.Class<?> wildcardClass14 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.get("");
        java.io.Serializable serializable9 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        strTrieMap0.clear();
        boolean boolean12 = strTrieMap0.validate();
        java.util.Map<java.lang.String, java.io.Serializable> strMap13 = strTrieMap0.toMap();
        int int14 = strTrieMap0.size();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        strTrieMap0.clear();
        boolean boolean10 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n");
        strTrieMap0.clear();
        strTrieMap0.clear();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) 1.0f);
        java.io.Serializable serializable13 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        boolean boolean14 = strTrieMap0.validate();
        strTrieMap0.clear();
        java.lang.Class<?> wildcardClass16 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        strTrieMap0.clear();
        int int9 = strTrieMap0.size();
        int int10 = strTrieMap0.size();
        java.io.Serializable serializable12 = strTrieMap0.get("hi!");
        int int13 = strTrieMap0.size();
        java.io.Serializable serializable16 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n", (java.io.Serializable) 10.0f);
        boolean boolean18 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable20 = strTrieMap0.remove("");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(serializable20);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.remove("");
        boolean boolean3 = strTrieMap0.validate();
        java.io.Serializable serializable5 = strTrieMap0.remove("");
        boolean boolean6 = strTrieMap0.validate();
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap8 = strTrieMap0.toMap();
        strTrieMap0.clear();
        boolean boolean10 = strTrieMap0.validate();
        strTrieMap0.clear();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap13 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable15 = strTrieMap13.remove("");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap17 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable19 = strTrieMap17.get("");
        java.io.Serializable serializable21 = strTrieMap17.get("hi!");
        strTrieMap17.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap23 = strTrieMap17.toMap();
        java.io.Serializable serializable25 = strTrieMap17.remove("hi!");
        java.io.Serializable serializable27 = strTrieMap17.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.lang.Class<?> wildcardClass28 = strTrieMap17.getClass();
        java.io.Serializable serializable29 = strTrieMap13.put("hi!", (java.io.Serializable) wildcardClass28);
        boolean boolean31 = strTrieMap13.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        java.util.Map<java.lang.String, java.io.Serializable> strMap32 = strTrieMap13.toMap();
        java.lang.Class<?> wildcardClass33 = strMap32.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable34 = strTrieMap0.put("", (java.io.Serializable) wildcardClass33);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertNull(serializable19);
        org.junit.Assert.assertNull(serializable21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(serializable25);
        org.junit.Assert.assertNull(serializable27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNull(serializable29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        strTrieMap0.clear();
        java.io.Serializable serializable6 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) 0);
        java.io.Serializable serializable8 = strTrieMap0.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        boolean boolean10 = strTrieMap0.validate();
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable13 = strTrieMap0.put("", (java.io.Serializable) (-1.0f));
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        boolean boolean5 = strTrieMap0.contains("");
        boolean boolean7 = strTrieMap0.contains("hi!");
        int int8 = strTrieMap0.size();
        boolean boolean10 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable12 = strTrieMap0.remove("");
        java.io.Serializable serializable14 = strTrieMap0.remove("hi!");
        java.io.Serializable serializable16 = strTrieMap0.remove("\u2514\u2500\u2500 null\n");
        strTrieMap0.clear();
        int int18 = strTrieMap0.size();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap9 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.lang.Class<?> wildcardClass10 = strTrieMap9.getClass();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) wildcardClass10);
        boolean boolean13 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable15 = null;
        java.io.Serializable serializable16 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", serializable15);
        strTrieMap0.clear();
        java.io.Serializable serializable19 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
        strTrieMap0.clear();
        boolean boolean22 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {null}\n");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = strTrieMap0.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertNull(serializable19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        boolean boolean8 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable10 = strTrieMap0.remove("hi!");
        java.io.Serializable serializable13 = strTrieMap0.put("hi!", (java.io.Serializable) "");
        int int14 = strTrieMap0.size();
        strTrieMap0.clear();
        boolean boolean17 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n");
        java.io.Serializable serializable19 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        java.lang.Class<?> wildcardClass20 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(serializable19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.get("");
        java.io.Serializable serializable9 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        strTrieMap0.clear();
        boolean boolean12 = strTrieMap0.validate();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap14 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable16 = strTrieMap14.get("hi!");
        strTrieMap14.clear();
        boolean boolean19 = strTrieMap14.contains("");
        boolean boolean21 = strTrieMap14.contains("hi!");
        int int22 = strTrieMap14.size();
        boolean boolean24 = strTrieMap14.contains("\u2514\u2500\u2500 null\n");
        strTrieMap14.clear();
        java.lang.Class<?> wildcardClass26 = strTrieMap14.getClass();
        java.io.Serializable serializable27 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) wildcardClass26);
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNull(serializable27);
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        java.io.Serializable serializable4 = strTrieMap0.get("");
        strTrieMap0.clear();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap7 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable9 = strTrieMap7.get("hi!");
        java.io.Serializable serializable11 = strTrieMap7.get("");
        java.lang.Class<?> wildcardClass12 = strTrieMap7.getClass();
        java.io.Serializable serializable13 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) wildcardClass12);
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap15 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable17 = strTrieMap15.get("hi!");
        strTrieMap15.clear();
        java.io.Serializable serializable20 = strTrieMap15.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap21 = strTrieMap15.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap22 = strTrieMap15.toMap();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap24 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable26 = strTrieMap24.get("");
        boolean boolean28 = strTrieMap24.contains("hi!");
        java.io.Serializable serializable31 = strTrieMap24.put("hi!", (java.io.Serializable) 100);
        java.io.Serializable serializable33 = strTrieMap24.remove("hi!");
        java.lang.Class<?> wildcardClass34 = serializable33.getClass();
        java.io.Serializable serializable35 = strTrieMap15.put("hi!", serializable33);
        java.lang.Class<?> wildcardClass36 = strTrieMap15.getClass();
        java.io.Serializable serializable37 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {null}\n", (java.io.Serializable) wildcardClass36);
        java.io.Serializable serializable39 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
        java.io.Serializable serializable41 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable42 = strTrieMap0.put("", serializable41);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertNull(serializable17);
        org.junit.Assert.assertNull(serializable20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(serializable26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(serializable31);
        org.junit.Assert.assertEquals("'" + serializable33 + "' != '" + 100 + "'", serializable33, 100);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNull(serializable35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNull(serializable37);
        org.junit.Assert.assertNull(serializable39);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        java.io.Serializable serializable9 = strTrieMap0.remove("hi!");
        java.lang.String str10 = strTrieMap0.toString();
        strTrieMap0.clear();
        java.io.Serializable serializable13 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass14 = serializable13.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + true + "'", serializable9, true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\u2514\u2500\u2500 null\n" + "'", str10, "\u2514\u2500\u2500 null\n");
        org.junit.Assert.assertNull(serializable13);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.remove("");
        boolean boolean3 = strTrieMap0.validate();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        boolean boolean7 = strTrieMap0.contains("");
        boolean boolean9 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        boolean boolean11 = strTrieMap0.contains("hi!");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        int int8 = strTrieMap0.size();
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        java.io.Serializable serializable11 = strTrieMap0.remove("");
        boolean boolean12 = strTrieMap0.validate();
        java.io.Serializable serializable14 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
        strTrieMap0.clear();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(serializable14);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        boolean boolean7 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable9 = strTrieMap0.get("");
        java.util.Map<java.lang.String, java.io.Serializable> strMap10 = strTrieMap0.toMap();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap12 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable14 = strTrieMap12.get("hi!");
        boolean boolean15 = strTrieMap12.validate();
        boolean boolean17 = strTrieMap12.contains("hi!");
        int int18 = strTrieMap12.size();
        java.lang.Class<?> wildcardClass19 = strTrieMap12.getClass();
        java.io.Serializable serializable20 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n", (java.io.Serializable) wildcardClass19);
        java.lang.Class<?> wildcardClass21 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNull(serializable20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean4 = strTrieMap0.validate();
        java.io.Serializable serializable6 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.lang.Class<?> wildcardClass8 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap8 = strTrieMap0.toMap();
        boolean boolean9 = strTrieMap0.validate();
        int int10 = strTrieMap0.size();
        boolean boolean11 = strTrieMap0.validate();
        strTrieMap0.clear();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap8 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable10 = strTrieMap8.get("");
        java.io.Serializable serializable12 = strTrieMap8.get("hi!");
        strTrieMap8.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap14 = strTrieMap8.toMap();
        strTrieMap8.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap16 = strTrieMap8.toMap();
        boolean boolean17 = strTrieMap8.validate();
        boolean boolean19 = strTrieMap8.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.io.Serializable serializable22 = strTrieMap8.put("hi!", (java.io.Serializable) 10L);
        java.util.Map<java.lang.String, java.io.Serializable> strMap23 = strTrieMap8.toMap();
        java.io.Serializable serializable25 = strTrieMap8.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap27 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable29 = strTrieMap27.get("hi!");
        strTrieMap27.clear();
        java.io.Serializable serializable32 = strTrieMap27.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap33 = strTrieMap27.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap34 = strTrieMap27.toMap();
        java.lang.Class<?> wildcardClass35 = strTrieMap27.getClass();
        java.io.Serializable serializable36 = strTrieMap8.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n", (java.io.Serializable) wildcardClass35);
        java.io.Serializable serializable37 = strTrieMap0.put("hi!", (java.io.Serializable) "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
        boolean boolean39 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable42 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n", (java.io.Serializable) "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n");
        java.io.Serializable serializable44 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n");
        boolean boolean45 = strTrieMap0.validate();
        boolean boolean46 = strTrieMap0.validate();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap48 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable50 = strTrieMap48.get("");
        java.io.Serializable serializable52 = strTrieMap48.remove("");
        boolean boolean53 = strTrieMap48.validate();
        boolean boolean55 = strTrieMap48.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.io.Serializable serializable57 = strTrieMap48.get("hi!");
        int int58 = strTrieMap48.size();
        java.io.Serializable serializable60 = null;
        java.io.Serializable serializable61 = strTrieMap48.put("\u2514\u2500\u2500 null\n", serializable60);
        java.lang.Class<?> wildcardClass62 = strTrieMap48.getClass();
        java.io.Serializable serializable63 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n", (java.io.Serializable) wildcardClass62);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass64 = serializable63.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(serializable22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(serializable25);
        org.junit.Assert.assertNull(serializable29);
        org.junit.Assert.assertNull(serializable32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNull(serializable36);
        org.junit.Assert.assertNull(serializable37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(serializable42);
        org.junit.Assert.assertNull(serializable44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(serializable50);
        org.junit.Assert.assertNull(serializable52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(serializable57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNull(serializable61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNull(serializable63);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap8 = strTrieMap0.toMap();
        boolean boolean9 = strTrieMap0.validate();
        boolean boolean11 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.io.Serializable serializable14 = strTrieMap0.put("hi!", (java.io.Serializable) 10L);
        java.util.Map<java.lang.String, java.io.Serializable> strMap15 = strTrieMap0.toMap();
        java.io.Serializable serializable17 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        int int18 = strTrieMap0.size();
        boolean boolean19 = strTrieMap0.validate();
        strTrieMap0.clear();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(serializable17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        boolean boolean7 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        boolean boolean8 = strTrieMap0.validate();
        java.io.Serializable serializable10 = strTrieMap0.remove("");
        strTrieMap0.clear();
        boolean boolean13 = strTrieMap0.contains("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap14 = strTrieMap0.toMap();
        java.lang.Class<?> wildcardClass15 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        boolean boolean9 = strTrieMap0.contains("");
        java.io.Serializable serializable11 = strTrieMap0.remove("\u2514\u2500\u2500 null\n");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap13 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable15 = strTrieMap13.get("hi!");
        strTrieMap13.clear();
        java.io.Serializable serializable18 = strTrieMap13.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap19 = strTrieMap13.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap20 = strTrieMap13.toMap();
        java.lang.Class<?> wildcardClass21 = strTrieMap13.getClass();
        java.io.Serializable serializable22 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n", (java.io.Serializable) wildcardClass21);
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertNull(serializable18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNull(serializable22);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean4 = strTrieMap0.validate();
        boolean boolean6 = strTrieMap0.contains("");
        java.io.Serializable serializable8 = strTrieMap0.get("");
        int int9 = strTrieMap0.size();
        strTrieMap0.clear();
        boolean boolean12 = strTrieMap0.contains("\u2514\u2500\u2500 null\n");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap14 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable16 = strTrieMap14.get("hi!");
        java.io.Serializable serializable18 = strTrieMap14.get("");
        java.io.Serializable serializable20 = strTrieMap14.get("\u2514\u2500\u2500 null\n");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap22 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable24 = strTrieMap22.get("");
        boolean boolean25 = strTrieMap22.validate();
        boolean boolean26 = strTrieMap22.validate();
        java.io.Serializable serializable28 = strTrieMap22.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap29 = strTrieMap22.toMap();
        int int30 = strTrieMap22.size();
        java.lang.Class<?> wildcardClass31 = strTrieMap22.getClass();
        java.io.Serializable serializable32 = strTrieMap14.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n", (java.io.Serializable) wildcardClass31);
        java.io.Serializable serializable33 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {}\n", (java.io.Serializable) wildcardClass31);
        java.io.Serializable serializable35 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        boolean boolean36 = strTrieMap0.validate();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertNull(serializable18);
        org.junit.Assert.assertNull(serializable20);
        org.junit.Assert.assertNull(serializable24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(serializable28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNull(serializable32);
        org.junit.Assert.assertNull(serializable33);
        org.junit.Assert.assertNull(serializable35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean3 = strTrieMap0.validate();
        int int4 = strTrieMap0.size();
        boolean boolean5 = strTrieMap0.validate();
        java.io.Serializable serializable8 = strTrieMap0.put("\u2514\u2500\u2500 null\n", (java.io.Serializable) "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(serializable8);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean4 = strTrieMap0.validate();
        java.io.Serializable serializable6 = strTrieMap0.get("hi!");
        java.io.Serializable serializable9 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) '#');
        java.io.Serializable serializable11 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {}\n");
        java.io.Serializable serializable13 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(serializable13);
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean4 = strTrieMap0.validate();
        boolean boolean6 = strTrieMap0.contains("");
        strTrieMap0.clear();
        java.lang.Class<?> wildcardClass8 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        int int6 = strTrieMap0.size();
        java.io.Serializable serializable8 = strTrieMap0.get("hi!");
        boolean boolean10 = strTrieMap0.contains("hi!");
        boolean boolean12 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        java.util.Map<java.lang.String, java.io.Serializable> strMap13 = strTrieMap0.toMap();
        boolean boolean15 = strTrieMap0.contains("\u2514\u2500\u2500 null\n");
        boolean boolean17 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n");
        java.util.Map<java.lang.String, java.io.Serializable> strMap18 = strTrieMap0.toMap();
        java.lang.Class<?> wildcardClass19 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean5 = strTrieMap0.contains("hi!");
        int int6 = strTrieMap0.size();
        boolean boolean8 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        java.io.Serializable serializable7 = strTrieMap0.remove("");
        int int8 = strTrieMap0.size();
        boolean boolean10 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.util.Map<java.lang.String, java.io.Serializable> strMap11 = strTrieMap0.toMap();
        boolean boolean12 = strTrieMap0.validate();
        boolean boolean13 = strTrieMap0.validate();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        boolean boolean9 = strTrieMap0.contains("hi!");
        strTrieMap0.clear();
        java.lang.Class<?> wildcardClass11 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        int int8 = strTrieMap0.size();
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        java.io.Serializable serializable11 = strTrieMap0.remove("");
        java.io.Serializable serializable13 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(serializable13);
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap9 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.lang.Class<?> wildcardClass10 = strTrieMap9.getClass();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) wildcardClass10);
        boolean boolean13 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable15 = null;
        java.io.Serializable serializable16 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", serializable15);
        java.io.Serializable serializable18 = strTrieMap0.remove("\u2514\u2500\u2500 null\n");
        java.io.Serializable serializable20 = strTrieMap0.get("\u2514\u2500\u2500 null\n");
        boolean boolean21 = strTrieMap0.validate();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertNull(serializable18);
        org.junit.Assert.assertNull(serializable20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        int int6 = strTrieMap0.size();
        strTrieMap0.clear();
        java.io.Serializable serializable9 = strTrieMap0.get("");
        java.util.Map<java.lang.String, java.io.Serializable> strMap10 = strTrieMap0.toMap();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean5 = strTrieMap0.contains("hi!");
        boolean boolean6 = strTrieMap0.validate();
        boolean boolean8 = strTrieMap0.contains("");
        boolean boolean9 = strTrieMap0.validate();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean4 = strTrieMap0.validate();
        boolean boolean6 = strTrieMap0.contains("");
        java.io.Serializable serializable8 = strTrieMap0.get("");
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap10 = strTrieMap0.toMap();
        boolean boolean11 = strTrieMap0.validate();
        java.io.Serializable serializable13 = strTrieMap0.get("\u2514\u2500\u2500 null\n");
        java.io.Serializable serializable15 = strTrieMap0.get("hi!");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap17 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable19 = strTrieMap17.get("");
        java.io.Serializable serializable21 = strTrieMap17.get("hi!");
        java.io.Serializable serializable24 = strTrieMap17.put("hi!", (java.io.Serializable) true);
        int int25 = strTrieMap17.size();
        java.io.Serializable serializable27 = strTrieMap17.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap28 = strTrieMap17.toMap();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap30 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable32 = strTrieMap30.remove("");
        boolean boolean33 = strTrieMap30.validate();
        boolean boolean34 = strTrieMap30.validate();
        boolean boolean36 = strTrieMap30.contains("");
        java.lang.Class<?> wildcardClass37 = strTrieMap30.getClass();
        java.io.Serializable serializable38 = strTrieMap17.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n", (java.io.Serializable) wildcardClass37);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable39 = strTrieMap0.put("", (java.io.Serializable) "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertNull(serializable19);
        org.junit.Assert.assertNull(serializable21);
        org.junit.Assert.assertNull(serializable24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + true + "'", serializable27, true);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(serializable32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNull(serializable38);
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        boolean boolean7 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.io.Serializable serializable9 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
        java.util.Map<java.lang.String, java.io.Serializable> strMap10 = strTrieMap0.toMap();
        java.io.Serializable serializable12 = strTrieMap0.get("");
        java.lang.Class<?> wildcardClass13 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        java.io.Serializable serializable8 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n", (java.io.Serializable) true);
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap10 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.lang.Class<?> wildcardClass12 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) 1.0f);
        java.io.Serializable serializable13 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        boolean boolean14 = strTrieMap0.validate();
        boolean boolean16 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap18 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable20 = strTrieMap18.get("");
        boolean boolean22 = strTrieMap18.contains("hi!");
        java.io.Serializable serializable25 = strTrieMap18.put("hi!", (java.io.Serializable) 100);
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap27 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.lang.Class<?> wildcardClass28 = strTrieMap27.getClass();
        java.io.Serializable serializable29 = strTrieMap18.put("hi!", (java.io.Serializable) wildcardClass28);
        java.io.Serializable serializable32 = strTrieMap18.put("\u2514\u2500\u2500 null\n", (java.io.Serializable) "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
        java.io.Serializable serializable34 = strTrieMap18.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap35 = strTrieMap18.toMap();
        java.lang.Class<?> wildcardClass36 = strTrieMap18.getClass();
        java.io.Serializable serializable37 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n", (java.io.Serializable) wildcardClass36);
        java.io.Serializable serializable39 = null;
        java.io.Serializable serializable40 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", serializable39);
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(serializable20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(serializable25);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNull(serializable29);
        org.junit.Assert.assertNull(serializable32);
        org.junit.Assert.assertEquals("'" + serializable34 + "' != '" + 100 + "'", serializable34, 100);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNull(serializable37);
        org.junit.Assert.assertNull(serializable40);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean6 = strTrieMap0.contains("hi!");
        boolean boolean7 = strTrieMap0.validate();
        boolean boolean9 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        int int6 = strTrieMap0.size();
        strTrieMap0.clear();
        java.io.Serializable serializable9 = strTrieMap0.get("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass10 = serializable9.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(serializable9);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap8 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        java.io.Serializable serializable11 = strTrieMap0.remove("hi!");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(serializable11);
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        strTrieMap0.clear();
        int int8 = strTrieMap0.size();
        java.io.Serializable serializable10 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(serializable10);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap6 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable8 = strTrieMap6.get("hi!");
        java.io.Serializable serializable10 = strTrieMap6.get("");
        java.lang.Class<?> wildcardClass11 = strTrieMap6.getClass();
        java.io.Serializable serializable12 = strTrieMap0.put("hi!", (java.io.Serializable) wildcardClass11);
        java.util.Map<java.lang.String, java.io.Serializable> strMap13 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap14 = strTrieMap0.toMap();
        int int15 = strTrieMap0.size();
        java.lang.String str16 = strTrieMap0.toString();
        java.io.Serializable serializable18 = strTrieMap0.remove("\u2514\u2500\u2500 null\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n" + "'", str16, "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n");
        org.junit.Assert.assertNull(serializable18);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        java.io.Serializable serializable7 = strTrieMap0.get("");
        boolean boolean9 = strTrieMap0.contains("\u2514\u2500\u2500 null\n");
        java.util.Map<java.lang.String, java.io.Serializable> strMap10 = strTrieMap0.toMap();
        int int11 = strTrieMap0.size();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) 1.0f);
        java.io.Serializable serializable13 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        boolean boolean14 = strTrieMap0.validate();
        boolean boolean16 = strTrieMap0.contains("hi!");
        java.lang.Class<?> wildcardClass17 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap5 = strTrieMap0.toMap();
        boolean boolean6 = strTrieMap0.validate();
        strTrieMap0.clear();
        boolean boolean9 = strTrieMap0.contains("\u2514\u2500\u2500 null\n");
        strTrieMap0.clear();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap9 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.lang.Class<?> wildcardClass10 = strTrieMap9.getClass();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) wildcardClass10);
        boolean boolean13 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable15 = null;
        java.io.Serializable serializable16 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", serializable15);
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap18 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable20 = strTrieMap18.get("hi!");
        java.io.Serializable serializable22 = strTrieMap18.get("");
        java.util.Map<java.lang.String, java.io.Serializable> strMap23 = strTrieMap18.toMap();
        java.lang.Class<?> wildcardClass24 = strTrieMap18.getClass();
        java.io.Serializable serializable25 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n", (java.io.Serializable) wildcardClass24);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass26 = serializable25.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertNull(serializable20);
        org.junit.Assert.assertNull(serializable22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNull(serializable25);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean6 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable8 = strTrieMap0.get("");
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        int int10 = strTrieMap0.size();
        java.io.Serializable serializable12 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {null}\n");
        java.io.Serializable serializable14 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertNull(serializable14);
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        java.io.Serializable serializable9 = strTrieMap0.remove("hi!");
        java.lang.String str10 = strTrieMap0.toString();
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap12 = strTrieMap0.toMap();
        boolean boolean13 = strTrieMap0.validate();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + true + "'", serializable9, true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\u2514\u2500\u2500 null\n" + "'", str10, "\u2514\u2500\u2500 null\n");
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean5 = strTrieMap0.contains("hi!");
        boolean boolean7 = strTrieMap0.contains("hi!");
        boolean boolean8 = strTrieMap0.validate();
        strTrieMap0.clear();
        boolean boolean11 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n");
        java.io.Serializable serializable13 = strTrieMap0.remove("hi!");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(serializable13);
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean6 = strTrieMap0.contains("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        int int8 = strTrieMap0.size();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        java.io.Serializable serializable9 = strTrieMap0.remove("hi!");
        boolean boolean11 = strTrieMap0.contains("");
        boolean boolean13 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n");
        java.lang.Class<?> wildcardClass14 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 100 + "'", serializable9, 100);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        boolean boolean5 = strTrieMap0.contains("");
        java.io.Serializable serializable7 = strTrieMap0.get("");
        java.io.Serializable serializable9 = strTrieMap0.remove("\u2514\u2500\u2500 null\n");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap11 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable13 = strTrieMap11.get("");
        java.io.Serializable serializable15 = strTrieMap11.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap16 = strTrieMap11.toMap();
        boolean boolean18 = strTrieMap11.contains("\u2514\u2500\u2500 null\n");
        java.lang.Class<?> wildcardClass19 = strTrieMap11.getClass();
        java.io.Serializable serializable20 = strTrieMap0.put("hi!", (java.io.Serializable) wildcardClass19);
        java.io.Serializable serializable22 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass23 = serializable22.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNull(serializable20);
        org.junit.Assert.assertNull(serializable22);
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        int int8 = strTrieMap0.size();
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        java.io.Serializable serializable11 = strTrieMap0.remove("");
        java.util.Map<java.lang.String, java.io.Serializable> strMap12 = strTrieMap0.toMap();
        java.lang.Class<?> wildcardClass13 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        int int8 = strTrieMap0.size();
        java.io.Serializable serializable10 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        java.io.Serializable serializable12 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertNull(serializable12);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        strTrieMap0.clear();
        java.io.Serializable serializable6 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) 0);
        java.io.Serializable serializable8 = strTrieMap0.get("hi!");
        java.io.Serializable serializable10 = strTrieMap0.remove("hi!");
        boolean boolean12 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        boolean boolean13 = strTrieMap0.validate();
        boolean boolean14 = strTrieMap0.validate();
        int int15 = strTrieMap0.size();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        strTrieMap0.clear();
        java.io.Serializable serializable6 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) 0);
        java.io.Serializable serializable8 = strTrieMap0.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        boolean boolean10 = strTrieMap0.validate();
        java.util.Map<java.lang.String, java.io.Serializable> strMap11 = strTrieMap0.toMap();
        java.lang.Class<?> wildcardClass12 = strMap11.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        boolean boolean9 = strTrieMap0.contains("");
        java.util.Map<java.lang.String, java.io.Serializable> strMap10 = strTrieMap0.toMap();
        java.lang.String str11 = strTrieMap0.toString();
        boolean boolean13 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n" + "'", str11, "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.io.Serializable serializable8 = strTrieMap0.remove("hi!");
        java.io.Serializable serializable10 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        boolean boolean11 = strTrieMap0.validate();
        int int12 = strTrieMap0.size();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        java.io.Serializable serializable7 = strTrieMap0.remove("");
        int int8 = strTrieMap0.size();
        boolean boolean10 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.util.Map<java.lang.String, java.io.Serializable> strMap11 = strTrieMap0.toMap();
        boolean boolean12 = strTrieMap0.validate();
        boolean boolean14 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        boolean boolean7 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable9 = strTrieMap0.get("");
        strTrieMap0.clear();
        java.io.Serializable serializable12 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        java.io.Serializable serializable14 = strTrieMap0.remove("");
        int int15 = strTrieMap0.size();
        boolean boolean16 = strTrieMap0.validate();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap8 = strTrieMap0.toMap();
        boolean boolean9 = strTrieMap0.validate();
        boolean boolean11 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.io.Serializable serializable14 = strTrieMap0.put("hi!", (java.io.Serializable) 10L);
        java.util.Map<java.lang.String, java.io.Serializable> strMap15 = strTrieMap0.toMap();
        strTrieMap0.clear();
        boolean boolean18 = strTrieMap0.contains("hi!");
        int int19 = strTrieMap0.size();
        boolean boolean21 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u251c\u2500\u2500 h\n\u2502\u2514\u2500\u2500 hi\n\u2502\u2514\u2500\u2500 (!) hi! = {100}\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        boolean boolean8 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable10 = strTrieMap0.remove("hi!");
        java.io.Serializable serializable13 = strTrieMap0.put("hi!", (java.io.Serializable) "");
        int int14 = strTrieMap0.size();
        strTrieMap0.clear();
        strTrieMap0.clear();
        boolean boolean18 = strTrieMap0.contains("");
        boolean boolean20 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        java.util.Map<java.lang.String, java.io.Serializable> strMap21 = strTrieMap0.toMap();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strMap21);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        boolean boolean7 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        boolean boolean8 = strTrieMap0.validate();
        java.io.Serializable serializable10 = strTrieMap0.remove("");
        boolean boolean12 = strTrieMap0.contains("");
        strTrieMap0.clear();
        java.lang.Class<?> wildcardClass14 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        java.io.Serializable serializable4 = strTrieMap0.get("");
        strTrieMap0.clear();
        java.lang.Class<?> wildcardClass6 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean5 = strTrieMap0.contains("hi!");
        boolean boolean7 = strTrieMap0.contains("");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        java.io.Serializable serializable11 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        java.io.Serializable serializable13 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.io.Serializable serializable15 = strTrieMap0.remove("\u2514\u2500\u2500 null\n");
        boolean boolean17 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap19 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable21 = strTrieMap19.get("");
        strTrieMap19.clear();
        java.io.Serializable serializable25 = strTrieMap19.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) 0);
        java.io.Serializable serializable27 = strTrieMap19.get("hi!");
        java.io.Serializable serializable29 = strTrieMap19.remove("hi!");
        java.io.Serializable serializable31 = strTrieMap19.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap33 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable35 = strTrieMap33.get("");
        java.io.Serializable serializable37 = strTrieMap33.get("hi!");
        strTrieMap33.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap39 = strTrieMap33.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap40 = strTrieMap33.toMap();
        strTrieMap33.clear();
        java.io.Serializable serializable44 = strTrieMap33.put("hi!", (java.io.Serializable) 1.0f);
        java.util.Map<java.lang.String, java.io.Serializable> strMap45 = strTrieMap33.toMap();
        java.io.Serializable serializable47 = strTrieMap33.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        java.io.Serializable serializable49 = strTrieMap33.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n");
        java.lang.Class<?> wildcardClass50 = strTrieMap33.getClass();
        java.io.Serializable serializable51 = strTrieMap19.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n", (java.io.Serializable) wildcardClass50);
        java.io.Serializable serializable52 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {null}\n", serializable51);
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(serializable21);
        org.junit.Assert.assertNull(serializable25);
        org.junit.Assert.assertNull(serializable27);
        org.junit.Assert.assertNull(serializable29);
        org.junit.Assert.assertNull(serializable31);
        org.junit.Assert.assertNull(serializable35);
        org.junit.Assert.assertNull(serializable37);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(serializable44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(serializable47);
        org.junit.Assert.assertNull(serializable49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNull(serializable51);
        org.junit.Assert.assertNull(serializable52);
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap9 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.lang.Class<?> wildcardClass10 = strTrieMap9.getClass();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) wildcardClass10);
        boolean boolean13 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable15 = null;
        java.io.Serializable serializable16 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", serializable15);
        java.io.Serializable serializable18 = strTrieMap0.remove("\u2514\u2500\u2500 null\n");
        boolean boolean19 = strTrieMap0.validate();
        int int20 = strTrieMap0.size();
        java.lang.Class<?> wildcardClass21 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertNull(serializable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        boolean boolean5 = strTrieMap0.contains("");
        java.io.Serializable serializable7 = strTrieMap0.get("");
        int int8 = strTrieMap0.size();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        java.io.Serializable serializable4 = strTrieMap0.get("");
        java.io.Serializable serializable6 = strTrieMap0.get("\u2514\u2500\u2500 null\n");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap8 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable10 = strTrieMap8.get("");
        boolean boolean11 = strTrieMap8.validate();
        boolean boolean12 = strTrieMap8.validate();
        java.io.Serializable serializable14 = strTrieMap8.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap15 = strTrieMap8.toMap();
        int int16 = strTrieMap8.size();
        java.lang.Class<?> wildcardClass17 = strTrieMap8.getClass();
        java.io.Serializable serializable18 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n", (java.io.Serializable) wildcardClass17);
        strTrieMap0.clear();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNull(serializable18);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap4 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable6 = strTrieMap4.get("hi!");
        strTrieMap4.clear();
        boolean boolean9 = strTrieMap4.contains("");
        boolean boolean11 = strTrieMap4.contains("hi!");
        java.lang.Class<?> wildcardClass12 = strTrieMap4.getClass();
        java.io.Serializable serializable13 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n", (java.io.Serializable) wildcardClass12);
        java.io.Serializable serializable15 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n");
        strTrieMap0.clear();
        boolean boolean17 = strTrieMap0.validate();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap19 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable21 = strTrieMap19.get("");
        boolean boolean22 = strTrieMap19.validate();
        boolean boolean23 = strTrieMap19.validate();
        boolean boolean25 = strTrieMap19.contains("");
        java.io.Serializable serializable27 = strTrieMap19.get("");
        int int28 = strTrieMap19.size();
        strTrieMap19.clear();
        boolean boolean31 = strTrieMap19.contains("\u2514\u2500\u2500 null\n");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap33 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable35 = strTrieMap33.get("hi!");
        java.io.Serializable serializable37 = strTrieMap33.get("");
        java.io.Serializable serializable39 = strTrieMap33.get("\u2514\u2500\u2500 null\n");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap41 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable43 = strTrieMap41.get("");
        boolean boolean44 = strTrieMap41.validate();
        boolean boolean45 = strTrieMap41.validate();
        java.io.Serializable serializable47 = strTrieMap41.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap48 = strTrieMap41.toMap();
        int int49 = strTrieMap41.size();
        java.lang.Class<?> wildcardClass50 = strTrieMap41.getClass();
        java.io.Serializable serializable51 = strTrieMap33.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n", (java.io.Serializable) wildcardClass50);
        java.io.Serializable serializable52 = strTrieMap19.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {}\n", (java.io.Serializable) wildcardClass50);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable53 = strTrieMap0.put("", serializable52);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(serializable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(serializable27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(serializable35);
        org.junit.Assert.assertNull(serializable37);
        org.junit.Assert.assertNull(serializable39);
        org.junit.Assert.assertNull(serializable43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(serializable47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNull(serializable51);
        org.junit.Assert.assertNull(serializable52);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        boolean boolean5 = strTrieMap0.contains("");
        boolean boolean7 = strTrieMap0.contains("hi!");
        boolean boolean8 = strTrieMap0.validate();
        java.io.Serializable serializable10 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.util.Map<java.lang.String, java.io.Serializable> strMap11 = strTrieMap0.toMap();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertNotNull(strMap11);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap8 = strTrieMap0.toMap();
        boolean boolean10 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n");
        boolean boolean11 = strTrieMap0.validate();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        strTrieMap0.clear();
        int int9 = strTrieMap0.size();
        int int10 = strTrieMap0.size();
        java.io.Serializable serializable12 = strTrieMap0.get("hi!");
        int int13 = strTrieMap0.size();
        java.io.Serializable serializable16 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n", (java.io.Serializable) 10.0f);
        boolean boolean18 = strTrieMap0.contains("hi!");
        strTrieMap0.clear();
        boolean boolean21 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        java.io.Serializable serializable23 = strTrieMap0.remove("hi!");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(serializable23);
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap9 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.lang.Class<?> wildcardClass10 = strTrieMap9.getClass();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) wildcardClass10);
        boolean boolean13 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable15 = strTrieMap0.get("hi!");
        java.io.Serializable serializable17 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        strTrieMap0.clear();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap20 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable22 = strTrieMap20.get("hi!");
        strTrieMap20.clear();
        boolean boolean25 = strTrieMap20.contains("");
        boolean boolean27 = strTrieMap20.contains("hi!");
        java.lang.Class<?> wildcardClass28 = strTrieMap20.getClass();
        java.io.Serializable serializable29 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {}\n", (java.io.Serializable) wildcardClass28);
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 100 + "'", serializable15, 100);
        org.junit.Assert.assertNull(serializable17);
        org.junit.Assert.assertNull(serializable22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNull(serializable29);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        boolean boolean8 = strTrieMap0.validate();
        java.io.Serializable serializable10 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n");
        java.lang.String str11 = strTrieMap0.toString();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n" + "'", str11, "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        int int8 = strTrieMap0.size();
        java.io.Serializable serializable10 = strTrieMap0.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap11 = strTrieMap0.toMap();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap13 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable15 = strTrieMap13.remove("");
        boolean boolean16 = strTrieMap13.validate();
        boolean boolean17 = strTrieMap13.validate();
        boolean boolean19 = strTrieMap13.contains("");
        java.lang.Class<?> wildcardClass20 = strTrieMap13.getClass();
        java.io.Serializable serializable21 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n", (java.io.Serializable) wildcardClass20);
        strTrieMap0.clear();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + true + "'", serializable10, true);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNull(serializable21);
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        java.io.Serializable serializable7 = strTrieMap0.remove("");
        int int8 = strTrieMap0.size();
        boolean boolean10 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        strTrieMap0.clear();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        boolean boolean7 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        boolean boolean8 = strTrieMap0.validate();
        java.io.Serializable serializable10 = strTrieMap0.remove("");
        boolean boolean12 = strTrieMap0.contains("");
        boolean boolean14 = strTrieMap0.contains("");
        java.io.Serializable serializable16 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        int int17 = strTrieMap0.size();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        boolean boolean8 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable10 = strTrieMap0.remove("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap11 = strTrieMap0.toMap();
        boolean boolean12 = strTrieMap0.validate();
        java.io.Serializable serializable14 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
        java.lang.Class<?> wildcardClass15 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean4 = strTrieMap0.validate();
        boolean boolean6 = strTrieMap0.contains("");
        java.io.Serializable serializable8 = strTrieMap0.get("");
        int int9 = strTrieMap0.size();
        boolean boolean11 = strTrieMap0.contains("\u2514\u2500\u2500 null\n");
        strTrieMap0.clear();
        strTrieMap0.clear();
        boolean boolean14 = strTrieMap0.validate();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap16 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable18 = strTrieMap16.get("");
        strTrieMap16.clear();
        java.io.Serializable serializable22 = strTrieMap16.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) 0);
        java.io.Serializable serializable24 = strTrieMap16.get("hi!");
        java.io.Serializable serializable26 = strTrieMap16.remove("hi!");
        java.io.Serializable serializable28 = strTrieMap16.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap30 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable32 = strTrieMap30.get("");
        java.io.Serializable serializable34 = strTrieMap30.get("hi!");
        strTrieMap30.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap36 = strTrieMap30.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap37 = strTrieMap30.toMap();
        strTrieMap30.clear();
        java.io.Serializable serializable41 = strTrieMap30.put("hi!", (java.io.Serializable) 1.0f);
        java.util.Map<java.lang.String, java.io.Serializable> strMap42 = strTrieMap30.toMap();
        java.io.Serializable serializable44 = strTrieMap30.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        java.io.Serializable serializable46 = strTrieMap30.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n");
        java.lang.Class<?> wildcardClass47 = strTrieMap30.getClass();
        java.io.Serializable serializable48 = strTrieMap16.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n", (java.io.Serializable) wildcardClass47);
        java.io.Serializable serializable49 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u251c\u2500\u2500 h\n\u2502\u2514\u2500\u2500 hi\n\u2502\u2514\u2500\u2500 (!) hi! = {100}\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n}\n", serializable48);
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(serializable18);
        org.junit.Assert.assertNull(serializable22);
        org.junit.Assert.assertNull(serializable24);
        org.junit.Assert.assertNull(serializable26);
        org.junit.Assert.assertNull(serializable28);
        org.junit.Assert.assertNull(serializable32);
        org.junit.Assert.assertNull(serializable34);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(serializable41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(serializable44);
        org.junit.Assert.assertNull(serializable46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNull(serializable48);
        org.junit.Assert.assertNull(serializable49);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        java.io.Serializable serializable4 = strTrieMap0.get("");
        boolean boolean6 = strTrieMap0.contains("\u2514\u2500\u2500 null\n");
        java.io.Serializable serializable8 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.io.Serializable serializable10 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        strTrieMap0.clear();
        java.io.Serializable serializable13 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass14 = serializable13.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertNull(serializable13);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        strTrieMap0.clear();
        int int9 = strTrieMap0.size();
        int int10 = strTrieMap0.size();
        java.io.Serializable serializable12 = strTrieMap0.get("");
        boolean boolean13 = strTrieMap0.validate();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap6 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable8 = strTrieMap6.get("hi!");
        java.io.Serializable serializable10 = strTrieMap6.get("");
        java.lang.Class<?> wildcardClass11 = strTrieMap6.getClass();
        java.io.Serializable serializable12 = strTrieMap0.put("hi!", (java.io.Serializable) wildcardClass11);
        java.util.Map<java.lang.String, java.io.Serializable> strMap13 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.io.Serializable serializable16 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {}\n");
        strTrieMap0.clear();
        boolean boolean18 = strTrieMap0.validate();
        boolean boolean20 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap8 = strTrieMap0.toMap();
        boolean boolean9 = strTrieMap0.validate();
        boolean boolean11 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.io.Serializable serializable14 = strTrieMap0.put("hi!", (java.io.Serializable) 10L);
        java.util.Map<java.lang.String, java.io.Serializable> strMap15 = strTrieMap0.toMap();
        strTrieMap0.clear();
        boolean boolean18 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {null}\n");
        boolean boolean20 = strTrieMap0.contains("hi!");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        boolean boolean7 = strTrieMap0.contains("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap8 = strTrieMap0.toMap();
        boolean boolean10 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.util.Map<java.lang.String, java.io.Serializable> strMap11 = strTrieMap0.toMap();
        java.lang.Class<?> wildcardClass12 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap9 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.lang.Class<?> wildcardClass10 = strTrieMap9.getClass();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) wildcardClass10);
        boolean boolean13 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable15 = null;
        java.io.Serializable serializable16 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", serializable15);
        java.io.Serializable serializable18 = strTrieMap0.remove("\u2514\u2500\u2500 null\n");
        java.io.Serializable serializable20 = strTrieMap0.remove("");
        java.io.Serializable serializable23 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n", (java.io.Serializable) "");
        boolean boolean25 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.io.Serializable serializable27 = strTrieMap0.get("hi!");
        java.lang.Class<?> wildcardClass28 = serializable27.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertNull(serializable18);
        org.junit.Assert.assertNull(serializable20);
        org.junit.Assert.assertNull(serializable23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + serializable27 + "' != '" + 100 + "'", serializable27, 100);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean4 = strTrieMap0.validate();
        java.io.Serializable serializable6 = strTrieMap0.get("hi!");
        boolean boolean8 = strTrieMap0.contains("");
        boolean boolean9 = strTrieMap0.validate();
        java.io.Serializable serializable11 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap13 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable15 = strTrieMap13.get("");
        java.io.Serializable serializable17 = strTrieMap13.remove("");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap19 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable21 = strTrieMap19.get("");
        strTrieMap19.clear();
        java.io.Serializable serializable25 = strTrieMap19.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) 0);
        java.lang.Class<?> wildcardClass26 = strTrieMap19.getClass();
        java.io.Serializable serializable27 = strTrieMap13.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n", (java.io.Serializable) wildcardClass26);
        java.io.Serializable serializable28 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n", serializable27);
        boolean boolean30 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
        java.io.Serializable serializable32 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertNull(serializable17);
        org.junit.Assert.assertNull(serializable21);
        org.junit.Assert.assertNull(serializable25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNull(serializable27);
        org.junit.Assert.assertNull(serializable28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(serializable32);
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        strTrieMap0.clear();
        int int9 = strTrieMap0.size();
        int int10 = strTrieMap0.size();
        java.io.Serializable serializable13 = strTrieMap0.put("\u2514\u2500\u2500 null\n", (java.io.Serializable) (short) 1);
        java.io.Serializable serializable15 = strTrieMap0.get("");
        int int16 = strTrieMap0.size();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        java.io.Serializable serializable4 = strTrieMap0.get("");
        int int5 = strTrieMap0.size();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap7 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable9 = strTrieMap7.get("");
        boolean boolean11 = strTrieMap7.contains("hi!");
        java.io.Serializable serializable14 = strTrieMap7.put("hi!", (java.io.Serializable) 100);
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap16 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.lang.Class<?> wildcardClass17 = strTrieMap16.getClass();
        java.io.Serializable serializable18 = strTrieMap7.put("hi!", (java.io.Serializable) wildcardClass17);
        boolean boolean20 = strTrieMap7.contains("hi!");
        java.io.Serializable serializable22 = null;
        java.io.Serializable serializable23 = strTrieMap7.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", serializable22);
        java.io.Serializable serializable25 = strTrieMap7.remove("\u2514\u2500\u2500 null\n");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap27 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable29 = strTrieMap27.get("");
        strTrieMap27.clear();
        java.io.Serializable serializable33 = strTrieMap27.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) 0);
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap35 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable37 = strTrieMap35.get("");
        java.io.Serializable serializable39 = strTrieMap35.get("hi!");
        strTrieMap35.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap41 = strTrieMap35.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap42 = strTrieMap35.toMap();
        strTrieMap35.clear();
        java.io.Serializable serializable46 = strTrieMap35.put("hi!", (java.io.Serializable) 1.0f);
        java.io.Serializable serializable48 = strTrieMap35.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        strTrieMap35.clear();
        java.lang.Class<?> wildcardClass50 = strTrieMap35.getClass();
        java.io.Serializable serializable51 = strTrieMap27.put("hi!", (java.io.Serializable) wildcardClass50);
        java.io.Serializable serializable52 = strTrieMap7.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) wildcardClass50);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable53 = strTrieMap0.put("", (java.io.Serializable) "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNull(serializable18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(serializable23);
        org.junit.Assert.assertNull(serializable25);
        org.junit.Assert.assertNull(serializable29);
        org.junit.Assert.assertNull(serializable33);
        org.junit.Assert.assertNull(serializable37);
        org.junit.Assert.assertNull(serializable39);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(serializable46);
        org.junit.Assert.assertNull(serializable48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNull(serializable51);
        org.junit.Assert.assertNull(serializable52);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        boolean boolean7 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        int int8 = strTrieMap0.size();
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(strMap9);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean4 = strTrieMap0.validate();
        java.io.Serializable serializable6 = strTrieMap0.get("hi!");
        boolean boolean8 = strTrieMap0.contains("");
        int int9 = strTrieMap0.size();
        boolean boolean11 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        java.io.Serializable serializable13 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        int int14 = strTrieMap0.size();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        int int8 = strTrieMap0.size();
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        java.io.Serializable serializable11 = strTrieMap0.remove("");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap13 = strTrieMap0.toMap();
        java.io.Serializable serializable15 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
        java.lang.Class<?> wildcardClass16 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        boolean boolean5 = strTrieMap0.contains("");
        boolean boolean7 = strTrieMap0.contains("hi!");
        int int8 = strTrieMap0.size();
        boolean boolean10 = strTrieMap0.contains("\u2514\u2500\u2500 null\n");
        int int11 = strTrieMap0.size();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        boolean boolean7 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        boolean boolean9 = strTrieMap0.contains("");
        boolean boolean11 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        boolean boolean12 = strTrieMap0.validate();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap14 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable16 = strTrieMap14.get("");
        boolean boolean17 = strTrieMap14.validate();
        boolean boolean18 = strTrieMap14.validate();
        boolean boolean20 = strTrieMap14.contains("");
        java.io.Serializable serializable22 = strTrieMap14.get("");
        int int23 = strTrieMap14.size();
        boolean boolean25 = strTrieMap14.contains("");
        strTrieMap14.clear();
        int int27 = strTrieMap14.size();
        java.lang.Class<?> wildcardClass28 = strTrieMap14.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable29 = strTrieMap0.put("", (java.io.Serializable) wildcardClass28);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(serializable22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        boolean boolean5 = strTrieMap0.contains("");
        boolean boolean7 = strTrieMap0.contains("hi!");
        int int8 = strTrieMap0.size();
        boolean boolean10 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable12 = strTrieMap0.remove("");
        java.util.Map<java.lang.String, java.io.Serializable> strMap13 = strTrieMap0.toMap();
        strTrieMap0.clear();
        boolean boolean15 = strTrieMap0.validate();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        boolean boolean7 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable9 = strTrieMap0.get("");
        java.io.Serializable serializable11 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertNull(serializable11);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        boolean boolean5 = strTrieMap0.validate();
        boolean boolean6 = strTrieMap0.validate();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap8 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable10 = strTrieMap8.get("");
        java.io.Serializable serializable12 = strTrieMap8.get("hi!");
        strTrieMap8.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap14 = strTrieMap8.toMap();
        strTrieMap8.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap16 = strTrieMap8.toMap();
        boolean boolean17 = strTrieMap8.validate();
        boolean boolean19 = strTrieMap8.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.io.Serializable serializable22 = strTrieMap8.put("hi!", (java.io.Serializable) 10L);
        java.util.Map<java.lang.String, java.io.Serializable> strMap23 = strTrieMap8.toMap();
        java.lang.String str24 = strTrieMap8.toString();
        java.util.Map<java.lang.String, java.io.Serializable> strMap25 = strTrieMap8.toMap();
        int int26 = strTrieMap8.size();
        java.lang.Class<?> wildcardClass27 = strTrieMap8.getClass();
        java.io.Serializable serializable28 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n", (java.io.Serializable) wildcardClass27);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass29 = serializable28.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(serializable22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n" + "'", str24, "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNull(serializable28);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        strTrieMap0.clear();
        boolean boolean8 = strTrieMap0.validate();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap10 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable12 = strTrieMap10.get("");
        boolean boolean13 = strTrieMap10.validate();
        boolean boolean14 = strTrieMap10.validate();
        boolean boolean16 = strTrieMap10.contains("");
        java.io.Serializable serializable18 = strTrieMap10.get("");
        int int19 = strTrieMap10.size();
        strTrieMap10.clear();
        java.lang.Class<?> wildcardClass21 = strTrieMap10.getClass();
        java.io.Serializable serializable22 = strTrieMap0.put("\u2514\u2500\u2500 null\n", (java.io.Serializable) wildcardClass21);
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap24 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable26 = strTrieMap24.get("");
        java.io.Serializable serializable28 = strTrieMap24.get("hi!");
        strTrieMap24.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap30 = strTrieMap24.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap31 = strTrieMap24.toMap();
        strTrieMap24.clear();
        java.io.Serializable serializable35 = strTrieMap24.put("hi!", (java.io.Serializable) 1.0f);
        java.io.Serializable serializable37 = strTrieMap24.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        boolean boolean39 = strTrieMap24.contains("");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap41 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable43 = strTrieMap41.get("");
        java.io.Serializable serializable45 = strTrieMap41.remove("");
        boolean boolean46 = strTrieMap41.validate();
        int int47 = strTrieMap41.size();
        java.io.Serializable serializable49 = strTrieMap41.get("hi!");
        boolean boolean51 = strTrieMap41.contains("hi!");
        java.lang.Class<?> wildcardClass52 = strTrieMap41.getClass();
        java.io.Serializable serializable53 = strTrieMap24.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {1}\n", (java.io.Serializable) wildcardClass52);
        java.io.Serializable serializable54 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {}\n", serializable53);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass55 = serializable53.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(serializable18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNull(serializable22);
        org.junit.Assert.assertNull(serializable26);
        org.junit.Assert.assertNull(serializable28);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(serializable35);
        org.junit.Assert.assertNull(serializable37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(serializable43);
        org.junit.Assert.assertNull(serializable45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNull(serializable49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNull(serializable53);
        org.junit.Assert.assertNull(serializable54);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) 1.0f);
        java.util.Map<java.lang.String, java.io.Serializable> strMap12 = strTrieMap0.toMap();
        boolean boolean13 = strTrieMap0.validate();
        java.io.Serializable serializable16 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {null}\n", (java.io.Serializable) 2);
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(serializable16);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap8 = strTrieMap0.toMap();
        boolean boolean9 = strTrieMap0.validate();
        boolean boolean11 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.io.Serializable serializable14 = strTrieMap0.put("hi!", (java.io.Serializable) 10L);
        java.util.Map<java.lang.String, java.io.Serializable> strMap15 = strTrieMap0.toMap();
        java.io.Serializable serializable17 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        boolean boolean19 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
        boolean boolean20 = strTrieMap0.validate();
        boolean boolean22 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
        java.util.Map<java.lang.String, java.io.Serializable> strMap23 = strTrieMap0.toMap();
        java.lang.String str24 = strTrieMap0.toString();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(serializable17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n" + "'", str24, "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {}\n");
        java.io.Serializable serializable7 = strTrieMap0.get("\u2514\u2500\u2500 null\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertNull(serializable7);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        java.io.Serializable serializable8 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n", (java.io.Serializable) true);
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        int int10 = strTrieMap0.size();
        boolean boolean11 = strTrieMap0.validate();
        strTrieMap0.clear();
        java.lang.Class<?> wildcardClass13 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        int int6 = strTrieMap0.size();
        java.io.Serializable serializable8 = strTrieMap0.get("hi!");
        boolean boolean10 = strTrieMap0.contains("hi!");
        boolean boolean12 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        int int13 = strTrieMap0.size();
        java.io.Serializable serializable15 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        boolean boolean16 = strTrieMap0.validate();
        java.lang.Class<?> wildcardClass17 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        boolean boolean7 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable9 = strTrieMap0.get("");
        java.io.Serializable serializable11 = strTrieMap0.get("");
        java.io.Serializable serializable13 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.io.Serializable serializable15 = strTrieMap0.remove("hi!");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap17 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable19 = strTrieMap17.get("");
        java.io.Serializable serializable21 = strTrieMap17.get("hi!");
        java.io.Serializable serializable24 = strTrieMap17.put("hi!", (java.io.Serializable) true);
        java.io.Serializable serializable26 = strTrieMap17.get("");
        java.io.Serializable serializable28 = strTrieMap17.remove("");
        java.util.Map<java.lang.String, java.io.Serializable> strMap29 = strTrieMap17.toMap();
        java.lang.Class<?> wildcardClass30 = strMap29.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable31 = strTrieMap0.put("", (java.io.Serializable) wildcardClass30);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertNull(serializable19);
        org.junit.Assert.assertNull(serializable21);
        org.junit.Assert.assertNull(serializable24);
        org.junit.Assert.assertNull(serializable26);
        org.junit.Assert.assertNull(serializable28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean4 = strTrieMap0.validate();
        boolean boolean6 = strTrieMap0.contains("");
        java.io.Serializable serializable8 = strTrieMap0.get("");
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap10 = strTrieMap0.toMap();
        boolean boolean11 = strTrieMap0.validate();
        java.io.Serializable serializable14 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n", (java.io.Serializable) "\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(serializable14);
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap8 = strTrieMap0.toMap();
        boolean boolean9 = strTrieMap0.validate();
        boolean boolean11 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.io.Serializable serializable14 = strTrieMap0.put("hi!", (java.io.Serializable) 10L);
        java.util.Map<java.lang.String, java.io.Serializable> strMap15 = strTrieMap0.toMap();
        java.io.Serializable serializable17 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        boolean boolean19 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
        boolean boolean20 = strTrieMap0.validate();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap22 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable24 = strTrieMap22.remove("");
        boolean boolean25 = strTrieMap22.validate();
        java.io.Serializable serializable27 = strTrieMap22.get("hi!");
        boolean boolean29 = strTrieMap22.contains("");
        int int30 = strTrieMap22.size();
        java.lang.Class<?> wildcardClass31 = strTrieMap22.getClass();
        java.io.Serializable serializable32 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n", (java.io.Serializable) wildcardClass31);
        strTrieMap0.clear();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(serializable17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(serializable24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(serializable27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNull(serializable32);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        java.lang.String str8 = strTrieMap0.toString();
        java.io.Serializable serializable10 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass11 = serializable10.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n" + "'", str8, "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        org.junit.Assert.assertNull(serializable10);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        java.io.Serializable serializable8 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n", (java.io.Serializable) true);
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        int int10 = strTrieMap0.size();
        java.io.Serializable serializable12 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {null}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNull(serializable12);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        int int8 = strTrieMap0.size();
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        java.io.Serializable serializable11 = strTrieMap0.remove("");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap13 = strTrieMap0.toMap();
        boolean boolean14 = strTrieMap0.validate();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        boolean boolean7 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable9 = strTrieMap0.get("");
        java.io.Serializable serializable11 = strTrieMap0.get("");
        java.io.Serializable serializable13 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        boolean boolean15 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        strTrieMap0.clear();
        java.io.Serializable serializable6 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) 0);
        java.io.Serializable serializable8 = strTrieMap0.get("hi!");
        java.lang.Class<?> wildcardClass9 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        java.io.Serializable serializable9 = strTrieMap0.remove("hi!");
        java.lang.String str10 = strTrieMap0.toString();
        boolean boolean12 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        java.util.Map<java.lang.String, java.io.Serializable> strMap13 = strTrieMap0.toMap();
        java.io.Serializable serializable16 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n", (java.io.Serializable) 100.0f);
        java.io.Serializable serializable18 = null;
        java.io.Serializable serializable19 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n", serializable18);
        boolean boolean21 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + true + "'", serializable9, true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\u2514\u2500\u2500 null\n" + "'", str10, "\u2514\u2500\u2500 null\n");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertNull(serializable19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        strTrieMap0.clear();
        int int9 = strTrieMap0.size();
        int int10 = strTrieMap0.size();
        java.io.Serializable serializable12 = strTrieMap0.get("hi!");
        int int13 = strTrieMap0.size();
        int int14 = strTrieMap0.size();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap16 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable18 = strTrieMap16.get("");
        java.io.Serializable serializable20 = strTrieMap16.remove("");
        boolean boolean22 = strTrieMap16.contains("hi!");
        boolean boolean24 = strTrieMap16.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.lang.Class<?> wildcardClass25 = strTrieMap16.getClass();
        java.io.Serializable serializable26 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n", (java.io.Serializable) wildcardClass25);
        java.io.Serializable serializable28 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(serializable18);
        org.junit.Assert.assertNull(serializable20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNull(serializable26);
        org.junit.Assert.assertNull(serializable28);
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        boolean boolean8 = strTrieMap0.validate();
        boolean boolean9 = strTrieMap0.validate();
        boolean boolean10 = strTrieMap0.validate();
        java.io.Serializable serializable12 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {}\n");
        java.io.Serializable serializable14 = strTrieMap0.get("");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertNull(serializable14);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) 1.0f);
        java.io.Serializable serializable13 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        java.io.Serializable serializable15 = strTrieMap0.get("");
        java.io.Serializable serializable17 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        java.lang.String str18 = strTrieMap0.toString();
        int int19 = strTrieMap0.size();
        java.io.Serializable serializable21 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertNull(serializable17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n" + "'", str18, "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNull(serializable21);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        int int8 = strTrieMap0.size();
        java.io.Serializable serializable10 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        java.util.Map<java.lang.String, java.io.Serializable> strMap11 = strTrieMap0.toMap();
        java.lang.Class<?> wildcardClass12 = strMap11.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        strTrieMap0.clear();
        int int9 = strTrieMap0.size();
        java.io.Serializable serializable11 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass12 = serializable11.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(serializable11);
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean6 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable8 = strTrieMap0.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        int int10 = strTrieMap0.size();
        java.io.Serializable serializable12 = strTrieMap0.remove("hi!");
        java.io.Serializable serializable14 = strTrieMap0.get("hi!");
        java.io.Serializable serializable16 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNull(serializable16);
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean6 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable8 = strTrieMap0.get("hi!");
        boolean boolean10 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap12 = strTrieMap0.toMap();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strMap12);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean6 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable8 = strTrieMap0.get("hi!");
        boolean boolean10 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        strTrieMap0.clear();
        java.io.Serializable serializable14 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n", (java.io.Serializable) "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        strTrieMap0.clear();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(serializable14);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap8 = strTrieMap0.toMap();
        java.lang.Class<?> wildcardClass9 = strMap8.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        boolean boolean5 = strTrieMap0.contains("");
        boolean boolean7 = strTrieMap0.contains("hi!");
        boolean boolean8 = strTrieMap0.validate();
        boolean boolean9 = strTrieMap0.validate();
        strTrieMap0.clear();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.lang.reflect.AnnotatedElement> strTrieMap12 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.lang.reflect.AnnotatedElement>();
        java.lang.Class<?> wildcardClass13 = strTrieMap12.getClass();
        java.io.Serializable serializable14 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n", (java.io.Serializable) wildcardClass13);
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap16 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable18 = strTrieMap16.get("hi!");
        java.io.Serializable serializable20 = strTrieMap16.get("");
        java.lang.Class<?> wildcardClass21 = strTrieMap16.getClass();
        java.io.Serializable serializable22 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) wildcardClass21);
        int int23 = strTrieMap0.size();
        java.io.Serializable serializable25 = strTrieMap0.get("");
        java.util.Map<java.lang.String, java.io.Serializable> strMap26 = strTrieMap0.toMap();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNull(serializable18);
        org.junit.Assert.assertNull(serializable20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNull(serializable22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertNull(serializable25);
        org.junit.Assert.assertNotNull(strMap26);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        strTrieMap0.clear();
        java.io.Serializable serializable6 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) 0);
        java.io.Serializable serializable8 = strTrieMap0.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap10 = strTrieMap0.toMap();
        java.lang.Class<?> wildcardClass11 = strMap10.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        boolean boolean6 = strTrieMap0.validate();
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strMap7);
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap9 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.lang.Class<?> wildcardClass10 = strTrieMap9.getClass();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) wildcardClass10);
        boolean boolean13 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable15 = null;
        java.io.Serializable serializable16 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", serializable15);
        java.util.Map<java.lang.String, java.io.Serializable> strMap17 = strTrieMap0.toMap();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap19 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable21 = strTrieMap19.remove("");
        boolean boolean22 = strTrieMap19.validate();
        java.io.Serializable serializable24 = strTrieMap19.remove("");
        boolean boolean25 = strTrieMap19.validate();
        strTrieMap19.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap27 = strTrieMap19.toMap();
        strTrieMap19.clear();
        boolean boolean29 = strTrieMap19.validate();
        strTrieMap19.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap31 = strTrieMap19.toMap();
        java.lang.Class<?> wildcardClass32 = strMap31.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable33 = strTrieMap0.put("", (java.io.Serializable) wildcardClass32);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(serializable21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(serializable24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        boolean boolean5 = strTrieMap0.contains("");
        boolean boolean7 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable10 = strTrieMap0.put("hi!", (java.io.Serializable) 10.0f);
        java.util.Map<java.lang.String, java.io.Serializable> strMap11 = strTrieMap0.toMap();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertNotNull(strMap11);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.remove("");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean4 = strTrieMap0.validate();
        boolean boolean6 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        boolean boolean7 = strTrieMap0.validate();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean4 = strTrieMap0.validate();
        java.io.Serializable serializable6 = strTrieMap0.get("hi!");
        boolean boolean8 = strTrieMap0.contains("");
        int int9 = strTrieMap0.size();
        int int10 = strTrieMap0.size();
        java.io.Serializable serializable12 = strTrieMap0.get("hi!");
        java.io.Serializable serializable14 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {null}\n");
        java.io.Serializable serializable16 = strTrieMap0.remove("");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNull(serializable16);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        boolean boolean9 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        strTrieMap0.clear();
        java.io.Serializable serializable13 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) 'a');
        boolean boolean14 = strTrieMap0.validate();
        strTrieMap0.clear();
        java.io.Serializable serializable17 = strTrieMap0.remove("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap18 = strTrieMap0.toMap();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(serializable17);
        org.junit.Assert.assertNotNull(strMap18);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        java.io.Serializable serializable4 = strTrieMap0.get("");
        strTrieMap0.clear();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap7 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable9 = strTrieMap7.get("hi!");
        java.io.Serializable serializable11 = strTrieMap7.get("");
        java.lang.Class<?> wildcardClass12 = strTrieMap7.getClass();
        java.io.Serializable serializable13 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) wildcardClass12);
        int int14 = strTrieMap0.size();
        int int15 = strTrieMap0.size();
        strTrieMap0.clear();
        strTrieMap0.clear();
        boolean boolean18 = strTrieMap0.validate();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        java.io.Serializable serializable9 = strTrieMap0.remove("hi!");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap11 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable13 = strTrieMap11.get("");
        boolean boolean15 = strTrieMap11.contains("hi!");
        boolean boolean17 = strTrieMap11.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        java.io.Serializable serializable20 = strTrieMap11.put("\u2514\u2500\u2500 null\n", (java.io.Serializable) (short) 100);
        java.lang.String str21 = strTrieMap11.toString();
        java.lang.Class<?> wildcardClass22 = strTrieMap11.getClass();
        java.io.Serializable serializable23 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n", (java.io.Serializable) wildcardClass22);
        java.util.Map<java.lang.String, java.io.Serializable> strMap24 = strTrieMap0.toMap();
        strTrieMap0.clear();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + 100 + "'", serializable9, 100);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(serializable20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n" + "'", str21, "\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNull(serializable23);
        org.junit.Assert.assertNotNull(strMap24);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        boolean boolean6 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        java.io.Serializable serializable9 = strTrieMap0.put("\u2514\u2500\u2500 null\n", (java.io.Serializable) (short) 100);
        java.io.Serializable serializable11 = strTrieMap0.remove("");
        java.util.Map<java.lang.String, java.io.Serializable> strMap12 = strTrieMap0.toMap();
        java.io.Serializable serializable14 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {null}\n");
        java.io.Serializable serializable16 = strTrieMap0.get("");
        java.lang.Class<?> wildcardClass17 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        boolean boolean5 = strTrieMap0.contains("");
        boolean boolean7 = strTrieMap0.contains("hi!");
        int int8 = strTrieMap0.size();
        java.io.Serializable serializable10 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
        int int11 = strTrieMap0.size();
        strTrieMap0.clear();
        java.io.Serializable serializable14 = strTrieMap0.get("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass15 = serializable14.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(serializable14);
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean4 = strTrieMap0.validate();
        java.io.Serializable serializable6 = strTrieMap0.get("");
        boolean boolean8 = strTrieMap0.contains("\u2514\u2500\u2500 null\n");
        java.io.Serializable serializable10 = strTrieMap0.get("hi!");
        boolean boolean12 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {1}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        strTrieMap0.clear();
        int int9 = strTrieMap0.size();
        int int10 = strTrieMap0.size();
        boolean boolean12 = strTrieMap0.contains("hi!");
        strTrieMap0.clear();
        int int14 = strTrieMap0.size();
        int int15 = strTrieMap0.size();
        java.io.Serializable serializable17 = strTrieMap0.get("");
        strTrieMap0.clear();
        boolean boolean20 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n");
        java.io.Serializable serializable22 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(serializable17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(serializable22);
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean4 = strTrieMap0.validate();
        java.io.Serializable serializable6 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap8 = strTrieMap0.toMap();
        java.lang.Class<?> wildcardClass9 = strMap8.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.remove("");
        boolean boolean3 = strTrieMap0.validate();
        java.io.Serializable serializable5 = strTrieMap0.remove("");
        boolean boolean6 = strTrieMap0.validate();
        boolean boolean7 = strTrieMap0.validate();
        strTrieMap0.clear();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap10 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable12 = strTrieMap10.get("");
        boolean boolean14 = strTrieMap10.contains("hi!");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap16 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable18 = strTrieMap16.get("hi!");
        java.io.Serializable serializable20 = strTrieMap16.get("");
        java.lang.Class<?> wildcardClass21 = strTrieMap16.getClass();
        java.io.Serializable serializable22 = strTrieMap10.put("hi!", (java.io.Serializable) wildcardClass21);
        java.util.Map<java.lang.String, java.io.Serializable> strMap23 = strTrieMap10.toMap();
        strTrieMap10.clear();
        boolean boolean25 = strTrieMap10.validate();
        int int26 = strTrieMap10.size();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap28 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable30 = strTrieMap28.get("");
        java.io.Serializable serializable32 = strTrieMap28.remove("");
        boolean boolean34 = strTrieMap28.contains("hi!");
        java.io.Serializable serializable36 = strTrieMap28.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap37 = strTrieMap28.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap38 = strTrieMap28.toMap();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap40 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable42 = strTrieMap40.get("hi!");
        strTrieMap40.clear();
        java.io.Serializable serializable45 = strTrieMap40.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap46 = strTrieMap40.toMap();
        boolean boolean48 = strTrieMap40.contains("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap49 = strTrieMap40.toMap();
        java.io.Serializable serializable51 = strTrieMap40.remove("");
        boolean boolean52 = strTrieMap40.validate();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap54 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable56 = strTrieMap54.get("");
        java.io.Serializable serializable58 = strTrieMap54.get("hi!");
        java.io.Serializable serializable61 = strTrieMap54.put("hi!", (java.io.Serializable) true);
        strTrieMap54.clear();
        int int63 = strTrieMap54.size();
        int int64 = strTrieMap54.size();
        java.io.Serializable serializable66 = strTrieMap54.get("hi!");
        int int67 = strTrieMap54.size();
        int int68 = strTrieMap54.size();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap70 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable72 = strTrieMap70.get("");
        java.io.Serializable serializable74 = strTrieMap70.remove("");
        boolean boolean76 = strTrieMap70.contains("hi!");
        boolean boolean78 = strTrieMap70.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.lang.Class<?> wildcardClass79 = strTrieMap70.getClass();
        java.io.Serializable serializable80 = strTrieMap54.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n", (java.io.Serializable) wildcardClass79);
        java.io.Serializable serializable81 = strTrieMap40.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) wildcardClass79);
        java.io.Serializable serializable82 = strTrieMap28.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n", (java.io.Serializable) wildcardClass79);
        java.io.Serializable serializable83 = strTrieMap10.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {}\n", (java.io.Serializable) wildcardClass79);
        java.io.Serializable serializable84 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n", (java.io.Serializable) "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(serializable18);
        org.junit.Assert.assertNull(serializable20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNull(serializable22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(serializable30);
        org.junit.Assert.assertNull(serializable32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(serializable36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(serializable42);
        org.junit.Assert.assertNull(serializable45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(serializable51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(serializable56);
        org.junit.Assert.assertNull(serializable58);
        org.junit.Assert.assertNull(serializable61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNull(serializable66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNull(serializable72);
        org.junit.Assert.assertNull(serializable74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNull(serializable80);
        org.junit.Assert.assertNull(serializable81);
        org.junit.Assert.assertNull(serializable82);
        org.junit.Assert.assertNull(serializable83);
        org.junit.Assert.assertNull(serializable84);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        java.io.Serializable serializable9 = strTrieMap0.remove("");
        boolean boolean11 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap8 = strTrieMap0.toMap();
        boolean boolean9 = strTrieMap0.validate();
        boolean boolean11 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.io.Serializable serializable14 = strTrieMap0.put("hi!", (java.io.Serializable) 10L);
        java.util.Map<java.lang.String, java.io.Serializable> strMap15 = strTrieMap0.toMap();
        java.lang.String str16 = strTrieMap0.toString();
        java.util.Map<java.lang.String, java.io.Serializable> strMap17 = strTrieMap0.toMap();
        int int18 = strTrieMap0.size();
        int int19 = strTrieMap0.size();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap21 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable23 = strTrieMap21.remove("");
        boolean boolean24 = strTrieMap21.validate();
        boolean boolean25 = strTrieMap21.validate();
        boolean boolean27 = strTrieMap21.contains("");
        java.lang.Class<?> wildcardClass28 = strTrieMap21.getClass();
        java.io.Serializable serializable29 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) wildcardClass28);
        int int30 = strTrieMap0.size();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n" + "'", str16, "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNull(serializable23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNull(serializable29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        boolean boolean5 = strTrieMap0.contains("");
        boolean boolean7 = strTrieMap0.contains("hi!");
        boolean boolean8 = strTrieMap0.validate();
        boolean boolean9 = strTrieMap0.validate();
        strTrieMap0.clear();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.lang.reflect.AnnotatedElement> strTrieMap12 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.lang.reflect.AnnotatedElement>();
        java.lang.Class<?> wildcardClass13 = strTrieMap12.getClass();
        java.io.Serializable serializable14 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n", (java.io.Serializable) wildcardClass13);
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap16 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable18 = strTrieMap16.get("hi!");
        java.io.Serializable serializable20 = strTrieMap16.get("");
        java.lang.Class<?> wildcardClass21 = strTrieMap16.getClass();
        java.io.Serializable serializable22 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) wildcardClass21);
        java.lang.Class<?> wildcardClass23 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNull(serializable18);
        org.junit.Assert.assertNull(serializable20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNull(serializable22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        java.io.Serializable serializable4 = strTrieMap0.get("");
        strTrieMap0.clear();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap7 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable9 = strTrieMap7.get("");
        boolean boolean10 = strTrieMap7.validate();
        boolean boolean11 = strTrieMap7.validate();
        java.io.Serializable serializable13 = strTrieMap7.get("");
        boolean boolean15 = strTrieMap7.contains("hi!");
        int int16 = strTrieMap7.size();
        java.lang.Class<?> wildcardClass17 = strTrieMap7.getClass();
        java.io.Serializable serializable18 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n", (java.io.Serializable) wildcardClass17);
        java.io.Serializable serializable20 = strTrieMap0.remove("hi!");
        java.io.Serializable serializable22 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        boolean boolean24 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        java.io.Serializable serializable27 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {1}\n", (java.io.Serializable) (short) -1);
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNull(serializable18);
        org.junit.Assert.assertNull(serializable20);
        org.junit.Assert.assertNull(serializable22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(serializable27);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap9 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.lang.Class<?> wildcardClass10 = strTrieMap9.getClass();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) wildcardClass10);
        java.io.Serializable serializable14 = strTrieMap0.put("\u2514\u2500\u2500 null\n", (java.io.Serializable) "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
        java.util.Map<java.lang.String, java.io.Serializable> strMap15 = strTrieMap0.toMap();
        java.lang.String str16 = strTrieMap0.toString();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap18 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable20 = strTrieMap18.get("");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap22 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable24 = strTrieMap22.get("hi!");
        strTrieMap22.clear();
        boolean boolean27 = strTrieMap22.contains("");
        boolean boolean29 = strTrieMap22.contains("hi!");
        java.lang.Class<?> wildcardClass30 = strTrieMap22.getClass();
        java.io.Serializable serializable31 = strTrieMap18.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n", (java.io.Serializable) wildcardClass30);
        java.io.Serializable serializable32 = strTrieMap0.put("hi!", (java.io.Serializable) "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
        java.lang.String str33 = strTrieMap0.toString();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\u2514\u2500\u2500 null\n\u251c\u2500\u2500 h\n\u2502\u2514\u2500\u2500 hi\n\u2502\u2514\u2500\u2500 (!) hi! = {100}\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n}\n" + "'", str16, "\u2514\u2500\u2500 null\n\u251c\u2500\u2500 h\n\u2502\u2514\u2500\u2500 hi\n\u2502\u2514\u2500\u2500 (!) hi! = {100}\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n}\n");
        org.junit.Assert.assertNull(serializable20);
        org.junit.Assert.assertNull(serializable24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNull(serializable31);
        org.junit.Assert.assertNull(serializable32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\u2514\u2500\u2500 null\n\u251c\u2500\u2500 h\n\u2502\u2514\u2500\u2500 hi\n\u2502\u2514\u2500\u2500 (!) hi! = {100}\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n}\n" + "'", str33, "\u2514\u2500\u2500 null\n\u251c\u2500\u2500 h\n\u2502\u2514\u2500\u2500 hi\n\u2502\u2514\u2500\u2500 (!) hi! = {100}\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n}\n");
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean5 = strTrieMap0.contains("hi!");
        boolean boolean7 = strTrieMap0.contains("hi!");
        int int8 = strTrieMap0.size();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        boolean boolean5 = strTrieMap0.contains("");
        boolean boolean7 = strTrieMap0.contains("hi!");
        int int8 = strTrieMap0.size();
        java.io.Serializable serializable10 = strTrieMap0.remove("hi!");
        java.io.Serializable serializable12 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {null}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertNull(serializable12);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.io.Serializable serializable8 = strTrieMap0.remove("hi!");
        int int9 = strTrieMap0.size();
        strTrieMap0.clear();
        boolean boolean11 = strTrieMap0.validate();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        java.io.Serializable serializable9 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        java.io.Serializable serializable11 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {1}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertNull(serializable11);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) 1.0f);
        java.io.Serializable serializable13 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        java.io.Serializable serializable15 = strTrieMap0.get("");
        java.io.Serializable serializable17 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        java.lang.String str18 = strTrieMap0.toString();
        int int19 = strTrieMap0.size();
        strTrieMap0.clear();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertNull(serializable17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n" + "'", str18, "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.io.Serializable serializable10 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n", (java.io.Serializable) 100);
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(serializable10);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        boolean boolean5 = strTrieMap0.contains("");
        boolean boolean7 = strTrieMap0.contains("hi!");
        int int8 = strTrieMap0.size();
        boolean boolean10 = strTrieMap0.contains("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap12 = strTrieMap0.toMap();
        boolean boolean13 = strTrieMap0.validate();
        java.io.Serializable serializable15 = strTrieMap0.get("\u2514\u2500\u2500 null\n");
        boolean boolean16 = strTrieMap0.validate();
        boolean boolean18 = strTrieMap0.contains("");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        boolean boolean5 = strTrieMap0.contains("");
        boolean boolean7 = strTrieMap0.contains("hi!");
        int int8 = strTrieMap0.size();
        boolean boolean10 = strTrieMap0.contains("hi!");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap12 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable14 = strTrieMap12.get("");
        boolean boolean15 = strTrieMap12.validate();
        boolean boolean16 = strTrieMap12.validate();
        java.io.Serializable serializable18 = strTrieMap12.get("hi!");
        boolean boolean20 = strTrieMap12.contains("");
        java.lang.Class<?> wildcardClass21 = strTrieMap12.getClass();
        java.io.Serializable serializable22 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n", (java.io.Serializable) wildcardClass21);
        boolean boolean23 = strTrieMap0.validate();
        int int24 = strTrieMap0.size();
        int int25 = strTrieMap0.size();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(serializable18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNull(serializable22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean6 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n");
        java.io.Serializable serializable8 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u251c\u2500\u2500 h\n\u2502\u2514\u2500\u2500 hi\n\u2502\u2514\u2500\u2500 (!) hi! = {100}\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n}\n");
        boolean boolean10 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        int int6 = strTrieMap0.size();
        java.io.Serializable serializable8 = strTrieMap0.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap10 = strTrieMap0.toMap();
        java.lang.Class<?> wildcardClass11 = strMap10.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap8 = strTrieMap0.toMap();
        boolean boolean9 = strTrieMap0.validate();
        boolean boolean11 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.io.Serializable serializable14 = strTrieMap0.put("hi!", (java.io.Serializable) 10L);
        java.util.Map<java.lang.String, java.io.Serializable> strMap15 = strTrieMap0.toMap();
        java.io.Serializable serializable17 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        boolean boolean19 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
        boolean boolean20 = strTrieMap0.validate();
        java.util.Map<java.lang.String, java.io.Serializable> strMap21 = strTrieMap0.toMap();
        java.lang.String str22 = strTrieMap0.toString();
        java.io.Serializable serializable24 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(serializable17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n" + "'", str22, "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
        org.junit.Assert.assertNull(serializable24);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap8 = strTrieMap0.toMap();
        boolean boolean9 = strTrieMap0.validate();
        boolean boolean11 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        boolean boolean13 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {null}\n");
        boolean boolean14 = strTrieMap0.validate();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.remove("");
        boolean boolean3 = strTrieMap0.validate();
        java.io.Serializable serializable5 = strTrieMap0.remove("");
        boolean boolean6 = strTrieMap0.validate();
        boolean boolean7 = strTrieMap0.validate();
        boolean boolean9 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
        boolean boolean10 = strTrieMap0.validate();
        java.lang.Class<?> wildcardClass11 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        boolean boolean7 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.io.Serializable serializable9 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
        java.util.Map<java.lang.String, java.io.Serializable> strMap10 = strTrieMap0.toMap();
        boolean boolean11 = strTrieMap0.validate();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap9 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.lang.Class<?> wildcardClass10 = strTrieMap9.getClass();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) wildcardClass10);
        boolean boolean13 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable15 = strTrieMap0.get("hi!");
        java.lang.String str16 = strTrieMap0.toString();
        boolean boolean18 = strTrieMap0.contains("\u2514\u2500\u2500 null\n");
        java.io.Serializable serializable20 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        java.io.Serializable serializable22 = strTrieMap0.remove("hi!");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + serializable15 + "' != '" + 100 + "'", serializable15, 100);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n" + "'", str16, "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(serializable20);
        org.junit.Assert.assertEquals("'" + serializable22 + "' != '" + 100 + "'", serializable22, 100);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.remove("");
        boolean boolean3 = strTrieMap0.validate();
        java.io.Serializable serializable5 = strTrieMap0.remove("");
        boolean boolean6 = strTrieMap0.validate();
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap8 = strTrieMap0.toMap();
        strTrieMap0.clear();
        boolean boolean10 = strTrieMap0.validate();
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap12 = strTrieMap0.toMap();
        strTrieMap0.clear();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strMap12);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap8 = strTrieMap0.toMap();
        boolean boolean9 = strTrieMap0.validate();
        boolean boolean11 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.util.Map<java.lang.String, java.io.Serializable> strMap12 = strTrieMap0.toMap();
        java.io.Serializable serializable14 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass15 = serializable14.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(serializable14);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap8 = strTrieMap0.toMap();
        boolean boolean9 = strTrieMap0.validate();
        boolean boolean11 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.io.Serializable serializable14 = strTrieMap0.put("hi!", (java.io.Serializable) 10L);
        java.util.Map<java.lang.String, java.io.Serializable> strMap15 = strTrieMap0.toMap();
        strTrieMap0.clear();
        boolean boolean18 = strTrieMap0.contains("hi!");
        int int19 = strTrieMap0.size();
        int int20 = strTrieMap0.size();
        strTrieMap0.clear();
        boolean boolean23 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        int int24 = strTrieMap0.size();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean4 = strTrieMap0.validate();
        java.io.Serializable serializable6 = strTrieMap0.get("");
        boolean boolean8 = strTrieMap0.contains("\u2514\u2500\u2500 null\n");
        java.io.Serializable serializable10 = strTrieMap0.get("hi!");
        boolean boolean12 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        boolean boolean1 = strTrieMap0.validate();
        boolean boolean2 = strTrieMap0.validate();
        boolean boolean3 = strTrieMap0.validate();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.io.Serializable serializable8 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        boolean boolean10 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {}\n");
        java.io.Serializable serializable12 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {0.0}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(serializable12);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap6 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable8 = strTrieMap6.get("hi!");
        java.io.Serializable serializable10 = strTrieMap6.get("");
        java.lang.Class<?> wildcardClass11 = strTrieMap6.getClass();
        java.io.Serializable serializable12 = strTrieMap0.put("hi!", (java.io.Serializable) wildcardClass11);
        java.util.Map<java.lang.String, java.io.Serializable> strMap13 = strTrieMap0.toMap();
        strTrieMap0.clear();
        boolean boolean15 = strTrieMap0.validate();
        java.io.Serializable serializable17 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(serializable17);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        strTrieMap0.clear();
        int int9 = strTrieMap0.size();
        int int10 = strTrieMap0.size();
        java.io.Serializable serializable12 = strTrieMap0.get("hi!");
        int int13 = strTrieMap0.size();
        java.io.Serializable serializable15 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        strTrieMap0.clear();
        strTrieMap0.clear();
        java.lang.Class<?> wildcardClass19 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean5 = strTrieMap0.contains("hi!");
        boolean boolean7 = strTrieMap0.contains("");
        java.io.Serializable serializable10 = strTrieMap0.put("hi!", (java.io.Serializable) '4');
        java.lang.String str11 = strTrieMap0.toString();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {4}\n" + "'", str11, "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {4}\n");
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        java.io.Serializable serializable4 = strTrieMap0.get("");
        boolean boolean6 = strTrieMap0.contains("\u2514\u2500\u2500 null\n");
        java.io.Serializable serializable8 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.io.Serializable serializable10 = strTrieMap0.remove("hi!");
        java.io.Serializable serializable12 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {}\n");
        java.io.Serializable serializable14 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertNull(serializable14);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        boolean boolean7 = strTrieMap0.contains("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap8 = strTrieMap0.toMap();
        int int9 = strTrieMap0.size();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        int int8 = strTrieMap0.size();
        java.io.Serializable serializable10 = strTrieMap0.get("hi!");
        boolean boolean11 = strTrieMap0.validate();
        strTrieMap0.clear();
        boolean boolean13 = strTrieMap0.validate();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + true + "'", serializable10, true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean4 = strTrieMap0.validate();
        boolean boolean6 = strTrieMap0.contains("");
        java.io.Serializable serializable8 = strTrieMap0.get("");
        int int9 = strTrieMap0.size();
        boolean boolean10 = strTrieMap0.validate();
        java.util.Map<java.lang.String, java.io.Serializable> strMap11 = strTrieMap0.toMap();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap13 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable15 = strTrieMap13.get("");
        java.io.Serializable serializable17 = strTrieMap13.get("hi!");
        java.io.Serializable serializable20 = strTrieMap13.put("hi!", (java.io.Serializable) true);
        strTrieMap13.clear();
        int int22 = strTrieMap13.size();
        int int23 = strTrieMap13.size();
        java.io.Serializable serializable25 = strTrieMap13.get("hi!");
        int int26 = strTrieMap13.size();
        java.io.Serializable serializable29 = strTrieMap13.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n", (java.io.Serializable) 10.0f);
        boolean boolean31 = strTrieMap13.contains("hi!");
        strTrieMap13.clear();
        boolean boolean34 = strTrieMap13.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap36 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable38 = strTrieMap36.remove("");
        boolean boolean39 = strTrieMap36.validate();
        boolean boolean40 = strTrieMap36.validate();
        java.lang.Class<?> wildcardClass41 = strTrieMap36.getClass();
        java.io.Serializable serializable42 = strTrieMap13.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n", (java.io.Serializable) wildcardClass41);
        java.io.Serializable serializable43 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {0.0}\n", serializable42);
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertNull(serializable17);
        org.junit.Assert.assertNull(serializable20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(serializable25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(serializable29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(serializable38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNull(serializable42);
        org.junit.Assert.assertNull(serializable43);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        java.util.Map<java.lang.String, java.io.Serializable> strMap8 = strTrieMap0.toMap();
        java.io.Serializable serializable10 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        strTrieMap0.clear();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(serializable10);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        java.io.Serializable serializable4 = strTrieMap0.get("");
        boolean boolean6 = strTrieMap0.contains("\u2514\u2500\u2500 null\n");
        java.io.Serializable serializable8 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        java.lang.Class<?> wildcardClass10 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.util.Map<java.lang.String, java.io.Serializable> strMap1 = strTrieMap0.toMap();
        java.io.Serializable serializable3 = strTrieMap0.remove("");
        java.io.Serializable serializable5 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {}\n");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass6 = serializable5.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(serializable3);
        org.junit.Assert.assertNull(serializable5);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        int int6 = strTrieMap0.size();
        java.io.Serializable serializable8 = strTrieMap0.get("hi!");
        boolean boolean10 = strTrieMap0.contains("hi!");
        boolean boolean12 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        java.util.Map<java.lang.String, java.io.Serializable> strMap13 = strTrieMap0.toMap();
        boolean boolean15 = strTrieMap0.contains("\u2514\u2500\u2500 null\n");
        strTrieMap0.clear();
        strTrieMap0.clear();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        boolean boolean5 = strTrieMap0.contains("");
        boolean boolean7 = strTrieMap0.contains("hi!");
        int int8 = strTrieMap0.size();
        boolean boolean10 = strTrieMap0.contains("\u2514\u2500\u2500 null\n");
        strTrieMap0.clear();
        strTrieMap0.clear();
        java.io.Serializable serializable14 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.io.Serializable serializable16 = strTrieMap0.remove("");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNull(serializable16);
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        java.io.Serializable serializable7 = strTrieMap0.remove("");
        int int8 = strTrieMap0.size();
        boolean boolean10 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        int int11 = strTrieMap0.size();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap6 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable8 = strTrieMap6.get("hi!");
        java.io.Serializable serializable10 = strTrieMap6.get("");
        java.lang.Class<?> wildcardClass11 = strTrieMap6.getClass();
        java.io.Serializable serializable12 = strTrieMap0.put("hi!", (java.io.Serializable) wildcardClass11);
        java.util.Map<java.lang.String, java.io.Serializable> strMap13 = strTrieMap0.toMap();
        strTrieMap0.clear();
        boolean boolean15 = strTrieMap0.validate();
        boolean boolean16 = strTrieMap0.validate();
        java.io.Serializable serializable18 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {null}\n");
        boolean boolean20 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        int int21 = strTrieMap0.size();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(serializable18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        strTrieMap0.clear();
        boolean boolean10 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        boolean boolean12 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        java.lang.String str8 = strTrieMap0.toString();
        java.lang.String str9 = strTrieMap0.toString();
        java.util.Map<java.lang.String, java.io.Serializable> strMap10 = strTrieMap0.toMap();
        java.lang.Class<?> wildcardClass11 = strMap10.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n" + "'", str8, "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n" + "'", str9, "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) 1.0f);
        java.io.Serializable serializable13 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        strTrieMap0.clear();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap16 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable18 = strTrieMap16.get("");
        java.io.Serializable serializable20 = strTrieMap16.remove("");
        boolean boolean21 = strTrieMap16.validate();
        boolean boolean23 = strTrieMap16.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        boolean boolean25 = strTrieMap16.contains("");
        boolean boolean26 = strTrieMap16.validate();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap28 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable30 = strTrieMap28.get("hi!");
        strTrieMap28.clear();
        boolean boolean33 = strTrieMap28.contains("");
        boolean boolean35 = strTrieMap28.contains("hi!");
        int int36 = strTrieMap28.size();
        boolean boolean38 = strTrieMap28.contains("\u2514\u2500\u2500 null\n");
        strTrieMap28.clear();
        boolean boolean41 = strTrieMap28.contains("");
        strTrieMap28.clear();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap44 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable46 = strTrieMap44.get("");
        java.io.Serializable serializable48 = strTrieMap44.get("hi!");
        java.io.Serializable serializable51 = strTrieMap44.put("hi!", (java.io.Serializable) true);
        strTrieMap44.clear();
        int int53 = strTrieMap44.size();
        java.lang.Class<?> wildcardClass54 = strTrieMap44.getClass();
        java.io.Serializable serializable55 = strTrieMap28.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n", (java.io.Serializable) wildcardClass54);
        java.io.Serializable serializable56 = strTrieMap16.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n", (java.io.Serializable) wildcardClass54);
        java.io.Serializable serializable57 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {}\n", (java.io.Serializable) wildcardClass54);
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertNull(serializable18);
        org.junit.Assert.assertNull(serializable20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(serializable30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(serializable46);
        org.junit.Assert.assertNull(serializable48);
        org.junit.Assert.assertNull(serializable51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNull(serializable55);
        org.junit.Assert.assertNull(serializable56);
        org.junit.Assert.assertNull(serializable57);
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) 1.0f);
        java.io.Serializable serializable13 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        java.io.Serializable serializable15 = strTrieMap0.get("");
        java.io.Serializable serializable17 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        java.lang.String str18 = strTrieMap0.toString();
        boolean boolean19 = strTrieMap0.validate();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertNull(serializable17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n" + "'", str18, "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        int int6 = strTrieMap0.size();
        java.io.Serializable serializable8 = strTrieMap0.get("hi!");
        boolean boolean10 = strTrieMap0.contains("hi!");
        boolean boolean12 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        int int13 = strTrieMap0.size();
        java.io.Serializable serializable15 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        int int16 = strTrieMap0.size();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) 1.0f);
        strTrieMap0.clear();
        int int13 = strTrieMap0.size();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap15 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable17 = strTrieMap15.get("");
        java.io.Serializable serializable19 = strTrieMap15.get("hi!");
        java.io.Serializable serializable22 = strTrieMap15.put("hi!", (java.io.Serializable) true);
        strTrieMap15.clear();
        int int24 = strTrieMap15.size();
        int int25 = strTrieMap15.size();
        boolean boolean27 = strTrieMap15.contains("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap28 = strTrieMap15.toMap();
        java.io.Serializable serializable30 = strTrieMap15.remove("\u2514\u2500\u2500 null\n");
        int int31 = strTrieMap15.size();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap33 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable35 = strTrieMap33.get("hi!");
        strTrieMap33.clear();
        boolean boolean38 = strTrieMap33.contains("");
        boolean boolean40 = strTrieMap33.contains("hi!");
        int int41 = strTrieMap33.size();
        boolean boolean43 = strTrieMap33.contains("hi!");
        strTrieMap33.clear();
        boolean boolean46 = strTrieMap33.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        boolean boolean47 = strTrieMap33.validate();
        java.lang.Class<?> wildcardClass48 = strTrieMap33.getClass();
        java.io.Serializable serializable49 = strTrieMap15.put("hi!", (java.io.Serializable) wildcardClass48);
        java.io.Serializable serializable50 = strTrieMap0.put("hi!", (java.io.Serializable) wildcardClass48);
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap52 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable54 = strTrieMap52.get("");
        java.io.Serializable serializable56 = strTrieMap52.get("hi!");
        java.io.Serializable serializable59 = strTrieMap52.put("hi!", (java.io.Serializable) true);
        int int60 = strTrieMap52.size();
        java.io.Serializable serializable62 = strTrieMap52.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap63 = strTrieMap52.toMap();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap65 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable67 = strTrieMap65.remove("");
        boolean boolean68 = strTrieMap65.validate();
        boolean boolean69 = strTrieMap65.validate();
        boolean boolean71 = strTrieMap65.contains("");
        java.lang.Class<?> wildcardClass72 = strTrieMap65.getClass();
        java.io.Serializable serializable73 = strTrieMap52.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n", (java.io.Serializable) wildcardClass72);
        java.io.Serializable serializable74 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n", (java.io.Serializable) "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(serializable17);
        org.junit.Assert.assertNull(serializable19);
        org.junit.Assert.assertNull(serializable22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(serializable30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNull(serializable35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNull(serializable49);
        org.junit.Assert.assertNull(serializable50);
        org.junit.Assert.assertNull(serializable54);
        org.junit.Assert.assertNull(serializable56);
        org.junit.Assert.assertNull(serializable59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertEquals("'" + serializable62 + "' != '" + true + "'", serializable62, true);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNull(serializable67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNull(serializable73);
        org.junit.Assert.assertNull(serializable74);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        boolean boolean5 = strTrieMap0.contains("");
        boolean boolean7 = strTrieMap0.contains("hi!");
        boolean boolean8 = strTrieMap0.validate();
        int int9 = strTrieMap0.size();
        strTrieMap0.clear();
        java.io.Serializable serializable13 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n", (java.io.Serializable) (byte) 0);
        int int14 = strTrieMap0.size();
        strTrieMap0.clear();
        java.io.Serializable serializable17 = strTrieMap0.remove("");
        int int18 = strTrieMap0.size();
        boolean boolean19 = strTrieMap0.validate();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNull(serializable17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean4 = strTrieMap0.validate();
        java.util.Map<java.lang.String, java.io.Serializable> strMap5 = strTrieMap0.toMap();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strMap5);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        int int5 = strTrieMap0.size();
        java.io.Serializable serializable7 = strTrieMap0.remove("\u2514\u2500\u2500 null\n");
        strTrieMap0.clear();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(serializable7);
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap8 = strTrieMap0.toMap();
        java.io.Serializable serializable10 = strTrieMap0.get("\u2514\u2500\u2500 null\n");
        java.io.Serializable serializable12 = strTrieMap0.get("\u2514\u2500\u2500 null\n");
        java.io.Serializable serializable14 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap16 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable18 = strTrieMap16.get("hi!");
        strTrieMap16.clear();
        boolean boolean21 = strTrieMap16.contains("");
        boolean boolean23 = strTrieMap16.contains("hi!");
        boolean boolean24 = strTrieMap16.validate();
        boolean boolean25 = strTrieMap16.validate();
        strTrieMap16.clear();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.lang.reflect.AnnotatedElement> strTrieMap28 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.lang.reflect.AnnotatedElement>();
        java.lang.Class<?> wildcardClass29 = strTrieMap28.getClass();
        java.io.Serializable serializable30 = strTrieMap16.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n", (java.io.Serializable) wildcardClass29);
        java.io.Serializable serializable31 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n", serializable30);
        int int32 = strTrieMap0.size();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNull(serializable18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNull(serializable30);
        org.junit.Assert.assertNull(serializable31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean4 = strTrieMap0.validate();
        boolean boolean6 = strTrieMap0.contains("");
        java.io.Serializable serializable8 = strTrieMap0.get("");
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        java.io.Serializable serializable11 = strTrieMap0.remove("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass12 = serializable11.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(serializable11);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        strTrieMap0.clear();
        int int9 = strTrieMap0.size();
        int int10 = strTrieMap0.size();
        java.io.Serializable serializable12 = strTrieMap0.get("hi!");
        int int13 = strTrieMap0.size();
        java.io.Serializable serializable16 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n", (java.io.Serializable) 10.0f);
        boolean boolean18 = strTrieMap0.contains("hi!");
        strTrieMap0.clear();
        java.lang.Class<?> wildcardClass20 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        boolean boolean9 = strTrieMap0.contains("");
        java.util.Map<java.lang.String, java.io.Serializable> strMap10 = strTrieMap0.toMap();
        java.lang.String str11 = strTrieMap0.toString();
        boolean boolean13 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n" + "'", str11, "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        strTrieMap0.clear();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap8 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable10 = strTrieMap8.get("hi!");
        strTrieMap8.clear();
        boolean boolean13 = strTrieMap8.contains("");
        boolean boolean15 = strTrieMap8.contains("hi!");
        boolean boolean16 = strTrieMap8.validate();
        boolean boolean17 = strTrieMap8.validate();
        strTrieMap8.clear();
        int int19 = strTrieMap8.size();
        java.io.Serializable serializable21 = strTrieMap8.remove("\u2514\u2500\u2500 null\n");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap23 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable25 = strTrieMap23.get("");
        boolean boolean26 = strTrieMap23.validate();
        boolean boolean27 = strTrieMap23.validate();
        boolean boolean29 = strTrieMap23.contains("");
        java.io.Serializable serializable31 = strTrieMap23.get("");
        int int32 = strTrieMap23.size();
        boolean boolean34 = strTrieMap23.contains("\u2514\u2500\u2500 null\n");
        strTrieMap23.clear();
        strTrieMap23.clear();
        boolean boolean37 = strTrieMap23.validate();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap39 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable41 = strTrieMap39.get("hi!");
        strTrieMap39.clear();
        boolean boolean44 = strTrieMap39.contains("");
        boolean boolean46 = strTrieMap39.contains("hi!");
        int int47 = strTrieMap39.size();
        boolean boolean49 = strTrieMap39.contains("\u2514\u2500\u2500 null\n");
        strTrieMap39.clear();
        java.lang.Class<?> wildcardClass51 = strTrieMap39.getClass();
        java.io.Serializable serializable52 = strTrieMap23.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) wildcardClass51);
        java.io.Serializable serializable53 = strTrieMap8.put("\u2514\u2500\u2500 null\n\u251c\u2500\u2500 h\n\u2502\u2514\u2500\u2500 hi\n\u2502\u2514\u2500\u2500 (!) hi! = {100}\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n}\n", (java.io.Serializable) wildcardClass51);
        java.io.Serializable serializable54 = strTrieMap0.put("hi!", (java.io.Serializable) wildcardClass51);
        java.lang.String str55 = strTrieMap0.toString();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(serializable21);
        org.junit.Assert.assertNull(serializable25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(serializable31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(serializable41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNull(serializable52);
        org.junit.Assert.assertNull(serializable53);
        org.junit.Assert.assertNull(serializable54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n" + "'", str55, "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n");
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean4 = strTrieMap0.validate();
        java.io.Serializable serializable6 = strTrieMap0.get("");
        boolean boolean8 = strTrieMap0.contains("hi!");
        boolean boolean9 = strTrieMap0.validate();
        java.io.Serializable serializable11 = strTrieMap0.get("");
        strTrieMap0.clear();
        boolean boolean13 = strTrieMap0.validate();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap8 = strTrieMap0.toMap();
        boolean boolean9 = strTrieMap0.validate();
        boolean boolean11 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.io.Serializable serializable14 = strTrieMap0.put("hi!", (java.io.Serializable) 10L);
        java.util.Map<java.lang.String, java.io.Serializable> strMap15 = strTrieMap0.toMap();
        java.io.Serializable serializable17 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        java.io.Serializable serializable19 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {}\n");
        int int20 = strTrieMap0.size();
        strTrieMap0.clear();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(serializable17);
        org.junit.Assert.assertNull(serializable19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        java.io.Serializable serializable4 = strTrieMap0.get("");
        boolean boolean6 = strTrieMap0.contains("\u2514\u2500\u2500 null\n");
        java.io.Serializable serializable8 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(serializable8);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable6 = strTrieMap0.remove("");
        java.io.Serializable serializable8 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
        java.io.Serializable serializable10 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.io.Serializable serializable12 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {0.0}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertNull(serializable12);
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        java.io.Serializable serializable9 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.lang.String str10 = strTrieMap0.toString();
        boolean boolean12 = strTrieMap0.contains("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap13 = strTrieMap0.toMap();
        boolean boolean15 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {class com.jwetherell.algorithms.data_structures.TrieMap}\n");
        boolean boolean16 = strTrieMap0.validate();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n" + "'", str10, "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) 1.0f);
        java.io.Serializable serializable13 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        java.io.Serializable serializable15 = strTrieMap0.get("");
        java.io.Serializable serializable17 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap19 = strTrieMap0.toMap();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap21 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable23 = strTrieMap21.get("hi!");
        boolean boolean24 = strTrieMap21.validate();
        boolean boolean26 = strTrieMap21.contains("hi!");
        boolean boolean27 = strTrieMap21.validate();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap29 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable31 = strTrieMap29.get("");
        boolean boolean33 = strTrieMap29.contains("hi!");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap35 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable37 = strTrieMap35.get("hi!");
        java.io.Serializable serializable39 = strTrieMap35.get("");
        java.lang.Class<?> wildcardClass40 = strTrieMap35.getClass();
        java.io.Serializable serializable41 = strTrieMap29.put("hi!", (java.io.Serializable) wildcardClass40);
        java.lang.Class<?> wildcardClass42 = strTrieMap29.getClass();
        java.io.Serializable serializable43 = strTrieMap21.put("hi!", (java.io.Serializable) wildcardClass42);
        java.lang.Class<?> wildcardClass44 = strTrieMap21.getClass();
        java.io.Serializable serializable45 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n", (java.io.Serializable) wildcardClass44);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass46 = serializable45.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertNull(serializable17);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(serializable23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(serializable31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(serializable37);
        org.junit.Assert.assertNull(serializable39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNull(serializable41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNull(serializable43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNull(serializable45);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.remove("");
        boolean boolean3 = strTrieMap0.validate();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        boolean boolean7 = strTrieMap0.contains("");
        int int8 = strTrieMap0.size();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) 1.0d);
        boolean boolean12 = strTrieMap0.validate();
        java.io.Serializable serializable14 = strTrieMap0.remove("hi!");
        java.io.Serializable serializable16 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {null}\n");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass17 = serializable16.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + serializable14 + "' != '" + 1.0d + "'", serializable14, 1.0d);
        org.junit.Assert.assertNull(serializable16);
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        boolean boolean9 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        strTrieMap0.clear();
        java.io.Serializable serializable13 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) 'a');
        boolean boolean15 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n");
        java.util.Map<java.lang.String, java.io.Serializable> strMap16 = strTrieMap0.toMap();
        int int17 = strTrieMap0.size();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.io.Serializable serializable10 = strTrieMap0.remove("hi!");
        java.io.Serializable serializable12 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
        java.io.Serializable serializable14 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n");
        java.util.Map<java.lang.String, java.io.Serializable> strMap15 = strTrieMap0.toMap();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNotNull(strMap15);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        boolean boolean9 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        strTrieMap0.clear();
        java.io.Serializable serializable13 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) 'a');
        boolean boolean14 = strTrieMap0.validate();
        boolean boolean15 = strTrieMap0.validate();
        java.lang.Class<?> wildcardClass16 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        strTrieMap0.clear();
        int int9 = strTrieMap0.size();
        int int10 = strTrieMap0.size();
        java.io.Serializable serializable12 = strTrieMap0.get("hi!");
        int int13 = strTrieMap0.size();
        java.io.Serializable serializable16 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n", (java.io.Serializable) 10.0f);
        java.util.Map<java.lang.String, java.io.Serializable> strMap17 = strTrieMap0.toMap();
        java.lang.Class<?> wildcardClass18 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap8 = strTrieMap0.toMap();
        boolean boolean9 = strTrieMap0.validate();
        boolean boolean11 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.io.Serializable serializable14 = strTrieMap0.put("hi!", (java.io.Serializable) 10L);
        java.util.Map<java.lang.String, java.io.Serializable> strMap15 = strTrieMap0.toMap();
        java.lang.String str16 = strTrieMap0.toString();
        java.util.Map<java.lang.String, java.io.Serializable> strMap17 = strTrieMap0.toMap();
        java.lang.Class<?> wildcardClass18 = strMap17.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n" + "'", str16, "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        boolean boolean5 = strTrieMap0.contains("");
        boolean boolean7 = strTrieMap0.contains("hi!");
        boolean boolean8 = strTrieMap0.validate();
        int int9 = strTrieMap0.size();
        strTrieMap0.clear();
        java.io.Serializable serializable13 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n", (java.io.Serializable) (byte) 0);
        int int14 = strTrieMap0.size();
        strTrieMap0.clear();
        boolean boolean16 = strTrieMap0.validate();
        java.util.Map<java.lang.String, java.io.Serializable> strMap17 = strTrieMap0.toMap();
        boolean boolean19 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {null}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        boolean boolean7 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable9 = strTrieMap0.get("");
        java.io.Serializable serializable11 = strTrieMap0.get("");
        int int12 = strTrieMap0.size();
        java.util.Map<java.lang.String, java.io.Serializable> strMap13 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap14 = strTrieMap0.toMap();
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable17 = strTrieMap0.put("", (java.io.Serializable) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        int int6 = strTrieMap0.size();
        java.io.Serializable serializable8 = strTrieMap0.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.io.Serializable serializable12 = strTrieMap0.remove("");
        int int13 = strTrieMap0.size();
        boolean boolean14 = strTrieMap0.validate();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap16 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable18 = strTrieMap16.get("");
        boolean boolean20 = strTrieMap16.contains("hi!");
        boolean boolean21 = strTrieMap16.validate();
        java.lang.Class<?> wildcardClass22 = strTrieMap16.getClass();
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable23 = strTrieMap0.put("", (java.io.Serializable) wildcardClass22);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(serializable18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean4 = strTrieMap0.validate();
        boolean boolean6 = strTrieMap0.contains("");
        java.io.Serializable serializable8 = strTrieMap0.get("");
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        java.lang.Class<?> wildcardClass10 = strMap9.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        strTrieMap0.clear();
        java.io.Serializable serializable6 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) 0);
        java.io.Serializable serializable8 = strTrieMap0.get("hi!");
        java.io.Serializable serializable10 = strTrieMap0.remove("hi!");
        java.io.Serializable serializable12 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        strTrieMap0.clear();
        strTrieMap0.clear();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertNull(serializable12);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        boolean boolean7 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        boolean boolean8 = strTrieMap0.validate();
        java.io.Serializable serializable10 = strTrieMap0.remove("");
        strTrieMap0.clear();
        boolean boolean13 = strTrieMap0.contains("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap14 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap15 = strTrieMap0.toMap();
        java.lang.Class<?> wildcardClass16 = strMap15.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap6 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable8 = strTrieMap6.get("");
        strTrieMap6.clear();
        java.io.Serializable serializable12 = strTrieMap6.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) 0);
        java.lang.Class<?> wildcardClass13 = strTrieMap6.getClass();
        java.io.Serializable serializable14 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n", (java.io.Serializable) wildcardClass13);
        java.io.Serializable serializable16 = strTrieMap0.get("\u2514\u2500\u2500 null\n");
        java.util.Map<java.lang.String, java.io.Serializable> strMap17 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.lang.Class<?> wildcardClass19 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.remove("");
        boolean boolean3 = strTrieMap0.validate();
        java.io.Serializable serializable5 = strTrieMap0.remove("");
        boolean boolean6 = strTrieMap0.validate();
        boolean boolean7 = strTrieMap0.validate();
        java.io.Serializable serializable9 = strTrieMap0.remove("hi!");
        java.io.Serializable serializable11 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertNull(serializable11);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap8 = strTrieMap0.toMap();
        boolean boolean9 = strTrieMap0.validate();
        boolean boolean11 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.io.Serializable serializable14 = strTrieMap0.put("hi!", (java.io.Serializable) 10L);
        java.util.Map<java.lang.String, java.io.Serializable> strMap15 = strTrieMap0.toMap();
        java.io.Serializable serializable17 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        java.io.Serializable serializable19 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {}\n");
        java.util.Map<java.lang.String, java.io.Serializable> strMap20 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap21 = strTrieMap0.toMap();
        int int22 = strTrieMap0.size();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(serializable17);
        org.junit.Assert.assertNull(serializable19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap6 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable8 = strTrieMap6.get("hi!");
        java.io.Serializable serializable10 = strTrieMap6.get("");
        java.lang.Class<?> wildcardClass11 = strTrieMap6.getClass();
        java.io.Serializable serializable12 = strTrieMap0.put("hi!", (java.io.Serializable) wildcardClass11);
        java.util.Map<java.lang.String, java.io.Serializable> strMap13 = strTrieMap0.toMap();
        strTrieMap0.clear();
        boolean boolean15 = strTrieMap0.validate();
        boolean boolean16 = strTrieMap0.validate();
        java.io.Serializable serializable18 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(serializable18);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        strTrieMap0.clear();
        int int9 = strTrieMap0.size();
        int int10 = strTrieMap0.size();
        java.io.Serializable serializable12 = strTrieMap0.get("hi!");
        java.io.Serializable serializable14 = strTrieMap0.get("\u2514\u2500\u2500 null\n");
        java.io.Serializable serializable16 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {1}\n");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap18 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable20 = strTrieMap18.get("");
        java.io.Serializable serializable22 = strTrieMap18.remove("");
        boolean boolean24 = strTrieMap18.contains("hi!");
        java.io.Serializable serializable26 = strTrieMap18.get("hi!");
        boolean boolean28 = strTrieMap18.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap30 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable32 = strTrieMap30.get("");
        java.io.Serializable serializable34 = strTrieMap30.remove("");
        boolean boolean35 = strTrieMap30.validate();
        java.util.Map<java.lang.String, java.io.Serializable> strMap36 = strTrieMap30.toMap();
        java.lang.Class<?> wildcardClass37 = strMap36.getClass();
        java.io.Serializable serializable38 = strTrieMap18.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) wildcardClass37);
        java.io.Serializable serializable39 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n", (java.io.Serializable) "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        boolean boolean40 = strTrieMap0.validate();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertNull(serializable20);
        org.junit.Assert.assertNull(serializable22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(serializable26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(serializable32);
        org.junit.Assert.assertNull(serializable34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNull(serializable38);
        org.junit.Assert.assertNull(serializable39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) 1.0f);
        java.io.Serializable serializable13 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        java.io.Serializable serializable15 = strTrieMap0.get("");
        java.io.Serializable serializable17 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        java.lang.String str18 = strTrieMap0.toString();
        java.lang.Class<?> wildcardClass19 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertNull(serializable17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n" + "'", str18, "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        strTrieMap0.clear();
        int int9 = strTrieMap0.size();
        int int10 = strTrieMap0.size();
        java.io.Serializable serializable12 = strTrieMap0.get("hi!");
        java.io.Serializable serializable14 = strTrieMap0.get("\u2514\u2500\u2500 null\n");
        strTrieMap0.clear();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertNull(serializable14);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        int int8 = strTrieMap0.size();
        strTrieMap0.clear();
        strTrieMap0.clear();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) 1.0f);
        java.io.Serializable serializable13 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        java.io.Serializable serializable15 = strTrieMap0.get("");
        strTrieMap0.clear();
        int int17 = strTrieMap0.size();
        java.lang.Class<?> wildcardClass18 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) (short) 0);
        java.util.Map<java.lang.String, java.io.Serializable> strMap8 = strTrieMap0.toMap();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNotNull(strMap8);
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        java.io.Serializable serializable4 = strTrieMap0.get("");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap5 = strTrieMap0.toMap();
        boolean boolean7 = strTrieMap0.contains("\u2514\u2500\u2500 null\n");
        boolean boolean8 = strTrieMap0.validate();
        boolean boolean10 = strTrieMap0.contains("");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        strTrieMap0.clear();
        int int9 = strTrieMap0.size();
        int int10 = strTrieMap0.size();
        java.io.Serializable serializable12 = strTrieMap0.get("hi!");
        int int13 = strTrieMap0.size();
        java.io.Serializable serializable16 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n", (java.io.Serializable) 10.0f);
        boolean boolean18 = strTrieMap0.contains("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable21 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass22 = serializable21.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(serializable21);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.remove("");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap4 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable6 = strTrieMap4.get("");
        java.io.Serializable serializable8 = strTrieMap4.get("hi!");
        strTrieMap4.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap10 = strTrieMap4.toMap();
        java.io.Serializable serializable12 = strTrieMap4.remove("hi!");
        java.io.Serializable serializable14 = strTrieMap4.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.lang.Class<?> wildcardClass15 = strTrieMap4.getClass();
        java.io.Serializable serializable16 = strTrieMap0.put("hi!", (java.io.Serializable) wildcardClass15);
        java.lang.String str17 = strTrieMap0.toString();
        java.util.Map<java.lang.String, java.io.Serializable> strMap18 = strTrieMap0.toMap();
        java.lang.Class<?> wildcardClass19 = strMap18.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n" + "'", str17, "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n");
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) 1.0f);
        java.io.Serializable serializable13 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        java.io.Serializable serializable15 = strTrieMap0.get("");
        java.io.Serializable serializable17 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap19 = strTrieMap0.toMap();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap21 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable23 = strTrieMap21.get("hi!");
        boolean boolean24 = strTrieMap21.validate();
        boolean boolean26 = strTrieMap21.contains("hi!");
        boolean boolean27 = strTrieMap21.validate();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap29 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable31 = strTrieMap29.get("");
        boolean boolean33 = strTrieMap29.contains("hi!");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap35 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable37 = strTrieMap35.get("hi!");
        java.io.Serializable serializable39 = strTrieMap35.get("");
        java.lang.Class<?> wildcardClass40 = strTrieMap35.getClass();
        java.io.Serializable serializable41 = strTrieMap29.put("hi!", (java.io.Serializable) wildcardClass40);
        java.lang.Class<?> wildcardClass42 = strTrieMap29.getClass();
        java.io.Serializable serializable43 = strTrieMap21.put("hi!", (java.io.Serializable) wildcardClass42);
        java.lang.Class<?> wildcardClass44 = strTrieMap21.getClass();
        java.io.Serializable serializable45 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n", (java.io.Serializable) wildcardClass44);
        boolean boolean47 = strTrieMap0.contains("");
        strTrieMap0.clear();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertNull(serializable17);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(serializable23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(serializable31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(serializable37);
        org.junit.Assert.assertNull(serializable39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNull(serializable41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNull(serializable43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNull(serializable45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean4 = strTrieMap0.validate();
        boolean boolean6 = strTrieMap0.contains("");
        java.io.Serializable serializable8 = strTrieMap0.get("");
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap11 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable13 = strTrieMap11.get("hi!");
        java.io.Serializable serializable15 = strTrieMap11.get("");
        strTrieMap11.clear();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap18 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable20 = strTrieMap18.get("hi!");
        java.io.Serializable serializable22 = strTrieMap18.get("");
        java.lang.Class<?> wildcardClass23 = strTrieMap18.getClass();
        java.io.Serializable serializable24 = strTrieMap11.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) wildcardClass23);
        java.io.Serializable serializable25 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.util.Map<java.lang.String, java.io.Serializable> strMap26 = strTrieMap0.toMap();
        boolean boolean27 = strTrieMap0.validate();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap29 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable31 = strTrieMap29.get("");
        boolean boolean33 = strTrieMap29.contains("hi!");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap35 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable37 = strTrieMap35.get("hi!");
        java.io.Serializable serializable39 = strTrieMap35.get("");
        java.lang.Class<?> wildcardClass40 = strTrieMap35.getClass();
        java.io.Serializable serializable41 = strTrieMap29.put("hi!", (java.io.Serializable) wildcardClass40);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable42 = strTrieMap0.put("", (java.io.Serializable) "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertNull(serializable20);
        org.junit.Assert.assertNull(serializable22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNull(serializable24);
        org.junit.Assert.assertNull(serializable25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(serializable31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(serializable37);
        org.junit.Assert.assertNull(serializable39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNull(serializable41);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap8 = strTrieMap0.toMap();
        boolean boolean9 = strTrieMap0.validate();
        boolean boolean11 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.io.Serializable serializable14 = strTrieMap0.put("hi!", (java.io.Serializable) 10L);
        boolean boolean15 = strTrieMap0.validate();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        boolean boolean5 = strTrieMap0.contains("");
        boolean boolean7 = strTrieMap0.contains("hi!");
        int int8 = strTrieMap0.size();
        boolean boolean10 = strTrieMap0.contains("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable13 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n");
        java.util.Map<java.lang.String, java.io.Serializable> strMap14 = strTrieMap0.toMap();
        java.io.Serializable serializable16 = strTrieMap0.remove("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass17 = serializable16.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(serializable16);
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) 1.0f);
        java.io.Serializable serializable13 = strTrieMap0.get("");
        int int14 = strTrieMap0.size();
        boolean boolean15 = strTrieMap0.validate();
        boolean boolean16 = strTrieMap0.validate();
        int int17 = strTrieMap0.size();
        java.lang.String str18 = strTrieMap0.toString();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n" + "'", str18, "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n");
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.remove("");
        boolean boolean3 = strTrieMap0.validate();
        java.io.Serializable serializable5 = strTrieMap0.remove("");
        boolean boolean6 = strTrieMap0.validate();
        boolean boolean7 = strTrieMap0.validate();
        java.io.Serializable serializable9 = strTrieMap0.remove("");
        boolean boolean11 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable13 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(serializable13);
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        boolean boolean7 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable9 = strTrieMap0.get("");
        strTrieMap0.clear();
        java.io.Serializable serializable12 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        java.io.Serializable serializable14 = strTrieMap0.remove("");
        boolean boolean16 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap18 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable20 = strTrieMap18.get("");
        strTrieMap18.clear();
        java.io.Serializable serializable24 = strTrieMap18.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) 0);
        java.io.Serializable serializable26 = strTrieMap18.get("hi!");
        boolean boolean28 = strTrieMap18.contains("hi!");
        boolean boolean30 = strTrieMap18.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap32 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable34 = strTrieMap32.get("hi!");
        boolean boolean35 = strTrieMap32.validate();
        boolean boolean37 = strTrieMap32.contains("hi!");
        boolean boolean38 = strTrieMap32.validate();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap40 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable42 = strTrieMap40.get("");
        boolean boolean44 = strTrieMap40.contains("hi!");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap46 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable48 = strTrieMap46.get("hi!");
        java.io.Serializable serializable50 = strTrieMap46.get("");
        java.lang.Class<?> wildcardClass51 = strTrieMap46.getClass();
        java.io.Serializable serializable52 = strTrieMap40.put("hi!", (java.io.Serializable) wildcardClass51);
        java.lang.Class<?> wildcardClass53 = strTrieMap40.getClass();
        java.io.Serializable serializable54 = strTrieMap32.put("hi!", (java.io.Serializable) wildcardClass53);
        boolean boolean55 = strTrieMap32.validate();
        java.lang.Class<?> wildcardClass56 = strTrieMap32.getClass();
        java.io.Serializable serializable57 = strTrieMap18.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n", (java.io.Serializable) wildcardClass56);
        java.io.Serializable serializable58 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {1}\n", serializable57);
        boolean boolean60 = strTrieMap0.contains("");
        strTrieMap0.clear();
        boolean boolean62 = strTrieMap0.validate();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str63 = strTrieMap0.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(serializable20);
        org.junit.Assert.assertNull(serializable24);
        org.junit.Assert.assertNull(serializable26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(serializable34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(serializable42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(serializable48);
        org.junit.Assert.assertNull(serializable50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNull(serializable52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNull(serializable54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNull(serializable57);
        org.junit.Assert.assertNull(serializable58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        int int6 = strTrieMap0.size();
        java.io.Serializable serializable8 = strTrieMap0.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        boolean boolean10 = strTrieMap0.validate();
        java.io.Serializable serializable13 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n", (java.io.Serializable) 1.0f);
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap15 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable17 = strTrieMap15.get("hi!");
        strTrieMap15.clear();
        java.io.Serializable serializable20 = strTrieMap15.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap21 = strTrieMap15.toMap();
        java.io.Serializable serializable23 = strTrieMap15.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.util.Map<java.lang.String, java.io.Serializable> strMap24 = strTrieMap15.toMap();
        java.lang.Class<?> wildcardClass25 = strMap24.getClass();
        java.io.Serializable serializable26 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n", (java.io.Serializable) wildcardClass25);
        boolean boolean27 = strTrieMap0.validate();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap29 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable31 = strTrieMap29.get("hi!");
        java.io.Serializable serializable33 = strTrieMap29.get("");
        strTrieMap29.clear();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap36 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable38 = strTrieMap36.get("hi!");
        java.io.Serializable serializable40 = strTrieMap36.get("");
        java.lang.Class<?> wildcardClass41 = strTrieMap36.getClass();
        java.io.Serializable serializable42 = strTrieMap29.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) wildcardClass41);
        java.io.Serializable serializable43 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.io.Serializable serializable45 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertNull(serializable17);
        org.junit.Assert.assertNull(serializable20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(serializable23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNull(serializable26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(serializable31);
        org.junit.Assert.assertNull(serializable33);
        org.junit.Assert.assertNull(serializable38);
        org.junit.Assert.assertNull(serializable40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNull(serializable42);
        org.junit.Assert.assertNull(serializable43);
        org.junit.Assert.assertNull(serializable45);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) 1.0f);
        java.io.Serializable serializable13 = strTrieMap0.get("");
        strTrieMap0.clear();
        java.io.Serializable serializable16 = strTrieMap0.remove("");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertNull(serializable16);
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        int int6 = strTrieMap0.size();
        int int7 = strTrieMap0.size();
        int int8 = strTrieMap0.size();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean4 = strTrieMap0.validate();
        boolean boolean6 = strTrieMap0.contains("");
        java.io.Serializable serializable8 = strTrieMap0.get("");
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap11 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable13 = strTrieMap11.get("hi!");
        java.io.Serializable serializable15 = strTrieMap11.get("");
        strTrieMap11.clear();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap18 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable20 = strTrieMap18.get("hi!");
        java.io.Serializable serializable22 = strTrieMap18.get("");
        java.lang.Class<?> wildcardClass23 = strTrieMap18.getClass();
        java.io.Serializable serializable24 = strTrieMap11.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) wildcardClass23);
        java.io.Serializable serializable25 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.util.Map<java.lang.String, java.io.Serializable> strMap26 = strTrieMap0.toMap();
        boolean boolean27 = strTrieMap0.validate();
        java.io.Serializable serializable29 = strTrieMap0.remove("hi!");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertNull(serializable20);
        org.junit.Assert.assertNull(serializable22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNull(serializable24);
        org.junit.Assert.assertNull(serializable25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(serializable29);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        boolean boolean8 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable10 = strTrieMap0.remove("hi!");
        java.io.Serializable serializable13 = strTrieMap0.put("hi!", (java.io.Serializable) "");
        int int14 = strTrieMap0.size();
        java.lang.String str15 = strTrieMap0.toString();
        java.lang.String str16 = strTrieMap0.toString();
        int int17 = strTrieMap0.size();
        java.lang.String str18 = strTrieMap0.toString();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {}\n" + "'", str15, "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {}\n");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {}\n" + "'", str16, "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {}\n");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {}\n" + "'", str18, "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {}\n");
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        int int6 = strTrieMap0.size();
        java.io.Serializable serializable8 = strTrieMap0.get("hi!");
        boolean boolean10 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable12 = strTrieMap0.get("");
        boolean boolean13 = strTrieMap0.validate();
        strTrieMap0.clear();
        boolean boolean16 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {1}\n");
        int int17 = strTrieMap0.size();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        int int6 = strTrieMap0.size();
        java.io.Serializable serializable8 = strTrieMap0.remove("");
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap10 = strTrieMap0.toMap();
        strTrieMap0.clear();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean6 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable8 = strTrieMap0.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        boolean boolean11 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable14 = strTrieMap0.put("\u2514\u2500\u2500 null\n", (java.io.Serializable) "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass15 = serializable14.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(serializable14);
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        strTrieMap0.clear();
        int int9 = strTrieMap0.size();
        int int10 = strTrieMap0.size();
        java.io.Serializable serializable12 = strTrieMap0.get("");
        java.util.Map<java.lang.String, java.io.Serializable> strMap13 = strTrieMap0.toMap();
        boolean boolean14 = strTrieMap0.validate();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) 1.0f);
        java.io.Serializable serializable13 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        strTrieMap0.clear();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap16 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable18 = strTrieMap16.get("hi!");
        strTrieMap16.clear();
        java.io.Serializable serializable21 = strTrieMap16.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap22 = strTrieMap16.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap23 = strTrieMap16.toMap();
        java.lang.Class<?> wildcardClass24 = strTrieMap16.getClass();
        java.io.Serializable serializable25 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) wildcardClass24);
        java.io.Serializable serializable27 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n");
        boolean boolean28 = strTrieMap0.validate();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertNull(serializable18);
        org.junit.Assert.assertNull(serializable21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNull(serializable25);
        org.junit.Assert.assertNull(serializable27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        boolean boolean7 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable9 = strTrieMap0.get("");
        java.util.Map<java.lang.String, java.io.Serializable> strMap10 = strTrieMap0.toMap();
        boolean boolean11 = strTrieMap0.validate();
        java.io.Serializable serializable14 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n", (java.io.Serializable) (-1.0f));
        java.lang.Class<?> wildcardClass15 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.remove("");
        boolean boolean3 = strTrieMap0.validate();
        java.io.Serializable serializable5 = strTrieMap0.remove("");
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        strTrieMap0.clear();
        strTrieMap0.clear();
        java.io.Serializable serializable10 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {1}\n");
        java.io.Serializable serializable12 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertNull(serializable12);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean4 = strTrieMap0.validate();
        java.io.Serializable serializable6 = strTrieMap0.get("");
        java.io.Serializable serializable8 = strTrieMap0.get("hi!");
        java.io.Serializable serializable10 = strTrieMap0.get("hi!");
        java.io.Serializable serializable12 = strTrieMap0.get("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass13 = serializable12.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertNull(serializable12);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap9 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.lang.Class<?> wildcardClass10 = strTrieMap9.getClass();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) wildcardClass10);
        boolean boolean13 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable15 = null;
        java.io.Serializable serializable16 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", serializable15);
        java.io.Serializable serializable18 = strTrieMap0.remove("\u2514\u2500\u2500 null\n");
        boolean boolean19 = strTrieMap0.validate();
        int int20 = strTrieMap0.size();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap22 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable24 = strTrieMap22.get("");
        java.io.Serializable serializable26 = strTrieMap22.get("hi!");
        strTrieMap22.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap28 = strTrieMap22.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap29 = strTrieMap22.toMap();
        strTrieMap22.clear();
        java.io.Serializable serializable33 = strTrieMap22.put("hi!", (java.io.Serializable) 1.0f);
        strTrieMap22.clear();
        java.io.Serializable serializable36 = strTrieMap22.remove("\u2514\u2500\u2500 null\n");
        java.io.Serializable serializable38 = strTrieMap22.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap40 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable42 = strTrieMap40.get("");
        boolean boolean43 = strTrieMap40.validate();
        boolean boolean44 = strTrieMap40.validate();
        java.io.Serializable serializable46 = strTrieMap40.get("hi!");
        boolean boolean48 = strTrieMap40.contains("");
        java.lang.Class<?> wildcardClass49 = strTrieMap40.getClass();
        java.io.Serializable serializable50 = strTrieMap22.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {1}\n", (java.io.Serializable) wildcardClass49);
        java.io.Serializable serializable51 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", serializable50);
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertNull(serializable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNull(serializable24);
        org.junit.Assert.assertNull(serializable26);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(serializable33);
        org.junit.Assert.assertNull(serializable36);
        org.junit.Assert.assertNull(serializable38);
        org.junit.Assert.assertNull(serializable42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(serializable46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNull(serializable50);
        org.junit.Assert.assertNull(serializable51);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean5 = strTrieMap0.contains("hi!");
        int int6 = strTrieMap0.size();
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        int int8 = strTrieMap0.size();
        java.io.Serializable serializable10 = strTrieMap0.remove("hi!");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(serializable10);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) 1.0f);
        java.io.Serializable serializable13 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        boolean boolean14 = strTrieMap0.validate();
        boolean boolean15 = strTrieMap0.validate();
        java.io.Serializable serializable17 = strTrieMap0.get("");
        java.lang.String str18 = strTrieMap0.toString();
        java.util.Map<java.lang.String, java.io.Serializable> strMap19 = strTrieMap0.toMap();
        java.io.Serializable serializable21 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(serializable17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n" + "'", str18, "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n");
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(serializable21);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean4 = strTrieMap0.validate();
        boolean boolean6 = strTrieMap0.contains("");
        java.io.Serializable serializable8 = strTrieMap0.get("");
        int int9 = strTrieMap0.size();
        boolean boolean11 = strTrieMap0.contains("");
        strTrieMap0.clear();
        java.io.Serializable serializable14 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {class com.jwetherell.algorithms.data_structures.TrieMap}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(serializable14);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap8 = strTrieMap0.toMap();
        boolean boolean9 = strTrieMap0.validate();
        boolean boolean11 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.io.Serializable serializable14 = strTrieMap0.put("hi!", (java.io.Serializable) 10L);
        java.util.Map<java.lang.String, java.io.Serializable> strMap15 = strTrieMap0.toMap();
        strTrieMap0.clear();
        boolean boolean17 = strTrieMap0.validate();
        boolean boolean19 = strTrieMap0.contains("hi!");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        boolean boolean7 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable9 = strTrieMap0.get("");
        java.io.Serializable serializable11 = strTrieMap0.get("");
        java.io.Serializable serializable13 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.io.Serializable serializable15 = strTrieMap0.remove("hi!");
        boolean boolean17 = strTrieMap0.contains("\u2514\u2500\u2500 null\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean4 = strTrieMap0.validate();
        java.io.Serializable serializable6 = strTrieMap0.get("");
        boolean boolean8 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap8 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable10 = strTrieMap8.get("");
        java.io.Serializable serializable12 = strTrieMap8.get("hi!");
        strTrieMap8.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap14 = strTrieMap8.toMap();
        strTrieMap8.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap16 = strTrieMap8.toMap();
        boolean boolean17 = strTrieMap8.validate();
        boolean boolean19 = strTrieMap8.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.io.Serializable serializable22 = strTrieMap8.put("hi!", (java.io.Serializable) 10L);
        java.util.Map<java.lang.String, java.io.Serializable> strMap23 = strTrieMap8.toMap();
        java.io.Serializable serializable25 = strTrieMap8.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap27 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable29 = strTrieMap27.get("hi!");
        strTrieMap27.clear();
        java.io.Serializable serializable32 = strTrieMap27.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap33 = strTrieMap27.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap34 = strTrieMap27.toMap();
        java.lang.Class<?> wildcardClass35 = strTrieMap27.getClass();
        java.io.Serializable serializable36 = strTrieMap8.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n", (java.io.Serializable) wildcardClass35);
        java.io.Serializable serializable37 = strTrieMap0.put("hi!", (java.io.Serializable) "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
        strTrieMap0.clear();
        boolean boolean39 = strTrieMap0.validate();
        strTrieMap0.clear();
        boolean boolean42 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {0.0}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(serializable22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(serializable25);
        org.junit.Assert.assertNull(serializable29);
        org.junit.Assert.assertNull(serializable32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNull(serializable36);
        org.junit.Assert.assertNull(serializable37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap8 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable10 = strTrieMap8.get("");
        java.io.Serializable serializable12 = strTrieMap8.get("hi!");
        strTrieMap8.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap14 = strTrieMap8.toMap();
        strTrieMap8.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap16 = strTrieMap8.toMap();
        boolean boolean17 = strTrieMap8.validate();
        boolean boolean19 = strTrieMap8.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.io.Serializable serializable22 = strTrieMap8.put("hi!", (java.io.Serializable) 10L);
        java.util.Map<java.lang.String, java.io.Serializable> strMap23 = strTrieMap8.toMap();
        java.io.Serializable serializable25 = strTrieMap8.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap27 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable29 = strTrieMap27.get("hi!");
        strTrieMap27.clear();
        java.io.Serializable serializable32 = strTrieMap27.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap33 = strTrieMap27.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap34 = strTrieMap27.toMap();
        java.lang.Class<?> wildcardClass35 = strTrieMap27.getClass();
        java.io.Serializable serializable36 = strTrieMap8.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n", (java.io.Serializable) wildcardClass35);
        java.io.Serializable serializable37 = strTrieMap0.put("hi!", (java.io.Serializable) "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
        java.lang.Class<?> wildcardClass38 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(serializable22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(serializable25);
        org.junit.Assert.assertNull(serializable29);
        org.junit.Assert.assertNull(serializable32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNull(serializable36);
        org.junit.Assert.assertNull(serializable37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) 1.0f);
        java.io.Serializable serializable13 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        boolean boolean14 = strTrieMap0.validate();
        boolean boolean15 = strTrieMap0.validate();
        java.io.Serializable serializable17 = strTrieMap0.get("");
        java.lang.String str18 = strTrieMap0.toString();
        boolean boolean20 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(serializable17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n" + "'", str18, "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        boolean boolean7 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        boolean boolean8 = strTrieMap0.validate();
        java.io.Serializable serializable10 = strTrieMap0.remove("");
        boolean boolean12 = strTrieMap0.contains("");
        boolean boolean14 = strTrieMap0.contains("");
        java.util.Map<java.lang.String, java.io.Serializable> strMap15 = strTrieMap0.toMap();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strMap15);
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean4 = strTrieMap0.validate();
        java.io.Serializable serializable6 = strTrieMap0.get("hi!");
        boolean boolean8 = strTrieMap0.contains("");
        int int9 = strTrieMap0.size();
        int int10 = strTrieMap0.size();
        java.io.Serializable serializable12 = strTrieMap0.get("hi!");
        boolean boolean14 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        boolean boolean9 = strTrieMap0.contains("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap10 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap11 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap12 = strTrieMap0.toMap();
        java.lang.Class<?> wildcardClass13 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        java.io.Serializable serializable4 = strTrieMap0.get("");
        strTrieMap0.clear();
        java.io.Serializable serializable7 = strTrieMap0.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap8 = strTrieMap0.toMap();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNotNull(strMap8);
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.remove("");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap4 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable6 = strTrieMap4.get("");
        java.io.Serializable serializable8 = strTrieMap4.get("hi!");
        strTrieMap4.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap10 = strTrieMap4.toMap();
        java.io.Serializable serializable12 = strTrieMap4.remove("hi!");
        java.io.Serializable serializable14 = strTrieMap4.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.lang.Class<?> wildcardClass15 = strTrieMap4.getClass();
        java.io.Serializable serializable16 = strTrieMap0.put("hi!", (java.io.Serializable) wildcardClass15);
        boolean boolean18 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        java.io.Serializable serializable20 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {null}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(serializable20);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        boolean boolean7 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        boolean boolean9 = strTrieMap0.contains("");
        boolean boolean11 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap13 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable15 = strTrieMap13.get("");
        boolean boolean16 = strTrieMap13.validate();
        boolean boolean17 = strTrieMap13.validate();
        java.io.Serializable serializable19 = strTrieMap13.get("");
        boolean boolean21 = strTrieMap13.contains("hi!");
        boolean boolean22 = strTrieMap13.validate();
        java.lang.Class<?> wildcardClass23 = strTrieMap13.getClass();
        java.io.Serializable serializable24 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) wildcardClass23);
        java.util.Map<java.lang.String, java.io.Serializable> strMap25 = strTrieMap0.toMap();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(serializable19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNull(serializable24);
        org.junit.Assert.assertNotNull(strMap25);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        java.io.Serializable serializable7 = strTrieMap0.get("");
        boolean boolean8 = strTrieMap0.validate();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        boolean boolean8 = strTrieMap0.contains("hi!");
        java.lang.Class<?> wildcardClass9 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        boolean boolean5 = strTrieMap0.contains("");
        boolean boolean7 = strTrieMap0.contains("hi!");
        int int8 = strTrieMap0.size();
        boolean boolean10 = strTrieMap0.contains("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable13 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n");
        java.util.Map<java.lang.String, java.io.Serializable> strMap14 = strTrieMap0.toMap();
        java.io.Serializable serializable16 = strTrieMap0.remove("");
        boolean boolean18 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {class com.jwetherell.algorithms.data_structures.TrieMap}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        int int6 = strTrieMap0.size();
        java.io.Serializable serializable8 = strTrieMap0.get("hi!");
        boolean boolean10 = strTrieMap0.contains("hi!");
        boolean boolean12 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        java.util.Map<java.lang.String, java.io.Serializable> strMap13 = strTrieMap0.toMap();
        boolean boolean15 = strTrieMap0.contains("\u2514\u2500\u2500 null\n");
        boolean boolean17 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n");
        boolean boolean18 = strTrieMap0.validate();
        strTrieMap0.clear();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean6 = strTrieMap0.contains("hi!");
        boolean boolean7 = strTrieMap0.validate();
        boolean boolean8 = strTrieMap0.validate();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap5 = strTrieMap0.toMap();
        boolean boolean6 = strTrieMap0.validate();
        strTrieMap0.clear();
        boolean boolean9 = strTrieMap0.contains("\u2514\u2500\u2500 null\n");
        java.io.Serializable serializable11 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
        boolean boolean13 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {class com.jwetherell.algorithms.data_structures.TrieMap}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        java.io.Serializable serializable9 = strTrieMap0.remove("hi!");
        java.io.Serializable serializable11 = strTrieMap0.get("hi!");
        java.io.Serializable serializable13 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n");
        int int14 = strTrieMap0.size();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + true + "'", serializable9, true);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        boolean boolean8 = strTrieMap0.validate();
        java.io.Serializable serializable10 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n");
        java.lang.Class<?> wildcardClass11 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean4 = strTrieMap0.validate();
        java.io.Serializable serializable6 = strTrieMap0.get("");
        java.io.Serializable serializable8 = strTrieMap0.get("hi!");
        java.io.Serializable serializable10 = strTrieMap0.get("hi!");
        java.io.Serializable serializable12 = strTrieMap0.get("hi!");
        int int13 = strTrieMap0.size();
        java.lang.Class<?> wildcardClass14 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap8 = strTrieMap0.toMap();
        java.io.Serializable serializable10 = strTrieMap0.get("\u2514\u2500\u2500 null\n");
        java.io.Serializable serializable12 = strTrieMap0.get("\u2514\u2500\u2500 null\n");
        java.io.Serializable serializable14 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap16 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable18 = strTrieMap16.get("hi!");
        strTrieMap16.clear();
        boolean boolean21 = strTrieMap16.contains("");
        boolean boolean23 = strTrieMap16.contains("hi!");
        boolean boolean24 = strTrieMap16.validate();
        boolean boolean25 = strTrieMap16.validate();
        strTrieMap16.clear();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.lang.reflect.AnnotatedElement> strTrieMap28 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.lang.reflect.AnnotatedElement>();
        java.lang.Class<?> wildcardClass29 = strTrieMap28.getClass();
        java.io.Serializable serializable30 = strTrieMap16.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n", (java.io.Serializable) wildcardClass29);
        java.io.Serializable serializable31 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n", serializable30);
        java.io.Serializable serializable33 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {4}\n");
        strTrieMap0.clear();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNull(serializable18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNull(serializable30);
        org.junit.Assert.assertNull(serializable31);
        org.junit.Assert.assertNull(serializable33);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.io.Serializable serializable8 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        java.io.Serializable serializable10 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {4}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNull(serializable10);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean4 = strTrieMap0.validate();
        boolean boolean6 = strTrieMap0.contains("");
        java.io.Serializable serializable8 = strTrieMap0.get("");
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap11 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable13 = strTrieMap11.get("hi!");
        java.io.Serializable serializable15 = strTrieMap11.get("");
        strTrieMap11.clear();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap18 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable20 = strTrieMap18.get("hi!");
        java.io.Serializable serializable22 = strTrieMap18.get("");
        java.lang.Class<?> wildcardClass23 = strTrieMap18.getClass();
        java.io.Serializable serializable24 = strTrieMap11.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) wildcardClass23);
        java.io.Serializable serializable25 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.util.Map<java.lang.String, java.io.Serializable> strMap26 = strTrieMap0.toMap();
        boolean boolean27 = strTrieMap0.validate();
        java.io.Serializable serializable29 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertNull(serializable20);
        org.junit.Assert.assertNull(serializable22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNull(serializable24);
        org.junit.Assert.assertNull(serializable25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(serializable29);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        int int6 = strTrieMap0.size();
        java.io.Serializable serializable8 = strTrieMap0.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.io.Serializable serializable12 = strTrieMap0.remove("");
        int int13 = strTrieMap0.size();
        java.lang.Class<?> wildcardClass14 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean6 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable8 = strTrieMap0.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        int int10 = strTrieMap0.size();
        java.io.Serializable serializable12 = strTrieMap0.remove("hi!");
        int int13 = strTrieMap0.size();
        java.io.Serializable serializable15 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n");
        java.io.Serializable serializable17 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {}\n");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass18 = serializable17.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertNull(serializable17);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        strTrieMap0.clear();
        boolean boolean9 = strTrieMap0.validate();
        int int10 = strTrieMap0.size();
        boolean boolean11 = strTrieMap0.validate();
        java.lang.Class<?> wildcardClass12 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        strTrieMap0.clear();
        boolean boolean8 = strTrieMap0.validate();
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        strTrieMap0.clear();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strMap9);
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        java.io.Serializable serializable9 = strTrieMap0.get("");
        java.io.Serializable serializable11 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertNull(serializable11);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.remove("");
        boolean boolean3 = strTrieMap0.validate();
        java.io.Serializable serializable5 = strTrieMap0.remove("");
        boolean boolean6 = strTrieMap0.validate();
        boolean boolean7 = strTrieMap0.validate();
        java.io.Serializable serializable9 = strTrieMap0.remove("hi!");
        strTrieMap0.clear();
        int int11 = strTrieMap0.size();
        java.io.Serializable serializable13 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(serializable13);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean5 = strTrieMap0.contains("hi!");
        boolean boolean7 = strTrieMap0.contains("");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        java.io.Serializable serializable11 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        java.io.Serializable serializable13 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        int int14 = strTrieMap0.size();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap16 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable18 = strTrieMap16.get("");
        java.io.Serializable serializable20 = strTrieMap16.remove("");
        boolean boolean22 = strTrieMap16.contains("hi!");
        java.io.Serializable serializable24 = strTrieMap16.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap25 = strTrieMap16.toMap();
        int int26 = strTrieMap16.size();
        java.io.Serializable serializable28 = strTrieMap16.remove("hi!");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap30 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable32 = strTrieMap30.get("hi!");
        strTrieMap30.clear();
        java.io.Serializable serializable35 = strTrieMap30.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap36 = strTrieMap30.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap37 = strTrieMap30.toMap();
        java.lang.Class<?> wildcardClass38 = strTrieMap30.getClass();
        java.io.Serializable serializable39 = strTrieMap16.put("hi!", (java.io.Serializable) wildcardClass38);
        java.io.Serializable serializable40 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n", (java.io.Serializable) wildcardClass38);
        java.io.Serializable serializable42 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(serializable18);
        org.junit.Assert.assertNull(serializable20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(serializable24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(serializable28);
        org.junit.Assert.assertNull(serializable32);
        org.junit.Assert.assertNull(serializable35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNull(serializable39);
        org.junit.Assert.assertNull(serializable40);
        org.junit.Assert.assertNull(serializable42);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        int int8 = strTrieMap0.size();
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        java.io.Serializable serializable11 = strTrieMap0.remove("");
        java.io.Serializable serializable13 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {1}\n");
        java.util.Map<java.lang.String, java.io.Serializable> strMap14 = strTrieMap0.toMap();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertNotNull(strMap14);
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        java.io.Serializable serializable4 = strTrieMap0.get("");
        boolean boolean6 = strTrieMap0.contains("\u2514\u2500\u2500 null\n");
        java.io.Serializable serializable8 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.io.Serializable serializable10 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        int int11 = strTrieMap0.size();
        int int12 = strTrieMap0.size();
        boolean boolean14 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        boolean boolean16 = strTrieMap0.contains("\u2514\u2500\u2500 null\n");
        java.io.Serializable serializable18 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
        java.util.Map<java.lang.String, java.io.Serializable> strMap19 = strTrieMap0.toMap();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(serializable18);
        org.junit.Assert.assertNotNull(strMap19);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean5 = strTrieMap0.contains("hi!");
        boolean boolean7 = strTrieMap0.contains("hi!");
        boolean boolean8 = strTrieMap0.validate();
        strTrieMap0.clear();
        boolean boolean11 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n");
        int int12 = strTrieMap0.size();
        int int13 = strTrieMap0.size();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap15 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable17 = strTrieMap15.get("hi!");
        strTrieMap15.clear();
        boolean boolean20 = strTrieMap15.contains("");
        boolean boolean22 = strTrieMap15.contains("hi!");
        java.io.Serializable serializable25 = strTrieMap15.put("hi!", (java.io.Serializable) 10.0f);
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap27 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable29 = strTrieMap27.get("");
        boolean boolean30 = strTrieMap27.validate();
        boolean boolean31 = strTrieMap27.validate();
        boolean boolean33 = strTrieMap27.contains("");
        java.io.Serializable serializable35 = strTrieMap27.get("");
        int int36 = strTrieMap27.size();
        boolean boolean38 = strTrieMap27.contains("\u2514\u2500\u2500 null\n");
        strTrieMap27.clear();
        strTrieMap27.clear();
        boolean boolean41 = strTrieMap27.validate();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap43 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable45 = strTrieMap43.get("hi!");
        strTrieMap43.clear();
        boolean boolean48 = strTrieMap43.contains("");
        boolean boolean50 = strTrieMap43.contains("hi!");
        int int51 = strTrieMap43.size();
        boolean boolean53 = strTrieMap43.contains("\u2514\u2500\u2500 null\n");
        strTrieMap43.clear();
        java.lang.Class<?> wildcardClass55 = strTrieMap43.getClass();
        java.io.Serializable serializable56 = strTrieMap27.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) wildcardClass55);
        java.io.Serializable serializable57 = strTrieMap15.put("\u2514\u2500\u2500 null\n", (java.io.Serializable) wildcardClass55);
        java.io.Serializable serializable58 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {}\n", (java.io.Serializable) "\u2514\u2500\u2500 null\n");
        java.util.Map<java.lang.String, java.io.Serializable> strMap59 = strTrieMap0.toMap();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(serializable17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(serializable25);
        org.junit.Assert.assertNull(serializable29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(serializable35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(serializable45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNull(serializable56);
        org.junit.Assert.assertNull(serializable57);
        org.junit.Assert.assertNull(serializable58);
        org.junit.Assert.assertNotNull(strMap59);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean5 = strTrieMap0.contains("hi!");
        boolean boolean7 = strTrieMap0.contains("hi!");
        boolean boolean8 = strTrieMap0.validate();
        strTrieMap0.clear();
        boolean boolean11 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n");
        int int12 = strTrieMap0.size();
        int int13 = strTrieMap0.size();
        java.io.Serializable serializable15 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {class com.jwetherell.algorithms.data_structures.TrieMap}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(serializable15);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        boolean boolean9 = strTrieMap0.contains("");
        java.util.Map<java.lang.String, java.io.Serializable> strMap10 = strTrieMap0.toMap();
        java.lang.String str11 = strTrieMap0.toString();
        int int12 = strTrieMap0.size();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n" + "'", str11, "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean4 = strTrieMap0.validate();
        java.io.Serializable serializable6 = strTrieMap0.get("hi!");
        boolean boolean8 = strTrieMap0.contains("");
        boolean boolean9 = strTrieMap0.validate();
        int int10 = strTrieMap0.size();
        java.io.Serializable serializable12 = null;
        java.io.Serializable serializable13 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n", serializable12);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass14 = serializable13.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(serializable13);
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.remove("");
        boolean boolean3 = strTrieMap0.validate();
        java.io.Serializable serializable5 = strTrieMap0.remove("");
        boolean boolean6 = strTrieMap0.validate();
        boolean boolean7 = strTrieMap0.validate();
        java.io.Serializable serializable9 = strTrieMap0.remove("hi!");
        boolean boolean11 = strTrieMap0.contains("");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        strTrieMap0.clear();
        int int9 = strTrieMap0.size();
        int int10 = strTrieMap0.size();
        java.io.Serializable serializable12 = strTrieMap0.get("hi!");
        java.io.Serializable serializable14 = strTrieMap0.get("\u2514\u2500\u2500 null\n");
        java.util.Map<java.lang.String, java.io.Serializable> strMap15 = strTrieMap0.toMap();
        boolean boolean17 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean6 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable8 = strTrieMap0.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        int int10 = strTrieMap0.size();
        java.io.Serializable serializable12 = strTrieMap0.remove("hi!");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap14 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable16 = strTrieMap14.get("hi!");
        strTrieMap14.clear();
        java.io.Serializable serializable19 = strTrieMap14.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap20 = strTrieMap14.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap21 = strTrieMap14.toMap();
        java.lang.Class<?> wildcardClass22 = strTrieMap14.getClass();
        java.io.Serializable serializable23 = strTrieMap0.put("hi!", (java.io.Serializable) wildcardClass22);
        java.util.Map<java.lang.String, java.io.Serializable> strMap24 = strTrieMap0.toMap();
        strTrieMap0.clear();
        boolean boolean26 = strTrieMap0.validate();
        int int27 = strTrieMap0.size();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertNull(serializable19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNull(serializable23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        strTrieMap0.clear();
        boolean boolean4 = strTrieMap0.validate();
        boolean boolean6 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n");
        boolean boolean8 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        strTrieMap0.clear();
        int int10 = strTrieMap0.size();
        boolean boolean11 = strTrieMap0.validate();
        boolean boolean13 = strTrieMap0.contains("\u2514\u2500\u2500 null\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        boolean boolean7 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable9 = strTrieMap0.get("");
        strTrieMap0.clear();
        boolean boolean11 = strTrieMap0.validate();
        java.io.Serializable serializable13 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        java.io.Serializable serializable15 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        java.util.Map<java.lang.String, java.io.Serializable> strMap16 = strTrieMap0.toMap();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertNotNull(strMap16);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        java.util.Map<java.lang.String, java.io.Serializable> strMap5 = strTrieMap0.toMap();
        java.io.Serializable serializable8 = strTrieMap0.put("hi!", (java.io.Serializable) 0.0f);
        boolean boolean9 = strTrieMap0.validate();
        boolean boolean11 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        boolean boolean13 = strTrieMap0.contains("");
        java.util.Map<java.lang.String, java.io.Serializable> strMap14 = strTrieMap0.toMap();
        int int15 = strTrieMap0.size();
        int int16 = strTrieMap0.size();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        int int6 = strTrieMap0.size();
        java.io.Serializable serializable8 = strTrieMap0.get("hi!");
        boolean boolean10 = strTrieMap0.contains("hi!");
        boolean boolean12 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        java.util.Map<java.lang.String, java.io.Serializable> strMap13 = strTrieMap0.toMap();
        boolean boolean15 = strTrieMap0.contains("\u2514\u2500\u2500 null\n");
        boolean boolean17 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n");
        java.io.Serializable serializable19 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap21 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable23 = strTrieMap21.get("hi!");
        strTrieMap21.clear();
        boolean boolean26 = strTrieMap21.contains("");
        boolean boolean28 = strTrieMap21.contains("hi!");
        boolean boolean29 = strTrieMap21.validate();
        boolean boolean30 = strTrieMap21.validate();
        strTrieMap21.clear();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.lang.reflect.AnnotatedElement> strTrieMap33 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.lang.reflect.AnnotatedElement>();
        java.lang.Class<?> wildcardClass34 = strTrieMap33.getClass();
        java.io.Serializable serializable35 = strTrieMap21.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n", (java.io.Serializable) wildcardClass34);
        java.io.Serializable serializable36 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n", (java.io.Serializable) "\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass37 = serializable36.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(serializable19);
        org.junit.Assert.assertNull(serializable23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNull(serializable35);
        org.junit.Assert.assertNull(serializable36);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        strTrieMap0.clear();
        int int9 = strTrieMap0.size();
        int int10 = strTrieMap0.size();
        java.io.Serializable serializable12 = strTrieMap0.get("hi!");
        int int13 = strTrieMap0.size();
        java.io.Serializable serializable15 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        strTrieMap0.clear();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap19 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable21 = strTrieMap19.get("");
        java.io.Serializable serializable23 = strTrieMap19.remove("");
        boolean boolean24 = strTrieMap19.validate();
        int int25 = strTrieMap19.size();
        java.io.Serializable serializable27 = strTrieMap19.remove("");
        java.util.Map<java.lang.String, java.io.Serializable> strMap28 = strTrieMap19.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap29 = strTrieMap19.toMap();
        java.lang.Class<?> wildcardClass30 = strTrieMap19.getClass();
        java.io.Serializable serializable31 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {4}\n", (java.io.Serializable) wildcardClass30);
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertNull(serializable21);
        org.junit.Assert.assertNull(serializable23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(serializable27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNull(serializable31);
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean4 = strTrieMap0.validate();
        boolean boolean6 = strTrieMap0.contains("");
        java.io.Serializable serializable8 = strTrieMap0.get("");
        int int9 = strTrieMap0.size();
        boolean boolean11 = strTrieMap0.contains("\u2514\u2500\u2500 null\n");
        strTrieMap0.clear();
        java.io.Serializable serializable14 = strTrieMap0.get("hi!");
        int int15 = strTrieMap0.size();
        java.io.Serializable serializable17 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(serializable17);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        java.io.Serializable serializable9 = strTrieMap0.remove("hi!");
        java.lang.String str10 = strTrieMap0.toString();
        strTrieMap0.clear();
        java.io.Serializable serializable13 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        strTrieMap0.clear();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + true + "'", serializable9, true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\u2514\u2500\u2500 null\n" + "'", str10, "\u2514\u2500\u2500 null\n");
        org.junit.Assert.assertNull(serializable13);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        boolean boolean5 = strTrieMap0.contains("");
        boolean boolean7 = strTrieMap0.contains("hi!");
        int int8 = strTrieMap0.size();
        boolean boolean9 = strTrieMap0.validate();
        java.io.Serializable serializable11 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
        boolean boolean12 = strTrieMap0.validate();
        boolean boolean14 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {0.0}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        java.io.Serializable serializable6 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable6);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap9 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.lang.Class<?> wildcardClass10 = strTrieMap9.getClass();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) wildcardClass10);
        boolean boolean13 = strTrieMap0.contains("hi!");
        int int14 = strTrieMap0.size();
        java.io.Serializable serializable16 = strTrieMap0.get("hi!");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertEquals("'" + serializable16 + "' != '" + 100 + "'", serializable16, 100);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean4 = strTrieMap0.validate();
        boolean boolean6 = strTrieMap0.contains("");
        java.io.Serializable serializable8 = strTrieMap0.get("");
        int int9 = strTrieMap0.size();
        boolean boolean11 = strTrieMap0.contains("\u2514\u2500\u2500 null\n");
        int int12 = strTrieMap0.size();
        boolean boolean13 = strTrieMap0.validate();
        strTrieMap0.clear();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        strTrieMap0.clear();
        boolean boolean9 = strTrieMap0.validate();
        boolean boolean11 = strTrieMap0.contains("");
        boolean boolean13 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {class com.jwetherell.algorithms.data_structures.TrieMap}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        boolean boolean5 = strTrieMap0.contains("");
        boolean boolean7 = strTrieMap0.contains("hi!");
        boolean boolean8 = strTrieMap0.validate();
        boolean boolean9 = strTrieMap0.validate();
        strTrieMap0.clear();
        boolean boolean11 = strTrieMap0.validate();
        java.util.Map<java.lang.String, java.io.Serializable> strMap12 = strTrieMap0.toMap();
        java.io.Serializable serializable14 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n");
        java.io.Serializable serializable17 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {null}\n", (java.io.Serializable) (byte) 10);
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNull(serializable17);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        boolean boolean6 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        java.io.Serializable serializable9 = strTrieMap0.put("\u2514\u2500\u2500 null\n", (java.io.Serializable) (short) 100);
        boolean boolean10 = strTrieMap0.validate();
        strTrieMap0.clear();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        java.io.Serializable serializable9 = strTrieMap0.remove("hi!");
        java.lang.String str10 = strTrieMap0.toString();
        strTrieMap0.clear();
        java.io.Serializable serializable13 = strTrieMap0.get("hi!");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap15 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable17 = strTrieMap15.get("");
        java.io.Serializable serializable19 = strTrieMap15.get("hi!");
        strTrieMap15.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap21 = strTrieMap15.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap22 = strTrieMap15.toMap();
        strTrieMap15.clear();
        java.io.Serializable serializable26 = strTrieMap15.put("hi!", (java.io.Serializable) 1.0f);
        java.io.Serializable serializable28 = strTrieMap15.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        java.io.Serializable serializable30 = strTrieMap15.get("");
        boolean boolean31 = strTrieMap15.validate();
        java.lang.Class<?> wildcardClass32 = strTrieMap15.getClass();
        java.io.Serializable serializable33 = strTrieMap0.put("hi!", (java.io.Serializable) wildcardClass32);
        boolean boolean34 = strTrieMap0.validate();
        int int35 = strTrieMap0.size();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertEquals("'" + serializable9 + "' != '" + true + "'", serializable9, true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\u2514\u2500\u2500 null\n" + "'", str10, "\u2514\u2500\u2500 null\n");
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertNull(serializable17);
        org.junit.Assert.assertNull(serializable19);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(serializable26);
        org.junit.Assert.assertNull(serializable28);
        org.junit.Assert.assertNull(serializable30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNull(serializable33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        strTrieMap0.clear();
        int int9 = strTrieMap0.size();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap11 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable13 = strTrieMap11.get("hi!");
        strTrieMap11.clear();
        java.io.Serializable serializable16 = strTrieMap11.get("hi!");
        boolean boolean18 = strTrieMap11.contains("hi!");
        java.io.Serializable serializable20 = strTrieMap11.get("");
        java.util.Map<java.lang.String, java.io.Serializable> strMap21 = strTrieMap11.toMap();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap23 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable25 = strTrieMap23.get("hi!");
        boolean boolean26 = strTrieMap23.validate();
        boolean boolean28 = strTrieMap23.contains("hi!");
        int int29 = strTrieMap23.size();
        java.lang.Class<?> wildcardClass30 = strTrieMap23.getClass();
        java.io.Serializable serializable31 = strTrieMap11.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n", (java.io.Serializable) wildcardClass30);
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable32 = strTrieMap0.put("", serializable31);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(serializable20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(serializable25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNull(serializable31);
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) 1.0f);
        java.io.Serializable serializable13 = strTrieMap0.get("");
        java.io.Serializable serializable15 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        java.io.Serializable serializable17 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {1}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertNull(serializable17);
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap10 = strTrieMap0.toMap();
        boolean boolean11 = strTrieMap0.validate();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        int int8 = strTrieMap0.size();
        java.util.Map<java.lang.String, java.io.Serializable> strMap9 = strTrieMap0.toMap();
        java.io.Serializable serializable11 = strTrieMap0.remove("");
        java.util.Map<java.lang.String, java.io.Serializable> strMap12 = strTrieMap0.toMap();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap14 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable16 = strTrieMap14.get("hi!");
        boolean boolean17 = strTrieMap14.validate();
        boolean boolean19 = strTrieMap14.contains("hi!");
        boolean boolean20 = strTrieMap14.validate();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap22 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable24 = strTrieMap22.get("");
        boolean boolean26 = strTrieMap22.contains("hi!");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap28 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable30 = strTrieMap28.get("hi!");
        java.io.Serializable serializable32 = strTrieMap28.get("");
        java.lang.Class<?> wildcardClass33 = strTrieMap28.getClass();
        java.io.Serializable serializable34 = strTrieMap22.put("hi!", (java.io.Serializable) wildcardClass33);
        java.lang.Class<?> wildcardClass35 = strTrieMap22.getClass();
        java.io.Serializable serializable36 = strTrieMap14.put("hi!", (java.io.Serializable) wildcardClass35);
        java.lang.Class<?> wildcardClass37 = strTrieMap14.getClass();
        java.io.Serializable serializable38 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n", (java.io.Serializable) wildcardClass37);
        java.io.Serializable serializable40 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(serializable24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(serializable30);
        org.junit.Assert.assertNull(serializable32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNull(serializable34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNull(serializable36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNull(serializable38);
        org.junit.Assert.assertNull(serializable40);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.remove("");
        boolean boolean3 = strTrieMap0.validate();
        java.io.Serializable serializable5 = strTrieMap0.remove("");
        strTrieMap0.clear();
        java.lang.Class<?> wildcardClass7 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean4 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) 100);
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap9 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.lang.Class<?> wildcardClass10 = strTrieMap9.getClass();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) wildcardClass10);
        boolean boolean13 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable15 = null;
        java.io.Serializable serializable16 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", serializable15);
        java.io.Serializable serializable18 = strTrieMap0.remove("\u2514\u2500\u2500 null\n");
        boolean boolean19 = strTrieMap0.validate();
        java.io.Serializable serializable21 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {}\n");
        java.io.Serializable serializable23 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n");
        int int24 = strTrieMap0.size();
        strTrieMap0.clear();
        int int26 = strTrieMap0.size();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str27 = strTrieMap0.toString();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertNull(serializable18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(serializable21);
        org.junit.Assert.assertNull(serializable23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        boolean boolean8 = strTrieMap0.contains("hi!");
        java.io.Serializable serializable10 = strTrieMap0.remove("hi!");
        java.io.Serializable serializable13 = strTrieMap0.put("hi!", (java.io.Serializable) "");
        int int14 = strTrieMap0.size();
        strTrieMap0.clear();
        boolean boolean17 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n");
        java.util.Map<java.lang.String, java.io.Serializable> strMap18 = strTrieMap0.toMap();
        java.io.Serializable serializable20 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n");
        java.io.Serializable serializable22 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(serializable20);
        org.junit.Assert.assertNull(serializable22);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        java.io.Serializable serializable4 = strTrieMap0.get("");
        strTrieMap0.clear();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap7 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable9 = strTrieMap7.get("hi!");
        boolean boolean10 = strTrieMap7.validate();
        boolean boolean12 = strTrieMap7.contains("hi!");
        boolean boolean14 = strTrieMap7.contains("");
        strTrieMap7.clear();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap17 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable19 = strTrieMap17.get("");
        boolean boolean21 = strTrieMap17.contains("hi!");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap23 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable25 = strTrieMap23.get("hi!");
        java.io.Serializable serializable27 = strTrieMap23.get("");
        java.lang.Class<?> wildcardClass28 = strTrieMap23.getClass();
        java.io.Serializable serializable29 = strTrieMap17.put("hi!", (java.io.Serializable) wildcardClass28);
        java.util.Map<java.lang.String, java.io.Serializable> strMap30 = strTrieMap17.toMap();
        java.lang.Class<?> wildcardClass31 = strMap30.getClass();
        java.io.Serializable serializable32 = strTrieMap7.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n", (java.io.Serializable) wildcardClass31);
        java.io.Serializable serializable34 = null;
        java.io.Serializable serializable35 = strTrieMap7.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {}\n", serializable34);
        java.io.Serializable serializable37 = strTrieMap7.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
        java.io.Serializable serializable38 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n", serializable37);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass39 = serializable38.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(serializable19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(serializable25);
        org.junit.Assert.assertNull(serializable27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNull(serializable29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNull(serializable32);
        org.junit.Assert.assertNull(serializable35);
        org.junit.Assert.assertNotNull(serializable37);
        org.junit.Assert.assertNull(serializable38);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        strTrieMap0.clear();
        int int9 = strTrieMap0.size();
        int int10 = strTrieMap0.size();
        boolean boolean12 = strTrieMap0.contains("hi!");
        strTrieMap0.clear();
        boolean boolean15 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {null}\n");
        java.io.Serializable serializable17 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n");
        boolean boolean18 = strTrieMap0.validate();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(serializable17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        int int6 = strTrieMap0.size();
        java.io.Serializable serializable8 = strTrieMap0.get("hi!");
        boolean boolean10 = strTrieMap0.contains("hi!");
        boolean boolean12 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {1}\n");
        java.io.Serializable serializable14 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass15 = serializable14.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(serializable14);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.remove("");
        boolean boolean3 = strTrieMap0.validate();
        java.io.Serializable serializable5 = strTrieMap0.remove("");
        boolean boolean6 = strTrieMap0.validate();
        strTrieMap0.clear();
        boolean boolean8 = strTrieMap0.validate();
        java.io.Serializable serializable10 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n");
        java.io.Serializable serializable12 = strTrieMap0.get("");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(serializable10);
        org.junit.Assert.assertNull(serializable12);
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        boolean boolean7 = strTrieMap0.contains("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap8 = strTrieMap0.toMap();
        boolean boolean10 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.util.Map<java.lang.String, java.io.Serializable> strMap11 = strTrieMap0.toMap();
        java.io.Serializable serializable13 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.io.Serializable serializable15 = strTrieMap0.get("");
        java.io.Serializable serializable17 = strTrieMap0.get("");
        java.io.Serializable serializable19 = strTrieMap0.remove("");
        strTrieMap0.clear();
        java.io.Serializable serializable22 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {4}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertNull(serializable17);
        org.junit.Assert.assertNull(serializable19);
        org.junit.Assert.assertNull(serializable22);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        boolean boolean7 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        java.io.Serializable serializable9 = strTrieMap0.get("");
        int int10 = strTrieMap0.size();
        int int11 = strTrieMap0.size();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        strTrieMap0.clear();
        int int9 = strTrieMap0.size();
        int int10 = strTrieMap0.size();
        java.io.Serializable serializable12 = strTrieMap0.get("hi!");
        int int13 = strTrieMap0.size();
        java.io.Serializable serializable16 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n", (java.io.Serializable) 10.0f);
        boolean boolean18 = strTrieMap0.contains("hi!");
        strTrieMap0.clear();
        boolean boolean21 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        boolean boolean23 = strTrieMap0.contains("");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(serializable12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean4 = strTrieMap0.validate();
        java.io.Serializable serializable6 = strTrieMap0.get("hi!");
        boolean boolean8 = strTrieMap0.contains("");
        int int9 = strTrieMap0.size();
        boolean boolean11 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        boolean boolean12 = strTrieMap0.validate();
        int int13 = strTrieMap0.size();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(serializable6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        java.io.Serializable serializable4 = strTrieMap0.get("");
        strTrieMap0.clear();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap7 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable9 = strTrieMap7.get("hi!");
        java.io.Serializable serializable11 = strTrieMap7.get("");
        java.lang.Class<?> wildcardClass12 = strTrieMap7.getClass();
        java.io.Serializable serializable13 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n", (java.io.Serializable) wildcardClass12);
        int int14 = strTrieMap0.size();
        boolean boolean16 = strTrieMap0.contains("\u2514\u2500\u2500 null\n");
        java.lang.Class<?> wildcardClass17 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable9);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) 1.0f);
        java.io.Serializable serializable13 = strTrieMap0.get("");
        int int14 = strTrieMap0.size();
        java.io.Serializable serializable16 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        int int17 = strTrieMap0.size();
        boolean boolean18 = strTrieMap0.validate();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        int int6 = strTrieMap0.size();
        java.io.Serializable serializable8 = strTrieMap0.get("hi!");
        boolean boolean10 = strTrieMap0.contains("hi!");
        boolean boolean12 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        int int13 = strTrieMap0.size();
        java.io.Serializable serializable15 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        boolean boolean16 = strTrieMap0.validate();
        java.io.Serializable serializable18 = strTrieMap0.remove("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass19 = serializable18.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(serializable18);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("");
        boolean boolean5 = strTrieMap0.validate();
        int int6 = strTrieMap0.size();
        java.io.Serializable serializable8 = strTrieMap0.get("hi!");
        boolean boolean10 = strTrieMap0.contains("hi!");
        boolean boolean12 = strTrieMap0.contains("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {1}\n");
        java.io.Serializable serializable14 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n");
        java.lang.Class<?> wildcardClass15 = strTrieMap0.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(serializable14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) 1.0f);
        java.io.Serializable serializable13 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        java.io.Serializable serializable15 = strTrieMap0.get("");
        java.io.Serializable serializable17 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap19 = strTrieMap0.toMap();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap21 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable23 = strTrieMap21.get("hi!");
        boolean boolean24 = strTrieMap21.validate();
        boolean boolean26 = strTrieMap21.contains("hi!");
        boolean boolean27 = strTrieMap21.validate();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap29 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable31 = strTrieMap29.get("");
        boolean boolean33 = strTrieMap29.contains("hi!");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap35 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable37 = strTrieMap35.get("hi!");
        java.io.Serializable serializable39 = strTrieMap35.get("");
        java.lang.Class<?> wildcardClass40 = strTrieMap35.getClass();
        java.io.Serializable serializable41 = strTrieMap29.put("hi!", (java.io.Serializable) wildcardClass40);
        java.lang.Class<?> wildcardClass42 = strTrieMap29.getClass();
        java.io.Serializable serializable43 = strTrieMap21.put("hi!", (java.io.Serializable) wildcardClass42);
        java.lang.Class<?> wildcardClass44 = strTrieMap21.getClass();
        java.io.Serializable serializable45 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n", (java.io.Serializable) wildcardClass44);
        java.io.Serializable serializable47 = strTrieMap0.get("");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(serializable13);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertNull(serializable17);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(serializable23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(serializable31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(serializable37);
        org.junit.Assert.assertNull(serializable39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNull(serializable41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNull(serializable43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNull(serializable45);
        org.junit.Assert.assertNull(serializable47);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.io.Serializable serializable5 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        strTrieMap0.clear();
        int int8 = strTrieMap0.size();
        int int9 = strTrieMap0.size();
        java.io.Serializable serializable11 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap13 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable15 = strTrieMap13.get("hi!");
        boolean boolean16 = strTrieMap13.validate();
        boolean boolean18 = strTrieMap13.contains("hi!");
        boolean boolean20 = strTrieMap13.contains("");
        strTrieMap13.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap22 = strTrieMap13.toMap();
        java.io.Serializable serializable24 = strTrieMap13.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n");
        java.io.Serializable serializable26 = strTrieMap13.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {100}\n");
        int int27 = strTrieMap13.size();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap29 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable31 = strTrieMap29.get("");
        java.io.Serializable serializable33 = strTrieMap29.remove("");
        boolean boolean35 = strTrieMap29.contains("hi!");
        java.io.Serializable serializable37 = strTrieMap29.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap38 = strTrieMap29.toMap();
        int int39 = strTrieMap29.size();
        java.io.Serializable serializable41 = strTrieMap29.remove("hi!");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap43 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable45 = strTrieMap43.get("hi!");
        strTrieMap43.clear();
        java.io.Serializable serializable48 = strTrieMap43.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap49 = strTrieMap43.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap50 = strTrieMap43.toMap();
        java.lang.Class<?> wildcardClass51 = strTrieMap43.getClass();
        java.io.Serializable serializable52 = strTrieMap29.put("hi!", (java.io.Serializable) wildcardClass51);
        java.io.Serializable serializable53 = strTrieMap13.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n", (java.io.Serializable) wildcardClass51);
        java.io.Serializable serializable54 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n", (java.io.Serializable) "\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {100}\n");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(serializable24);
        org.junit.Assert.assertNull(serializable26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(serializable31);
        org.junit.Assert.assertNull(serializable33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(serializable37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(serializable41);
        org.junit.Assert.assertNull(serializable45);
        org.junit.Assert.assertNull(serializable48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNull(serializable52);
        org.junit.Assert.assertNull(serializable53);
        org.junit.Assert.assertNull(serializable54);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        strTrieMap0.clear();
        java.util.Map<java.lang.String, java.io.Serializable> strMap6 = strTrieMap0.toMap();
        java.util.Map<java.lang.String, java.io.Serializable> strMap7 = strTrieMap0.toMap();
        strTrieMap0.clear();
        java.io.Serializable serializable11 = strTrieMap0.put("hi!", (java.io.Serializable) 1.0f);
        java.util.Map<java.lang.String, java.io.Serializable> strMap12 = strTrieMap0.toMap();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap14 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable16 = strTrieMap14.get("hi!");
        strTrieMap14.clear();
        java.io.Serializable serializable19 = strTrieMap14.get("hi!");
        boolean boolean21 = strTrieMap14.contains("hi!");
        java.io.Serializable serializable23 = strTrieMap14.get("");
        java.io.Serializable serializable25 = strTrieMap14.get("");
        int int26 = strTrieMap14.size();
        java.lang.Class<?> wildcardClass27 = strTrieMap14.getClass();
        java.io.Serializable serializable28 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {1.0}\n", (java.io.Serializable) wildcardClass27);
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(serializable11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertNull(serializable19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(serializable23);
        org.junit.Assert.assertNull(serializable25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNull(serializable28);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        strTrieMap0.clear();
        int int9 = strTrieMap0.size();
        int int10 = strTrieMap0.size();
        boolean boolean12 = strTrieMap0.contains("hi!");
        strTrieMap0.clear();
        int int14 = strTrieMap0.size();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap16 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable18 = strTrieMap16.get("");
        boolean boolean20 = strTrieMap16.contains("hi!");
        java.io.Serializable serializable23 = strTrieMap16.put("hi!", (java.io.Serializable) 100);
        strTrieMap16.clear();
        java.lang.Class<?> wildcardClass25 = strTrieMap16.getClass();
        java.io.Serializable serializable26 = strTrieMap0.put("hi!", (java.io.Serializable) wildcardClass25);
        java.io.Serializable serializable28 = strTrieMap0.get("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {class com.jwetherell.algorithms.data_structures.TrieMap}\n");
        java.util.Map<java.lang.String, java.io.Serializable> strMap29 = strTrieMap0.toMap();
        java.lang.Class<?> wildcardClass30 = strMap29.getClass();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(serializable18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(serializable23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNull(serializable26);
        org.junit.Assert.assertNull(serializable28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.remove("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {}\n");
        boolean boolean5 = strTrieMap0.validate();
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        boolean boolean3 = strTrieMap0.validate();
        boolean boolean4 = strTrieMap0.validate();
        boolean boolean6 = strTrieMap0.contains("");
        java.io.Serializable serializable8 = strTrieMap0.get("");
        int int9 = strTrieMap0.size();
        strTrieMap0.clear();
        boolean boolean12 = strTrieMap0.contains("\u2514\u2500\u2500 null\n");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap14 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable16 = strTrieMap14.get("hi!");
        java.io.Serializable serializable18 = strTrieMap14.get("");
        java.io.Serializable serializable20 = strTrieMap14.get("\u2514\u2500\u2500 null\n");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap22 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable24 = strTrieMap22.get("");
        boolean boolean25 = strTrieMap22.validate();
        boolean boolean26 = strTrieMap22.validate();
        java.io.Serializable serializable28 = strTrieMap22.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap29 = strTrieMap22.toMap();
        int int30 = strTrieMap22.size();
        java.lang.Class<?> wildcardClass31 = strTrieMap22.getClass();
        java.io.Serializable serializable32 = strTrieMap14.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {10}\n", (java.io.Serializable) wildcardClass31);
        java.io.Serializable serializable33 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {}\n", (java.io.Serializable) wildcardClass31);
        java.io.Serializable serializable35 = strTrieMap0.get("");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap37 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable39 = strTrieMap37.get("");
        boolean boolean40 = strTrieMap37.validate();
        boolean boolean41 = strTrieMap37.validate();
        java.io.Serializable serializable43 = strTrieMap37.get("");
        boolean boolean45 = strTrieMap37.contains("hi!");
        int int46 = strTrieMap37.size();
        java.io.Serializable serializable48 = strTrieMap37.remove("");
        boolean boolean49 = strTrieMap37.validate();
        java.lang.Class<?> wildcardClass50 = strTrieMap37.getClass();
        java.io.Serializable serializable51 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500\u2514\n\u2514\u2500\u2500\u2514\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500\n\u2514\u2500\u2500\u2514\u2500\u2500 \n\u2514\u2500\u2500\u2514\u2500\u2500 n\n\u2514\u2500\u2500\u2514\u2500\u2500 nu\n\u2514\u2500\u2500\u2514\u2500\u2500 nul\n\u2514\u2500\u2500\u2514\u2500\u2500 null\n\u2514\u2500\u2500 (\n\u2514\u2500\u2500 null\n = {1}\n", (java.io.Serializable) wildcardClass50);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass52 = serializable51.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(serializable8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(serializable16);
        org.junit.Assert.assertNull(serializable18);
        org.junit.Assert.assertNull(serializable20);
        org.junit.Assert.assertNull(serializable24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(serializable28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNull(serializable32);
        org.junit.Assert.assertNull(serializable33);
        org.junit.Assert.assertNull(serializable35);
        org.junit.Assert.assertNull(serializable39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(serializable43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNull(serializable48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNull(serializable51);
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap0 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable2 = strTrieMap0.get("");
        java.io.Serializable serializable4 = strTrieMap0.get("hi!");
        java.io.Serializable serializable7 = strTrieMap0.put("hi!", (java.io.Serializable) true);
        int int8 = strTrieMap0.size();
        java.io.Serializable serializable10 = strTrieMap0.get("hi!");
        java.util.Map<java.lang.String, java.io.Serializable> strMap11 = strTrieMap0.toMap();
        com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable> strTrieMap13 = new com.jwetherell.algorithms.data_structures.TrieMap<java.lang.String, java.io.Serializable>();
        java.io.Serializable serializable15 = strTrieMap13.remove("");
        boolean boolean16 = strTrieMap13.validate();
        boolean boolean17 = strTrieMap13.validate();
        boolean boolean19 = strTrieMap13.contains("");
        java.lang.Class<?> wildcardClass20 = strTrieMap13.getClass();
        java.io.Serializable serializable21 = strTrieMap0.put("\u2514\u2500\u2500 null\n\u2514\u2500\u2500 h\n\u2514\u2500\u2500 hi\n\u2514\u2500\u2500 (!) hi! = {true}\n", (java.io.Serializable) wildcardClass20);
        boolean boolean23 = strTrieMap0.contains("");
        org.junit.Assert.assertNull(serializable2);
        org.junit.Assert.assertNull(serializable4);
        org.junit.Assert.assertNull(serializable7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + serializable10 + "' != '" + true + "'", serializable10, true);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(serializable15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNull(serializable21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }
}

